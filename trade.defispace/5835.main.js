/*! For license information please see 5835.main.js.LICENSE.txt */
(self.webpackChunkmy_swap=self.webpackChunkmy_swap||[]).push([[5835],{39809:(t,i,e)=>{"use strict";const r=i;r.bignum=e(4590),r.define=e(22500).define,r.base=e(71979),r.constants=e(36826),r.decoders=e(78307),r.encoders=e(56579)},22500:(t,i,e)=>{"use strict";const r=e(56579),n=e(78307),h=e(35717);function o(t,i){this.name=t,this.body=i,this.decoders={},this.encoders={}}i.define=function(t,i){return new o(t,i)},o.prototype._createNamed=function(t){const i=this.name;function e(t){this._initNamed(t,i)}return h(e,t),e.prototype._initNamed=function(i,e){t.call(this,i,e)},new e(this)},o.prototype._getDecoder=function(t){return t=t||"der",this.decoders.hasOwnProperty(t)||(this.decoders[t]=this._createNamed(n[t])),this.decoders[t]},o.prototype.decode=function(t,i,e){return this._getDecoder(i).decode(t,e)},o.prototype._getEncoder=function(t){return t=t||"der",this.encoders.hasOwnProperty(t)||(this.encoders[t]=this._createNamed(r[t])),this.encoders[t]},o.prototype.encode=function(t,i,e){return this._getEncoder(i).encode(t,e)}},36625:(t,i,e)=>{"use strict";const r=e(35717),n=e(98465).b,h=e(2399).Buffer;function o(t,i){n.call(this,i),h.isBuffer(t)?(this.base=t,this.offset=0,this.length=t.length):this.error("Input not Buffer")}function s(t,i){if(Array.isArray(t))this.length=0,this.value=t.map((function(t){return s.isEncoderBuffer(t)||(t=new s(t,i)),this.length+=t.length,t}),this);else if("number"==typeof t){if(!(0<=t&&t<=255))return i.error("non-byte EncoderBuffer value");this.value=t,this.length=1}else if("string"==typeof t)this.value=t,this.length=h.byteLength(t);else{if(!h.isBuffer(t))return i.error("Unsupported type: "+typeof t);this.value=t,this.length=t.length}}r(o,n),i.C=o,o.isDecoderBuffer=function(t){return t instanceof o||"object"==typeof t&&h.isBuffer(t.base)&&"DecoderBuffer"===t.constructor.name&&"number"==typeof t.offset&&"number"==typeof t.length&&"function"==typeof t.save&&"function"==typeof t.restore&&"function"==typeof t.isEmpty&&"function"==typeof t.readUInt8&&"function"==typeof t.skip&&"function"==typeof t.raw},o.prototype.save=function(){return{offset:this.offset,reporter:n.prototype.save.call(this)}},o.prototype.restore=function(t){const i=new o(this.base);return i.offset=t.offset,i.length=this.offset,this.offset=t.offset,n.prototype.restore.call(this,t.reporter),i},o.prototype.isEmpty=function(){return this.offset===this.length},o.prototype.readUInt8=function(t){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(t||"DecoderBuffer overrun")},o.prototype.skip=function(t,i){if(!(this.offset+t<=this.length))return this.error(i||"DecoderBuffer overrun");const e=new o(this.base);return e._reporterState=this._reporterState,e.offset=this.offset,e.length=this.offset+t,this.offset+=t,e},o.prototype.raw=function(t){return this.base.slice(t?t.offset:this.offset,this.length)},i.R=s,s.isEncoderBuffer=function(t){return t instanceof s||"object"==typeof t&&"EncoderBuffer"===t.constructor.name&&"number"==typeof t.length&&"function"==typeof t.join},s.prototype.join=function(t,i){return t||(t=h.alloc(this.length)),i||(i=0),0===this.length||(Array.isArray(this.value)?this.value.forEach((function(e){e.join(t,i),i+=e.length})):("number"==typeof this.value?t[i]=this.value:"string"==typeof this.value?t.write(this.value,i):h.isBuffer(this.value)&&this.value.copy(t,i),i+=this.length)),t}},71979:(t,i,e)=>{"use strict";const r=i;r.Reporter=e(98465).b,r.DecoderBuffer=e(36625).C,r.EncoderBuffer=e(36625).R,r.Node=e(41949)},41949:(t,i,e)=>{"use strict";const r=e(98465).b,n=e(36625).R,h=e(36625).C,o=e(79746),s=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],u=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(s);function a(t,i,e){const r={};this._baseState=r,r.name=e,r.enc=t,r.parent=i||null,r.children=null,r.tag=null,r.args=null,r.reverseArgs=null,r.choice=null,r.optional=!1,r.any=!1,r.obj=!1,r.use=null,r.useDecoder=null,r.key=null,r.default=null,r.explicit=null,r.implicit=null,r.contains=null,r.parent||(r.children=[],this._wrap())}t.exports=a;const l=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];a.prototype.clone=function(){const t=this._baseState,i={};l.forEach((function(e){i[e]=t[e]}));const e=new this.constructor(i.parent);return e._baseState=i,e},a.prototype._wrap=function(){const t=this._baseState;u.forEach((function(i){this[i]=function(){const e=new this.constructor(this);return t.children.push(e),e[i].apply(e,arguments)}}),this)},a.prototype._init=function(t){const i=this._baseState;o(null===i.parent),t.call(this),i.children=i.children.filter((function(t){return t._baseState.parent===this}),this),o.equal(i.children.length,1,"Root node can have only one child")},a.prototype._useArgs=function(t){const i=this._baseState,e=t.filter((function(t){return t instanceof this.constructor}),this);t=t.filter((function(t){return!(t instanceof this.constructor)}),this),0!==e.length&&(o(null===i.children),i.children=e,e.forEach((function(t){t._baseState.parent=this}),this)),0!==t.length&&(o(null===i.args),i.args=t,i.reverseArgs=t.map((function(t){if("object"!=typeof t||t.constructor!==Object)return t;const i={};return Object.keys(t).forEach((function(e){e==(0|e)&&(e|=0);const r=t[e];i[r]=e})),i})))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach((function(t){a.prototype[t]=function(){const i=this._baseState;throw new Error(t+" not implemented for encoding: "+i.enc)}})),s.forEach((function(t){a.prototype[t]=function(){const i=this._baseState,e=Array.prototype.slice.call(arguments);return o(null===i.tag),i.tag=t,this._useArgs(e),this}})),a.prototype.use=function(t){o(t);const i=this._baseState;return o(null===i.use),i.use=t,this},a.prototype.optional=function(){return this._baseState.optional=!0,this},a.prototype.def=function(t){const i=this._baseState;return o(null===i.default),i.default=t,i.optional=!0,this},a.prototype.explicit=function(t){const i=this._baseState;return o(null===i.explicit&&null===i.implicit),i.explicit=t,this},a.prototype.implicit=function(t){const i=this._baseState;return o(null===i.explicit&&null===i.implicit),i.implicit=t,this},a.prototype.obj=function(){const t=this._baseState,i=Array.prototype.slice.call(arguments);return t.obj=!0,0!==i.length&&this._useArgs(i),this},a.prototype.key=function(t){const i=this._baseState;return o(null===i.key),i.key=t,this},a.prototype.any=function(){return this._baseState.any=!0,this},a.prototype.choice=function(t){const i=this._baseState;return o(null===i.choice),i.choice=t,this._useArgs(Object.keys(t).map((function(i){return t[i]}))),this},a.prototype.contains=function(t){const i=this._baseState;return o(null===i.use),i.contains=t,this},a.prototype._decode=function(t,i){const e=this._baseState;if(null===e.parent)return t.wrapResult(e.children[0]._decode(t,i));let r,n=e.default,o=!0,s=null;if(null!==e.key&&(s=t.enterKey(e.key)),e.optional){let r=null;if(null!==e.explicit?r=e.explicit:null!==e.implicit?r=e.implicit:null!==e.tag&&(r=e.tag),null!==r||e.any){if(o=this._peekTag(t,r,e.any),t.isError(o))return o}else{const r=t.save();try{null===e.choice?this._decodeGeneric(e.tag,t,i):this._decodeChoice(t,i),o=!0}catch(t){o=!1}t.restore(r)}}if(e.obj&&o&&(r=t.enterObject()),o){if(null!==e.explicit){const i=this._decodeTag(t,e.explicit);if(t.isError(i))return i;t=i}const r=t.offset;if(null===e.use&&null===e.choice){let i;e.any&&(i=t.save());const r=this._decodeTag(t,null!==e.implicit?e.implicit:e.tag,e.any);if(t.isError(r))return r;e.any?n=t.raw(i):t=r}if(i&&i.track&&null!==e.tag&&i.track(t.path(),r,t.length,"tagged"),i&&i.track&&null!==e.tag&&i.track(t.path(),t.offset,t.length,"content"),e.any||(n=null===e.choice?this._decodeGeneric(e.tag,t,i):this._decodeChoice(t,i)),t.isError(n))return n;if(e.any||null!==e.choice||null===e.children||e.children.forEach((function(e){e._decode(t,i)})),e.contains&&("octstr"===e.tag||"bitstr"===e.tag)){const r=new h(n);n=this._getUse(e.contains,t._reporterState.obj)._decode(r,i)}}return e.obj&&o&&(n=t.leaveObject(r)),null===e.key||null===n&&!0!==o?null!==s&&t.exitKey(s):t.leaveKey(s,e.key,n),n},a.prototype._decodeGeneric=function(t,i,e){const r=this._baseState;return"seq"===t||"set"===t?null:"seqof"===t||"setof"===t?this._decodeList(i,t,r.args[0],e):/str$/.test(t)?this._decodeStr(i,t,e):"objid"===t&&r.args?this._decodeObjid(i,r.args[0],r.args[1],e):"objid"===t?this._decodeObjid(i,null,null,e):"gentime"===t||"utctime"===t?this._decodeTime(i,t,e):"null_"===t?this._decodeNull(i,e):"bool"===t?this._decodeBool(i,e):"objDesc"===t?this._decodeStr(i,t,e):"int"===t||"enum"===t?this._decodeInt(i,r.args&&r.args[0],e):null!==r.use?this._getUse(r.use,i._reporterState.obj)._decode(i,e):i.error("unknown tag: "+t)},a.prototype._getUse=function(t,i){const e=this._baseState;return e.useDecoder=this._use(t,i),o(null===e.useDecoder._baseState.parent),e.useDecoder=e.useDecoder._baseState.children[0],e.implicit!==e.useDecoder._baseState.implicit&&(e.useDecoder=e.useDecoder.clone(),e.useDecoder._baseState.implicit=e.implicit),e.useDecoder},a.prototype._decodeChoice=function(t,i){const e=this._baseState;let r=null,n=!1;return Object.keys(e.choice).some((function(h){const o=t.save(),s=e.choice[h];try{const e=s._decode(t,i);if(t.isError(e))return!1;r={type:h,value:e},n=!0}catch(i){return t.restore(o),!1}return!0}),this),n?r:t.error("Choice not matched")},a.prototype._createEncoderBuffer=function(t){return new n(t,this.reporter)},a.prototype._encode=function(t,i,e){const r=this._baseState;if(null!==r.default&&r.default===t)return;const n=this._encodeValue(t,i,e);return void 0===n||this._skipDefault(n,i,e)?void 0:n},a.prototype._encodeValue=function(t,i,e){const n=this._baseState;if(null===n.parent)return n.children[0]._encode(t,i||new r);let h=null;if(this.reporter=i,n.optional&&void 0===t){if(null===n.default)return;t=n.default}let o=null,s=!1;if(n.any)h=this._createEncoderBuffer(t);else if(n.choice)h=this._encodeChoice(t,i);else if(n.contains)o=this._getUse(n.contains,e)._encode(t,i),s=!0;else if(n.children)o=n.children.map((function(e){if("null_"===e._baseState.tag)return e._encode(null,i,t);if(null===e._baseState.key)return i.error("Child should have a key");const r=i.enterKey(e._baseState.key);if("object"!=typeof t)return i.error("Child expected, but input is not object");const n=e._encode(t[e._baseState.key],i,t);return i.leaveKey(r),n}),this).filter((function(t){return t})),o=this._createEncoderBuffer(o);else if("seqof"===n.tag||"setof"===n.tag){if(!n.args||1!==n.args.length)return i.error("Too many args for : "+n.tag);if(!Array.isArray(t))return i.error("seqof/setof, but data is not Array");const e=this.clone();e._baseState.implicit=null,o=this._createEncoderBuffer(t.map((function(e){const r=this._baseState;return this._getUse(r.args[0],t)._encode(e,i)}),e))}else null!==n.use?h=this._getUse(n.use,e)._encode(t,i):(o=this._encodePrimitive(n.tag,t),s=!0);if(!n.any&&null===n.choice){const t=null!==n.implicit?n.implicit:n.tag,e=null===n.implicit?"universal":"context";null===t?null===n.use&&i.error("Tag could be omitted only for .use()"):null===n.use&&(h=this._encodeComposite(t,s,e,o))}return null!==n.explicit&&(h=this._encodeComposite(n.explicit,!1,"context",h)),h},a.prototype._encodeChoice=function(t,i){const e=this._baseState,r=e.choice[t.type];return r||o(!1,t.type+" not found in "+JSON.stringify(Object.keys(e.choice))),r._encode(t.value,i)},a.prototype._encodePrimitive=function(t,i){const e=this._baseState;if(/str$/.test(t))return this._encodeStr(i,t);if("objid"===t&&e.args)return this._encodeObjid(i,e.reverseArgs[0],e.args[1]);if("objid"===t)return this._encodeObjid(i,null,null);if("gentime"===t||"utctime"===t)return this._encodeTime(i,t);if("null_"===t)return this._encodeNull();if("int"===t||"enum"===t)return this._encodeInt(i,e.args&&e.reverseArgs[0]);if("bool"===t)return this._encodeBool(i);if("objDesc"===t)return this._encodeStr(i,t);throw new Error("Unsupported tag: "+t)},a.prototype._isNumstr=function(t){return/^[0-9 ]*$/.test(t)},a.prototype._isPrintstr=function(t){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(t)}},98465:(t,i,e)=>{"use strict";const r=e(35717);function n(t){this._reporterState={obj:null,path:[],options:t||{},errors:[]}}function h(t,i){this.path=t,this.rethrow(i)}i.b=n,n.prototype.isError=function(t){return t instanceof h},n.prototype.save=function(){const t=this._reporterState;return{obj:t.obj,pathLen:t.path.length}},n.prototype.restore=function(t){const i=this._reporterState;i.obj=t.obj,i.path=i.path.slice(0,t.pathLen)},n.prototype.enterKey=function(t){return this._reporterState.path.push(t)},n.prototype.exitKey=function(t){const i=this._reporterState;i.path=i.path.slice(0,t-1)},n.prototype.leaveKey=function(t,i,e){const r=this._reporterState;this.exitKey(t),null!==r.obj&&(r.obj[i]=e)},n.prototype.path=function(){return this._reporterState.path.join("/")},n.prototype.enterObject=function(){const t=this._reporterState,i=t.obj;return t.obj={},i},n.prototype.leaveObject=function(t){const i=this._reporterState,e=i.obj;return i.obj=t,e},n.prototype.error=function(t){let i;const e=this._reporterState,r=t instanceof h;if(i=r?t:new h(e.path.map((function(t){return"["+JSON.stringify(t)+"]"})).join(""),t.message||t,t.stack),!e.options.partial)throw i;return r||e.errors.push(i),i},n.prototype.wrapResult=function(t){const i=this._reporterState;return i.options.partial?{result:this.isError(t)?null:t,errors:i.errors}:t},r(h,Error),h.prototype.rethrow=function(t){if(this.message=t+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,h),!this.stack)try{throw new Error(this.message)}catch(t){this.stack=t.stack}return this}},70160:(t,i)=>{"use strict";function e(t){const i={};return Object.keys(t).forEach((function(e){(0|e)==e&&(e|=0);const r=t[e];i[r]=e})),i}i.tagClass={0:"universal",1:"application",2:"context",3:"private"},i.tagClassByName=e(i.tagClass),i.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},i.tagByName=e(i.tag)},36826:(t,i,e)=>{"use strict";const r=i;r._reverse=function(t){const i={};return Object.keys(t).forEach((function(e){(0|e)==e&&(e|=0);const r=t[e];i[r]=e})),i},r.der=e(70160)},41671:(t,i,e)=>{"use strict";const r=e(35717),n=e(4590),h=e(36625).C,o=e(41949),s=e(70160);function u(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new a,this.tree._init(t.body)}function a(t){o.call(this,"der",t)}function l(t,i){let e=t.readUInt8(i);if(t.isError(e))return e;const r=s.tagClass[e>>6],n=0==(32&e);if(31==(31&e)){let r=e;for(e=0;128==(128&r);){if(r=t.readUInt8(i),t.isError(r))return r;e<<=7,e|=127&r}}else e&=31;return{cls:r,primitive:n,tag:e,tagStr:s.tag[e]}}function f(t,i,e){let r=t.readUInt8(e);if(t.isError(r))return r;if(!i&&128===r)return null;if(0==(128&r))return r;const n=127&r;if(n>4)return t.error("length octect is too long");r=0;for(let i=0;i<n;i++){r<<=8;const i=t.readUInt8(e);if(t.isError(i))return i;r|=i}return r}t.exports=u,u.prototype.decode=function(t,i){return h.isDecoderBuffer(t)||(t=new h(t,i)),this.tree._decode(t,i)},r(a,o),a.prototype._peekTag=function(t,i,e){if(t.isEmpty())return!1;const r=t.save(),n=l(t,'Failed to peek tag: "'+i+'"');return t.isError(n)?n:(t.restore(r),n.tag===i||n.tagStr===i||n.tagStr+"of"===i||e)},a.prototype._decodeTag=function(t,i,e){const r=l(t,'Failed to decode tag of "'+i+'"');if(t.isError(r))return r;let n=f(t,r.primitive,'Failed to get length of "'+i+'"');if(t.isError(n))return n;if(!e&&r.tag!==i&&r.tagStr!==i&&r.tagStr+"of"!==i)return t.error('Failed to match tag: "'+i+'"');if(r.primitive||null!==n)return t.skip(n,'Failed to match body of: "'+i+'"');const h=t.save(),o=this._skipUntilEnd(t,'Failed to skip indefinite length body: "'+this.tag+'"');return t.isError(o)?o:(n=t.offset-h.offset,t.restore(h),t.skip(n,'Failed to match body of: "'+i+'"'))},a.prototype._skipUntilEnd=function(t,i){for(;;){const e=l(t,i);if(t.isError(e))return e;const r=f(t,e.primitive,i);if(t.isError(r))return r;let n;if(n=e.primitive||null!==r?t.skip(r):this._skipUntilEnd(t,i),t.isError(n))return n;if("end"===e.tagStr)break}},a.prototype._decodeList=function(t,i,e,r){const n=[];for(;!t.isEmpty();){const i=this._peekTag(t,"end");if(t.isError(i))return i;const h=e.decode(t,"der",r);if(t.isError(h)&&i)break;n.push(h)}return n},a.prototype._decodeStr=function(t,i){if("bitstr"===i){const i=t.readUInt8();return t.isError(i)?i:{unused:i,data:t.raw()}}if("bmpstr"===i){const i=t.raw();if(i.length%2==1)return t.error("Decoding of string type: bmpstr length mismatch");let e="";for(let t=0;t<i.length/2;t++)e+=String.fromCharCode(i.readUInt16BE(2*t));return e}if("numstr"===i){const i=t.raw().toString("ascii");return this._isNumstr(i)?i:t.error("Decoding of string type: numstr unsupported characters")}if("octstr"===i)return t.raw();if("objDesc"===i)return t.raw();if("printstr"===i){const i=t.raw().toString("ascii");return this._isPrintstr(i)?i:t.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(i)?t.raw().toString():t.error("Decoding of string type: "+i+" unsupported")},a.prototype._decodeObjid=function(t,i,e){let r;const n=[];let h=0,o=0;for(;!t.isEmpty();)o=t.readUInt8(),h<<=7,h|=127&o,0==(128&o)&&(n.push(h),h=0);128&o&&n.push(h);const s=n[0]/40|0,u=n[0]%40;if(r=e?n:[s,u].concat(n.slice(1)),i){let t=i[r.join(" ")];void 0===t&&(t=i[r.join(".")]),void 0!==t&&(r=t)}return r},a.prototype._decodeTime=function(t,i){const e=t.raw().toString();let r,n,h,o,s,u;if("gentime"===i)r=0|e.slice(0,4),n=0|e.slice(4,6),h=0|e.slice(6,8),o=0|e.slice(8,10),s=0|e.slice(10,12),u=0|e.slice(12,14);else{if("utctime"!==i)return t.error("Decoding "+i+" time is not supported yet");r=0|e.slice(0,2),n=0|e.slice(2,4),h=0|e.slice(4,6),o=0|e.slice(6,8),s=0|e.slice(8,10),u=0|e.slice(10,12),r=r<70?2e3+r:1900+r}return Date.UTC(r,n-1,h,o,s,u,0)},a.prototype._decodeNull=function(){return null},a.prototype._decodeBool=function(t){const i=t.readUInt8();return t.isError(i)?i:0!==i},a.prototype._decodeInt=function(t,i){const e=t.raw();let r=new n(e);return i&&(r=i[r.toString(10)]||r),r},a.prototype._use=function(t,i){return"function"==typeof t&&(t=t(i)),t._getDecoder("der").tree}},78307:(t,i,e)=>{"use strict";const r=i;r.der=e(41671),r.pem=e(59631)},59631:(t,i,e)=>{"use strict";const r=e(35717),n=e(2399).Buffer,h=e(41671);function o(t){h.call(this,t),this.enc="pem"}r(o,h),t.exports=o,o.prototype.decode=function(t,i){const e=t.toString().split(/[\r\n]+/g),r=i.label.toUpperCase(),o=/^-----(BEGIN|END) ([^-]+)-----$/;let s=-1,u=-1;for(let t=0;t<e.length;t++){const i=e[t].match(o);if(null!==i&&i[2]===r){if(-1!==s){if("END"!==i[1])break;u=t;break}if("BEGIN"!==i[1])break;s=t}}if(-1===s||-1===u)throw new Error("PEM section not found for: "+r);const a=e.slice(s+1,u).join("");a.replace(/[^a-z0-9+/=]+/gi,"");const l=n.from(a,"base64");return h.prototype.decode.call(this,l,i)}},66984:(t,i,e)=>{"use strict";const r=e(35717),n=e(2399).Buffer,h=e(41949),o=e(70160);function s(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new u,this.tree._init(t.body)}function u(t){h.call(this,"der",t)}function a(t){return t<10?"0"+t:t}t.exports=s,s.prototype.encode=function(t,i){return this.tree._encode(t,i).join()},r(u,h),u.prototype._encodeComposite=function(t,i,e,r){const h=function(t,i,e,r){let n;if("seqof"===t?t="seq":"setof"===t&&(t="set"),o.tagByName.hasOwnProperty(t))n=o.tagByName[t];else{if("number"!=typeof t||(0|t)!==t)return r.error("Unknown tag: "+t);n=t}return n>=31?r.error("Multi-octet tag encoding unsupported"):(i||(n|=32),n|=o.tagClassByName[e||"universal"]<<6,n)}(t,i,e,this.reporter);if(r.length<128){const t=n.alloc(2);return t[0]=h,t[1]=r.length,this._createEncoderBuffer([t,r])}let s=1;for(let t=r.length;t>=256;t>>=8)s++;const u=n.alloc(2+s);u[0]=h,u[1]=128|s;for(let t=1+s,i=r.length;i>0;t--,i>>=8)u[t]=255&i;return this._createEncoderBuffer([u,r])},u.prototype._encodeStr=function(t,i){if("bitstr"===i)return this._createEncoderBuffer([0|t.unused,t.data]);if("bmpstr"===i){const i=n.alloc(2*t.length);for(let e=0;e<t.length;e++)i.writeUInt16BE(t.charCodeAt(e),2*e);return this._createEncoderBuffer(i)}return"numstr"===i?this._isNumstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===i?this._isPrintstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(i)||"objDesc"===i?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: "+i+" unsupported")},u.prototype._encodeObjid=function(t,i,e){if("string"==typeof t){if(!i)return this.reporter.error("string objid given, but no values map found");if(!i.hasOwnProperty(t))return this.reporter.error("objid not found in values map");t=i[t].split(/[\s.]+/g);for(let i=0;i<t.length;i++)t[i]|=0}else if(Array.isArray(t)){t=t.slice();for(let i=0;i<t.length;i++)t[i]|=0}if(!Array.isArray(t))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(t));if(!e){if(t[1]>=40)return this.reporter.error("Second objid identifier OOB");t.splice(0,2,40*t[0]+t[1])}let r=0;for(let i=0;i<t.length;i++){let e=t[i];for(r++;e>=128;e>>=7)r++}const h=n.alloc(r);let o=h.length-1;for(let i=t.length-1;i>=0;i--){let e=t[i];for(h[o--]=127&e;(e>>=7)>0;)h[o--]=128|127&e}return this._createEncoderBuffer(h)},u.prototype._encodeTime=function(t,i){let e;const r=new Date(t);return"gentime"===i?e=[a(r.getUTCFullYear()),a(r.getUTCMonth()+1),a(r.getUTCDate()),a(r.getUTCHours()),a(r.getUTCMinutes()),a(r.getUTCSeconds()),"Z"].join(""):"utctime"===i?e=[a(r.getUTCFullYear()%100),a(r.getUTCMonth()+1),a(r.getUTCDate()),a(r.getUTCHours()),a(r.getUTCMinutes()),a(r.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+i+" time is not supported yet"),this._encodeStr(e,"octstr")},u.prototype._encodeNull=function(){return this._createEncoderBuffer("")},u.prototype._encodeInt=function(t,i){if("string"==typeof t){if(!i)return this.reporter.error("String int or enum given, but no values map");if(!i.hasOwnProperty(t))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(t));t=i[t]}if("number"!=typeof t&&!n.isBuffer(t)){const i=t.toArray();!t.sign&&128&i[0]&&i.unshift(0),t=n.from(i)}if(n.isBuffer(t)){let i=t.length;0===t.length&&i++;const e=n.alloc(i);return t.copy(e),0===t.length&&(e[0]=0),this._createEncoderBuffer(e)}if(t<128)return this._createEncoderBuffer(t);if(t<256)return this._createEncoderBuffer([0,t]);let e=1;for(let i=t;i>=256;i>>=8)e++;const r=new Array(e);for(let i=r.length-1;i>=0;i--)r[i]=255&t,t>>=8;return 128&r[0]&&r.unshift(0),this._createEncoderBuffer(n.from(r))},u.prototype._encodeBool=function(t){return this._createEncoderBuffer(t?255:0)},u.prototype._use=function(t,i){return"function"==typeof t&&(t=t(i)),t._getEncoder("der").tree},u.prototype._skipDefault=function(t,i,e){const r=this._baseState;let n;if(null===r.default)return!1;const h=t.join();if(void 0===r.defaultBuffer&&(r.defaultBuffer=this._encodeValue(r.default,i,e).join()),h.length!==r.defaultBuffer.length)return!1;for(n=0;n<h.length;n++)if(h[n]!==r.defaultBuffer[n])return!1;return!0}},56579:(t,i,e)=>{"use strict";const r=i;r.der=e(66984),r.pem=e(2883)},2883:(t,i,e)=>{"use strict";const r=e(35717),n=e(66984);function h(t){n.call(this,t),this.enc="pem"}r(h,n),t.exports=h,h.prototype.encode=function(t,i){const e=n.prototype.encode.call(this,t).toString("base64"),r=["-----BEGIN "+i.label+"-----"];for(let t=0;t<e.length;t+=64)r.push(e.slice(t,t+64));return r.push("-----END "+i.label+"-----"),r.join("\n")}},4590:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(80950).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,r){for(var n=0,h=Math.min(t.length,e),o=i;o<h;o++){var s=t.charCodeAt(o)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this.strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,d=Math.min(a,i.length-1),c=Math.max(0,a-t.length+1);c<=d;c++){var m=a-c|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[c])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!=(h=s>>>24-n&16777215)||o!==this.length-1?l[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],c=d[t];e="";var m=this.clone();for(m.negative=0;!m.isZero();){var p=m.modn(c).toString(t);e=(m=m.idivn(c)).isZero()?p+e:l[a-p.length]+p+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return r(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-n;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,d=l>>>13,c=0|o[1],m=8191&c,p=c>>>13,g=0|o[2],v=8191&g,y=g>>>13,M=0|o[3],w=8191&M,b=M>>>13,_=0|o[4],k=8191&_,S=_>>>13,A=0|o[5],B=8191&A,E=A>>>13,x=0|o[6],R=8191&x,I=x>>>13,C=0|o[7],T=8191&C,q=C>>>13,N=0|o[8],j=8191&N,D=N>>>13,P=0|o[9],L=8191&P,U=P>>>13,O=0|s[0],Z=8191&O,K=O>>>13,z=0|s[1],H=8191&z,F=z>>>13,V=0|s[2],G=8191&V,X=V>>>13,J=0|s[3],W=8191&J,Y=J>>>13,$=0|s[4],Q=8191&$,tt=$>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,dt=lt>>>13,ct=0|s[9],mt=8191&ct,pt=ct>>>13;e.negative=t.negative^i.negative,e.length=19;var gt=(a+(r=Math.imul(f,Z))|0)+((8191&(n=(n=Math.imul(f,K))+Math.imul(d,Z)|0))<<13)|0;a=((h=Math.imul(d,K))+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(m,Z),n=(n=Math.imul(m,K))+Math.imul(p,Z)|0,h=Math.imul(p,K);var vt=(a+(r=r+Math.imul(f,H)|0)|0)+((8191&(n=(n=n+Math.imul(f,F)|0)+Math.imul(d,H)|0))<<13)|0;a=((h=h+Math.imul(d,F)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(v,Z),n=(n=Math.imul(v,K))+Math.imul(y,Z)|0,h=Math.imul(y,K),r=r+Math.imul(m,H)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(p,H)|0,h=h+Math.imul(p,F)|0;var yt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,X)|0)+Math.imul(d,G)|0))<<13)|0;a=((h=h+Math.imul(d,X)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(w,Z),n=(n=Math.imul(w,K))+Math.imul(b,Z)|0,h=Math.imul(b,K),r=r+Math.imul(v,H)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(y,H)|0,h=h+Math.imul(y,F)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,X)|0)+Math.imul(p,G)|0,h=h+Math.imul(p,X)|0;var Mt=(a+(r=r+Math.imul(f,W)|0)|0)+((8191&(n=(n=n+Math.imul(f,Y)|0)+Math.imul(d,W)|0))<<13)|0;a=((h=h+Math.imul(d,Y)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,Z),n=(n=Math.imul(k,K))+Math.imul(S,Z)|0,h=Math.imul(S,K),r=r+Math.imul(w,H)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(b,H)|0,h=h+Math.imul(b,F)|0,r=r+Math.imul(v,G)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(y,G)|0,h=h+Math.imul(y,X)|0,r=r+Math.imul(m,W)|0,n=(n=n+Math.imul(m,Y)|0)+Math.imul(p,W)|0,h=h+Math.imul(p,Y)|0;var wt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(d,Q)|0))<<13)|0;a=((h=h+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(B,Z),n=(n=Math.imul(B,K))+Math.imul(E,Z)|0,h=Math.imul(E,K),r=r+Math.imul(k,H)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(S,H)|0,h=h+Math.imul(S,F)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,X)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,X)|0,r=r+Math.imul(v,W)|0,n=(n=n+Math.imul(v,Y)|0)+Math.imul(y,W)|0,h=h+Math.imul(y,Y)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(p,Q)|0,h=h+Math.imul(p,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(d,et)|0))<<13)|0;a=((h=h+Math.imul(d,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(R,Z),n=(n=Math.imul(R,K))+Math.imul(I,Z)|0,h=Math.imul(I,K),r=r+Math.imul(B,H)|0,n=(n=n+Math.imul(B,F)|0)+Math.imul(E,H)|0,h=h+Math.imul(E,F)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(S,G)|0,h=h+Math.imul(S,X)|0,r=r+Math.imul(w,W)|0,n=(n=n+Math.imul(w,Y)|0)+Math.imul(b,W)|0,h=h+Math.imul(b,Y)|0,r=r+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,tt)|0)+Math.imul(y,Q)|0,h=h+Math.imul(y,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(p,et)|0,h=h+Math.imul(p,rt)|0;var _t=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(d,ht)|0))<<13)|0;a=((h=h+Math.imul(d,ot)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(T,Z),n=(n=Math.imul(T,K))+Math.imul(q,Z)|0,h=Math.imul(q,K),r=r+Math.imul(R,H)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(I,H)|0,h=h+Math.imul(I,F)|0,r=r+Math.imul(B,G)|0,n=(n=n+Math.imul(B,X)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,X)|0,r=r+Math.imul(k,W)|0,n=(n=n+Math.imul(k,Y)|0)+Math.imul(S,W)|0,h=h+Math.imul(S,Y)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Q)|0,h=h+Math.imul(b,tt)|0,r=r+Math.imul(v,et)|0,n=(n=n+Math.imul(v,rt)|0)+Math.imul(y,et)|0,h=h+Math.imul(y,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(p,ht)|0,h=h+Math.imul(p,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(d,ut)|0))<<13)|0;a=((h=h+Math.imul(d,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(j,Z),n=(n=Math.imul(j,K))+Math.imul(D,Z)|0,h=Math.imul(D,K),r=r+Math.imul(T,H)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(q,H)|0,h=h+Math.imul(q,F)|0,r=r+Math.imul(R,G)|0,n=(n=n+Math.imul(R,X)|0)+Math.imul(I,G)|0,h=h+Math.imul(I,X)|0,r=r+Math.imul(B,W)|0,n=(n=n+Math.imul(B,Y)|0)+Math.imul(E,W)|0,h=h+Math.imul(E,Y)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Q)|0,h=h+Math.imul(S,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,h=h+Math.imul(b,rt)|0,r=r+Math.imul(v,ht)|0,n=(n=n+Math.imul(v,ot)|0)+Math.imul(y,ht)|0,h=h+Math.imul(y,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(p,ut)|0,h=h+Math.imul(p,at)|0;var St=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(d,ft)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,Z),n=(n=Math.imul(L,K))+Math.imul(U,Z)|0,h=Math.imul(U,K),r=r+Math.imul(j,H)|0,n=(n=n+Math.imul(j,F)|0)+Math.imul(D,H)|0,h=h+Math.imul(D,F)|0,r=r+Math.imul(T,G)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(q,G)|0,h=h+Math.imul(q,X)|0,r=r+Math.imul(R,W)|0,n=(n=n+Math.imul(R,Y)|0)+Math.imul(I,W)|0,h=h+Math.imul(I,Y)|0,r=r+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(E,Q)|0,h=h+Math.imul(E,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,h=h+Math.imul(S,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,r=r+Math.imul(v,ut)|0,n=(n=n+Math.imul(v,at)|0)+Math.imul(y,ut)|0,h=h+Math.imul(y,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,dt)|0)+Math.imul(p,ft)|0,h=h+Math.imul(p,dt)|0;var At=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,pt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,pt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,H),n=(n=Math.imul(L,F))+Math.imul(U,H)|0,h=Math.imul(U,F),r=r+Math.imul(j,G)|0,n=(n=n+Math.imul(j,X)|0)+Math.imul(D,G)|0,h=h+Math.imul(D,X)|0,r=r+Math.imul(T,W)|0,n=(n=n+Math.imul(T,Y)|0)+Math.imul(q,W)|0,h=h+Math.imul(q,Y)|0,r=r+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,tt)|0)+Math.imul(I,Q)|0,h=h+Math.imul(I,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(E,et)|0,h=h+Math.imul(E,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(S,ht)|0,h=h+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,r=r+Math.imul(v,ft)|0,n=(n=n+Math.imul(v,dt)|0)+Math.imul(y,ft)|0,h=h+Math.imul(y,dt)|0;var Bt=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,pt)|0)+Math.imul(p,mt)|0))<<13)|0;a=((h=h+Math.imul(p,pt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(L,G),n=(n=Math.imul(L,X))+Math.imul(U,G)|0,h=Math.imul(U,X),r=r+Math.imul(j,W)|0,n=(n=n+Math.imul(j,Y)|0)+Math.imul(D,W)|0,h=h+Math.imul(D,Y)|0,r=r+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(q,Q)|0,h=h+Math.imul(q,tt)|0,r=r+Math.imul(R,et)|0,n=(n=n+Math.imul(R,rt)|0)+Math.imul(I,et)|0,h=h+Math.imul(I,rt)|0,r=r+Math.imul(B,ht)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,h=h+Math.imul(S,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(b,ft)|0,h=h+Math.imul(b,dt)|0;var Et=(a+(r=r+Math.imul(v,mt)|0)|0)+((8191&(n=(n=n+Math.imul(v,pt)|0)+Math.imul(y,mt)|0))<<13)|0;a=((h=h+Math.imul(y,pt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(L,W),n=(n=Math.imul(L,Y))+Math.imul(U,W)|0,h=Math.imul(U,Y),r=r+Math.imul(j,Q)|0,n=(n=n+Math.imul(j,tt)|0)+Math.imul(D,Q)|0,h=h+Math.imul(D,tt)|0,r=r+Math.imul(T,et)|0,n=(n=n+Math.imul(T,rt)|0)+Math.imul(q,et)|0,h=h+Math.imul(q,rt)|0,r=r+Math.imul(R,ht)|0,n=(n=n+Math.imul(R,ot)|0)+Math.imul(I,ht)|0,h=h+Math.imul(I,ot)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,dt)|0)+Math.imul(S,ft)|0,h=h+Math.imul(S,dt)|0;var xt=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,pt)|0)+Math.imul(b,mt)|0))<<13)|0;a=((h=h+Math.imul(b,pt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(L,Q),n=(n=Math.imul(L,tt))+Math.imul(U,Q)|0,h=Math.imul(U,tt),r=r+Math.imul(j,et)|0,n=(n=n+Math.imul(j,rt)|0)+Math.imul(D,et)|0,h=h+Math.imul(D,rt)|0,r=r+Math.imul(T,ht)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(q,ht)|0,h=h+Math.imul(q,ot)|0,r=r+Math.imul(R,ut)|0,n=(n=n+Math.imul(R,at)|0)+Math.imul(I,ut)|0,h=h+Math.imul(I,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(E,ft)|0,h=h+Math.imul(E,dt)|0;var Rt=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,pt)|0)+Math.imul(S,mt)|0))<<13)|0;a=((h=h+Math.imul(S,pt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(L,et),n=(n=Math.imul(L,rt))+Math.imul(U,et)|0,h=Math.imul(U,rt),r=r+Math.imul(j,ht)|0,n=(n=n+Math.imul(j,ot)|0)+Math.imul(D,ht)|0,h=h+Math.imul(D,ot)|0,r=r+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,at)|0)+Math.imul(q,ut)|0,h=h+Math.imul(q,at)|0,r=r+Math.imul(R,ft)|0,n=(n=n+Math.imul(R,dt)|0)+Math.imul(I,ft)|0,h=h+Math.imul(I,dt)|0;var It=(a+(r=r+Math.imul(B,mt)|0)|0)+((8191&(n=(n=n+Math.imul(B,pt)|0)+Math.imul(E,mt)|0))<<13)|0;a=((h=h+Math.imul(E,pt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,ht),n=(n=Math.imul(L,ot))+Math.imul(U,ht)|0,h=Math.imul(U,ot),r=r+Math.imul(j,ut)|0,n=(n=n+Math.imul(j,at)|0)+Math.imul(D,ut)|0,h=h+Math.imul(D,at)|0,r=r+Math.imul(T,ft)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(q,ft)|0,h=h+Math.imul(q,dt)|0;var Ct=(a+(r=r+Math.imul(R,mt)|0)|0)+((8191&(n=(n=n+Math.imul(R,pt)|0)+Math.imul(I,mt)|0))<<13)|0;a=((h=h+Math.imul(I,pt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,ut),n=(n=Math.imul(L,at))+Math.imul(U,ut)|0,h=Math.imul(U,at),r=r+Math.imul(j,ft)|0,n=(n=n+Math.imul(j,dt)|0)+Math.imul(D,ft)|0,h=h+Math.imul(D,dt)|0;var Tt=(a+(r=r+Math.imul(T,mt)|0)|0)+((8191&(n=(n=n+Math.imul(T,pt)|0)+Math.imul(q,mt)|0))<<13)|0;a=((h=h+Math.imul(q,pt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),n=(n=Math.imul(L,dt))+Math.imul(U,ft)|0,h=Math.imul(U,dt);var qt=(a+(r=r+Math.imul(j,mt)|0)|0)+((8191&(n=(n=n+Math.imul(j,pt)|0)+Math.imul(D,mt)|0))<<13)|0;a=((h=h+Math.imul(D,pt)|0)+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863;var Nt=(a+(r=Math.imul(L,mt))|0)+((8191&(n=(n=Math.imul(L,pt))+Math.imul(U,mt)|0))<<13)|0;return a=((h=Math.imul(U,pt))+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=gt,u[1]=vt,u[2]=yt,u[3]=Mt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=St,u[9]=At,u[10]=Bt,u[11]=Et,u[12]=xt,u[13]=Rt,u[14]=It,u[15]=Ct,u[16]=Tt,u[17]=qt,u[18]=Nt,0!==a&&(u[19]=a,e.length++),e};function p(t,i,e){return(new g).mulp(t,i,e)}function g(t,i){this.x=t,this.y=i}Math.imul||(m=c),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,i):e<63?c(this,t,i):e<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),d=67108863&f;s=67108863&(d=d+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e.strip()}(this,t,i):p(this,t,i)},g.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},g.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},g.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},g.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,d=a,c=0;c<o;c++){var m=e[l+c],p=r[l+c],g=e[l+c+o],v=r[l+c+o],y=f*g-d*v;v=f*v+d*g,g=y,e[l+c]=m+g,r[l+c]=p+v,e[l+c+o]=m-g,r[l+c+o]=p-v,c!==s&&(y=u*f-a*d,d=u*d+a*f,f=y)}},g.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},g.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},g.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},g.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},g.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},g.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),d=e.words;d.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var c=0;c<r;c++){var m=s[c]*l[c]-u[c]*f[c];u[c]=s[c]*f[c]+u[c]*l[c],s[c]=m}return this.conjugate(s,u,r),this.transform(s,u,d,h,r,n),this.conjugate(d,h,r),this.normalize13b(d,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,h=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=h>>>26,this.words[e]=67108863&h}return 0!==i&&(this.words[e]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e||!(this.words[e]&n))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!=(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(d=Math.min(d/o|0,67108863),r._ishlnsubmul(n,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},h.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var d=0,c=1;0==(i.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(i.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,p=1;0==(e.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new k(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},y.prototype.split=function(t,i){t.iushrn(this.n,0,i)},y.prototype.imulK=function(t){return t.imul(this.k)},n(M,y),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,y),n(b,y),n(_,y),_.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new w;else if("p192"===t)i=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new _}return v[t]=i,i},k.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},k.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},k.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},k.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},k.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},k.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},k.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),d=this.pow(t,n.addn(1).iushrn(1)),c=this.pow(t,n),m=o;0!==c.cmp(s);){for(var p=c,g=0;0!==p.cmp(s);g++)p=p.redSqr();r(g<m);var v=this.pow(f,new h(1).iushln(m-g-1));d=d.redMul(v),f=v.redSqr(),c=c.redMul(f),m=g}return d},k.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},k.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4==++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},k.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},k.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,k),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},74497:(t,i,e)=>{var r=e(89509).Buffer;function n(t){r.isBuffer(t)||(t=r.from(t));for(var i=t.length/4|0,e=new Array(i),n=0;n<i;n++)e[n]=t.readUInt32BE(4*n);return e}function h(t){for(;0<t.length;t++)t[0]=0}function o(t,i,e,r,n){for(var h,o,s,u,a=e[0],l=e[1],f=e[2],d=e[3],c=t[0]^i[0],m=t[1]^i[1],p=t[2]^i[2],g=t[3]^i[3],v=4,y=1;y<n;y++)h=a[c>>>24]^l[m>>>16&255]^f[p>>>8&255]^d[255&g]^i[v++],o=a[m>>>24]^l[p>>>16&255]^f[g>>>8&255]^d[255&c]^i[v++],s=a[p>>>24]^l[g>>>16&255]^f[c>>>8&255]^d[255&m]^i[v++],u=a[g>>>24]^l[c>>>16&255]^f[m>>>8&255]^d[255&p]^i[v++],c=h,m=o,p=s,g=u;return h=(r[c>>>24]<<24|r[m>>>16&255]<<16|r[p>>>8&255]<<8|r[255&g])^i[v++],o=(r[m>>>24]<<24|r[p>>>16&255]<<16|r[g>>>8&255]<<8|r[255&c])^i[v++],s=(r[p>>>24]<<24|r[g>>>16&255]<<16|r[c>>>8&255]<<8|r[255&m])^i[v++],u=(r[g>>>24]<<24|r[c>>>16&255]<<16|r[m>>>8&255]<<8|r[255&p])^i[v++],[h>>>=0,o>>>=0,s>>>=0,u>>>=0]}var s=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),i=0;i<256;i++)t[i]=i<128?i<<1:i<<1^283;for(var e=[],r=[],n=[[],[],[],[]],h=[[],[],[],[]],o=0,s=0,u=0;u<256;++u){var a=s^s<<1^s<<2^s<<3^s<<4;a=a>>>8^255&a^99,e[o]=a,r[a]=o;var l=t[o],f=t[l],d=t[f],c=257*t[a]^16843008*a;n[0][o]=c<<24|c>>>8,n[1][o]=c<<16|c>>>16,n[2][o]=c<<8|c>>>24,n[3][o]=c,c=16843009*d^65537*f^257*l^16843008*o,h[0][a]=c<<24|c>>>8,h[1][a]=c<<16|c>>>16,h[2][a]=c<<8|c>>>24,h[3][a]=c,0===o?o=s=1:(o=l^t[t[t[d^l]]],s^=t[t[s]])}return{SBOX:e,INV_SBOX:r,SUB_MIX:n,INV_SUB_MIX:h}}();function a(t){this._key=n(t),this._reset()}a.blockSize=16,a.keySize=32,a.prototype.blockSize=a.blockSize,a.prototype.keySize=a.keySize,a.prototype._reset=function(){for(var t=this._key,i=t.length,e=i+6,r=4*(e+1),n=[],h=0;h<i;h++)n[h]=t[h];for(h=i;h<r;h++){var o=n[h-1];h%i==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=s[h/i|0]<<24):i>6&&h%i==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),n[h]=n[h-i]^o}for(var a=[],l=0;l<r;l++){var f=r-l,d=n[f-(l%4?0:4)];a[l]=l<4||f<=4?d:u.INV_SUB_MIX[0][u.SBOX[d>>>24]]^u.INV_SUB_MIX[1][u.SBOX[d>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[d>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&d]]}this._nRounds=e,this._keySchedule=n,this._invKeySchedule=a},a.prototype.encryptBlockRaw=function(t){return o(t=n(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},a.prototype.encryptBlock=function(t){var i=this.encryptBlockRaw(t),e=r.allocUnsafe(16);return e.writeUInt32BE(i[0],0),e.writeUInt32BE(i[1],4),e.writeUInt32BE(i[2],8),e.writeUInt32BE(i[3],12),e},a.prototype.decryptBlock=function(t){var i=(t=n(t))[1];t[1]=t[3],t[3]=i;var e=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),h=r.allocUnsafe(16);return h.writeUInt32BE(e[0],0),h.writeUInt32BE(e[3],4),h.writeUInt32BE(e[2],8),h.writeUInt32BE(e[1],12),h},a.prototype.scrub=function(){h(this._keySchedule),h(this._invKeySchedule),h(this._key)},t.exports.AES=a},62422:(t,i,e)=>{var r=e(74497),n=e(89509).Buffer,h=e(71027),o=e(35717),s=e(83288),u=e(67295),a=e(20685);function l(t,i,e,o){h.call(this);var u=n.alloc(4,0);this._cipher=new r.AES(i);var l=this._cipher.encryptBlock(u);this._ghash=new s(l),e=function(t,i,e){if(12===i.length)return t._finID=n.concat([i,n.from([0,0,0,1])]),n.concat([i,n.from([0,0,0,2])]);var r=new s(e),h=i.length,o=h%16;r.update(i),o&&(o=16-o,r.update(n.alloc(o,0))),r.update(n.alloc(8,0));var u=8*h,l=n.alloc(8);l.writeUIntBE(u,0,8),r.update(l),t._finID=r.state;var f=n.from(t._finID);return a(f),f}(this,e,l),this._prev=n.from(e),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._alen=0,this._len=0,this._mode=t,this._authTag=null,this._called=!1}o(l,h),l.prototype._update=function(t){if(!this._called&&this._alen){var i=16-this._alen%16;i<16&&(i=n.alloc(i,0),this._ghash.update(i))}this._called=!0;var e=this._mode.encrypt(this,t);return this._decrypt?this._ghash.update(t):this._ghash.update(e),this._len+=t.length,e},l.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var t=u(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(t,i){var e=0;t.length!==i.length&&e++;for(var r=Math.min(t.length,i.length),n=0;n<r;++n)e+=t[n]^i[n];return e}(t,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=t,this._cipher.scrub()},l.prototype.getAuthTag=function(){if(this._decrypt||!n.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},l.prototype.setAuthTag=function(t){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=t},l.prototype.setAAD=function(t){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(t),this._alen+=t.length},t.exports=l},44696:(t,i,e)=>{var r=e(71494),n=e(83603),h=e(55415);i.createCipher=i.Cipher=r.createCipher,i.createCipheriv=i.Cipheriv=r.createCipheriv,i.createDecipher=i.Decipher=n.createDecipher,i.createDecipheriv=i.Decipheriv=n.createDecipheriv,i.listCiphers=i.getCiphers=function(){return Object.keys(h)}},83603:(t,i,e)=>{var r=e(62422),n=e(89509).Buffer,h=e(45),o=e(25969),s=e(71027),u=e(74497),a=e(13048);function l(t,i,e){s.call(this),this._cache=new f,this._last=void 0,this._cipher=new u.AES(i),this._prev=n.from(e),this._mode=t,this._autopadding=!0}function f(){this.cache=n.allocUnsafe(0)}function d(t,i,e){var s=h[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof e&&(e=n.from(e)),"GCM"!==s.mode&&e.length!==s.iv)throw new TypeError("invalid iv length "+e.length);if("string"==typeof i&&(i=n.from(i)),i.length!==s.key/8)throw new TypeError("invalid key length "+i.length);return"stream"===s.type?new o(s.module,i,e,!0):"auth"===s.type?new r(s.module,i,e,!0):new l(s.module,i,e)}e(35717)(l,s),l.prototype._update=function(t){var i,e;this._cache.add(t);for(var r=[];i=this._cache.get(this._autopadding);)e=this._mode.decrypt(this,i),r.push(e);return n.concat(r)},l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return function(t){var i=t[15];if(i<1||i>16)throw new Error("unable to decrypt data");for(var e=-1;++e<i;)if(t[e+(16-i)]!==i)throw new Error("unable to decrypt data");if(16!==i)return t.slice(0,16-i)}(this._mode.decrypt(this,t));if(t)throw new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},f.prototype.add=function(t){this.cache=n.concat([this.cache,t])},f.prototype.get=function(t){var i;if(t){if(this.cache.length>16)return i=this.cache.slice(0,16),this.cache=this.cache.slice(16),i}else if(this.cache.length>=16)return i=this.cache.slice(0,16),this.cache=this.cache.slice(16),i;return null},f.prototype.flush=function(){if(this.cache.length)return this.cache},i.createDecipher=function(t,i){var e=h[t.toLowerCase()];if(!e)throw new TypeError("invalid suite type");var r=a(i,!1,e.key,e.iv);return d(t,r.key,r.iv)},i.createDecipheriv=d},71494:(t,i,e)=>{var r=e(45),n=e(62422),h=e(89509).Buffer,o=e(25969),s=e(71027),u=e(74497),a=e(13048);function l(t,i,e){s.call(this),this._cache=new d,this._cipher=new u.AES(i),this._prev=h.from(e),this._mode=t,this._autopadding=!0}e(35717)(l,s),l.prototype._update=function(t){var i,e;this._cache.add(t);for(var r=[];i=this._cache.get();)e=this._mode.encrypt(this,i),r.push(e);return h.concat(r)};var f=h.alloc(16,16);function d(){this.cache=h.allocUnsafe(0)}function c(t,i,e){var s=r[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof i&&(i=h.from(i)),i.length!==s.key/8)throw new TypeError("invalid key length "+i.length);if("string"==typeof e&&(e=h.from(e)),"GCM"!==s.mode&&e.length!==s.iv)throw new TypeError("invalid iv length "+e.length);return"stream"===s.type?new o(s.module,i,e):"auth"===s.type?new n(s.module,i,e):new l(s.module,i,e)}l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return t=this._mode.encrypt(this,t),this._cipher.scrub(),t;if(!t.equals(f))throw this._cipher.scrub(),new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},d.prototype.add=function(t){this.cache=h.concat([this.cache,t])},d.prototype.get=function(){if(this.cache.length>15){var t=this.cache.slice(0,16);return this.cache=this.cache.slice(16),t}return null},d.prototype.flush=function(){for(var t=16-this.cache.length,i=h.allocUnsafe(t),e=-1;++e<t;)i.writeUInt8(t,e);return h.concat([this.cache,i])},i.createCipheriv=c,i.createCipher=function(t,i){var e=r[t.toLowerCase()];if(!e)throw new TypeError("invalid suite type");var n=a(i,!1,e.key,e.iv);return c(t,n.key,n.iv)}},83288:(t,i,e)=>{var r=e(89509).Buffer,n=r.alloc(16,0);function h(t){var i=r.allocUnsafe(16);return i.writeUInt32BE(t[0]>>>0,0),i.writeUInt32BE(t[1]>>>0,4),i.writeUInt32BE(t[2]>>>0,8),i.writeUInt32BE(t[3]>>>0,12),i}function o(t){this.h=t,this.state=r.alloc(16,0),this.cache=r.allocUnsafe(0)}o.prototype.ghash=function(t){for(var i=-1;++i<t.length;)this.state[i]^=t[i];this._multiply()},o.prototype._multiply=function(){for(var t,i,e,r=[(t=this.h).readUInt32BE(0),t.readUInt32BE(4),t.readUInt32BE(8),t.readUInt32BE(12)],n=[0,0,0,0],o=-1;++o<128;){for(0!=(this.state[~~(o/8)]&1<<7-o%8)&&(n[0]^=r[0],n[1]^=r[1],n[2]^=r[2],n[3]^=r[3]),e=0!=(1&r[3]),i=3;i>0;i--)r[i]=r[i]>>>1|(1&r[i-1])<<31;r[0]=r[0]>>>1,e&&(r[0]=r[0]^225<<24)}this.state=h(n)},o.prototype.update=function(t){var i;for(this.cache=r.concat([this.cache,t]);this.cache.length>=16;)i=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(i)},o.prototype.final=function(t,i){return this.cache.length&&this.ghash(r.concat([this.cache,n],16)),this.ghash(h([0,t,0,i])),this.state},t.exports=o},20685:t=>{t.exports=function(t){for(var i,e=t.length;e--;){if(255!==(i=t.readUInt8(e))){i++,t.writeUInt8(i,e);break}t.writeUInt8(0,e)}}},25292:(t,i,e)=>{var r=e(67295);i.encrypt=function(t,i){var e=r(i,t._prev);return t._prev=t._cipher.encryptBlock(e),t._prev},i.decrypt=function(t,i){var e=t._prev;t._prev=i;var n=t._cipher.decryptBlock(i);return r(n,e)}},86311:(t,i,e)=>{var r=e(89509).Buffer,n=e(67295);function h(t,i,e){var h=i.length,o=n(i,t._cache);return t._cache=t._cache.slice(h),t._prev=r.concat([t._prev,e?i:o]),o}i.encrypt=function(t,i,e){for(var n,o=r.allocUnsafe(0);i.length;){if(0===t._cache.length&&(t._cache=t._cipher.encryptBlock(t._prev),t._prev=r.allocUnsafe(0)),!(t._cache.length<=i.length)){o=r.concat([o,h(t,i,e)]);break}n=t._cache.length,o=r.concat([o,h(t,i.slice(0,n),e)]),i=i.slice(n)}return o}},21510:(t,i,e)=>{var r=e(89509).Buffer;function n(t,i,e){for(var r,n,o=-1,s=0;++o<8;)r=i&1<<7-o?128:0,s+=(128&(n=t._cipher.encryptBlock(t._prev)[0]^r))>>o%8,t._prev=h(t._prev,e?r:n);return s}function h(t,i){var e=t.length,n=-1,h=r.allocUnsafe(t.length);for(t=r.concat([t,r.from([i])]);++n<e;)h[n]=t[n]<<1|t[n+1]>>7;return h}i.encrypt=function(t,i,e){for(var h=i.length,o=r.allocUnsafe(h),s=-1;++s<h;)o[s]=n(t,i[s],e);return o}},71964:(t,i,e)=>{var r=e(89509).Buffer;function n(t,i,e){var n=t._cipher.encryptBlock(t._prev)[0]^i;return t._prev=r.concat([t._prev.slice(1),r.from([e?i:n])]),n}i.encrypt=function(t,i,e){for(var h=i.length,o=r.allocUnsafe(h),s=-1;++s<h;)o[s]=n(t,i[s],e);return o}},96009:(t,i,e)=>{var r=e(67295),n=e(89509).Buffer,h=e(20685);function o(t){var i=t._cipher.encryptBlockRaw(t._prev);return h(t._prev),i}i.encrypt=function(t,i){var e=Math.ceil(i.length/16),h=t._cache.length;t._cache=n.concat([t._cache,n.allocUnsafe(16*e)]);for(var s=0;s<e;s++){var u=o(t),a=h+16*s;t._cache.writeUInt32BE(u[0],a+0),t._cache.writeUInt32BE(u[1],a+4),t._cache.writeUInt32BE(u[2],a+8),t._cache.writeUInt32BE(u[3],a+12)}var l=t._cache.slice(0,i.length);return t._cache=t._cache.slice(i.length),r(i,l)}},11084:(t,i)=>{i.encrypt=function(t,i){return t._cipher.encryptBlock(i)},i.decrypt=function(t,i){return t._cipher.decryptBlock(i)}},45:(t,i,e)=>{var r={ECB:e(11084),CBC:e(25292),CFB:e(86311),CFB8:e(71964),CFB1:e(21510),OFB:e(18861),CTR:e(96009),GCM:e(96009)},n=e(55415);for(var h in n)n[h].module=r[n[h].mode];t.exports=n},55415:t=>{"use strict";t.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')},18861:(t,i,e)=>{var r=e(67295);function n(t){return t._prev=t._cipher.encryptBlock(t._prev),t._prev}i.encrypt=function(t,i){for(;t._cache.length<i.length;)t._cache=Buffer.concat([t._cache,n(t)]);var e=t._cache.slice(0,i.length);return t._cache=t._cache.slice(i.length),r(i,e)}},25969:(t,i,e)=>{var r=e(74497),n=e(89509).Buffer,h=e(71027);function o(t,i,e,o){h.call(this),this._cipher=new r.AES(i),this._prev=n.from(e),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._mode=t}e(35717)(o,h),o.prototype._update=function(t){return this._mode.encrypt(this,t,this._decrypt)},o.prototype._final=function(){this._cipher.scrub()},t.exports=o},53614:(t,i,e)=>{var r=e(47667),n=e(44696),h=e(45),o=e(99715),s=e(13048);function u(t,i,e){if(t=t.toLowerCase(),h[t])return n.createCipheriv(t,i,e);if(o[t])return new r({key:i,iv:e,mode:t});throw new TypeError("invalid suite type")}function a(t,i,e){if(t=t.toLowerCase(),h[t])return n.createDecipheriv(t,i,e);if(o[t])return new r({key:i,iv:e,mode:t,decrypt:!0});throw new TypeError("invalid suite type")}i.createCipher=i.Cipher=function(t,i){var e,r;if(t=t.toLowerCase(),h[t])e=h[t].key,r=h[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");e=8*o[t].key,r=o[t].iv}var n=s(i,!1,e,r);return u(t,n.key,n.iv)},i.createCipheriv=i.Cipheriv=u,i.createDecipher=i.Decipher=function(t,i){var e,r;if(t=t.toLowerCase(),h[t])e=h[t].key,r=h[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");e=8*o[t].key,r=o[t].iv}var n=s(i,!1,e,r);return a(t,n.key,n.iv)},i.createDecipheriv=i.Decipheriv=a,i.listCiphers=i.getCiphers=function(){return Object.keys(o).concat(n.getCiphers())}},47667:(t,i,e)=>{var r=e(71027),n=e(15251),h=e(35717),o=e(89509).Buffer,s={"des-ede3-cbc":n.CBC.instantiate(n.EDE),"des-ede3":n.EDE,"des-ede-cbc":n.CBC.instantiate(n.EDE),"des-ede":n.EDE,"des-cbc":n.CBC.instantiate(n.DES),"des-ecb":n.DES};function u(t){r.call(this);var i,e=t.mode.toLowerCase(),n=s[e];i=t.decrypt?"decrypt":"encrypt";var h=t.key;o.isBuffer(h)||(h=o.from(h)),"des-ede"!==e&&"des-ede-cbc"!==e||(h=o.concat([h,h.slice(0,8)]));var u=t.iv;o.isBuffer(u)||(u=o.from(u)),this._des=n.create({key:h,iv:u,type:i})}s.des=s["des-cbc"],s.des3=s["des-ede3-cbc"],t.exports=u,h(u,r),u.prototype._update=function(t){return o.from(this._des.update(t))},u.prototype._final=function(){return o.from(this._des.final())}},99715:(t,i)=>{i["des-ecb"]={key:8,iv:0},i["des-cbc"]=i.des={key:8,iv:8},i["des-ede3-cbc"]=i.des3={key:24,iv:8},i["des-ede3"]={key:24,iv:0},i["des-ede-cbc"]={key:16,iv:8},i["des-ede"]={key:16,iv:0}},23663:(t,i,e)=>{var r=e(13550),n=e(61798);function h(t){var i,e=t.modulus.byteLength();do{i=new r(n(e))}while(i.cmp(t.modulus)>=0||!i.umod(t.prime1)||!i.umod(t.prime2));return i}function o(t,i){var e=function(t){var i=h(t);return{blinder:i.toRed(r.mont(t.modulus)).redPow(new r(t.publicExponent)).fromRed(),unblinder:i.invm(t.modulus)}}(i),n=i.modulus.byteLength(),o=new r(t).mul(e.blinder).umod(i.modulus),s=o.toRed(r.mont(i.prime1)),u=o.toRed(r.mont(i.prime2)),a=i.coefficient,l=i.prime1,f=i.prime2,d=s.redPow(i.exponent1).fromRed(),c=u.redPow(i.exponent2).fromRed(),m=d.isub(c).imul(a).umod(l).imul(f);return c.iadd(m).imul(e.unblinder).umod(i.modulus).toArrayLike(Buffer,"be",n)}o.getr=h,t.exports=o},56042:(t,i,e)=>{t.exports=e(42063)},42063:t=>{"use strict";t.exports=JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}')},42236:t=>{"use strict";t.exports=JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}')},64743:(t,i,e)=>{var r=e(25679).Buffer,n=e(23482),h=e(88473),o=e(35717),s=e(82957),u=e(47753),a=e(42063);function l(t){h.Writable.call(this);var i=a[t];if(!i)throw new Error("Unknown message digest");this._hashType=i.hash,this._hash=n(i.hash),this._tag=i.id,this._signType=i.sign}function f(t){h.Writable.call(this);var i=a[t];if(!i)throw new Error("Unknown message digest");this._hash=n(i.hash),this._tag=i.id,this._signType=i.sign}function d(t){return new l(t)}function c(t){return new f(t)}Object.keys(a).forEach((function(t){a[t].id=r.from(a[t].id,"hex"),a[t.toLowerCase()]=a[t]})),o(l,h.Writable),l.prototype._write=function(t,i,e){this._hash.update(t),e()},l.prototype.update=function(t,i){return"string"==typeof t&&(t=r.from(t,i)),this._hash.update(t),this},l.prototype.sign=function(t,i){this.end();var e=this._hash.digest(),r=s(e,t,this._hashType,this._signType,this._tag);return i?r.toString(i):r},o(f,h.Writable),f.prototype._write=function(t,i,e){this._hash.update(t),e()},f.prototype.update=function(t,i){return"string"==typeof t&&(t=r.from(t,i)),this._hash.update(t),this},f.prototype.verify=function(t,i,e){"string"==typeof i&&(i=r.from(i,e)),this.end();var n=this._hash.digest();return u(i,n,t,this._signType,this._tag)},t.exports={Sign:d,Verify:c,createSign:d,createVerify:c}},82957:(t,i,e)=>{var r=e(25679).Buffer,n=e(58355),h=e(23663),o=e(86266).ec,s=e(13550),u=e(70980),a=e(42236);function l(t,i,e,h){if((t=r.from(t.toArray())).length<i.byteLength()){var o=r.alloc(i.byteLength()-t.length);t=r.concat([o,t])}var s=e.length,u=function(t,i){t=(t=f(t,i)).mod(i);var e=r.from(t.toArray());if(e.length<i.byteLength()){var n=r.alloc(i.byteLength()-e.length);e=r.concat([n,e])}return e}(e,i),a=r.alloc(s);a.fill(1);var l=r.alloc(s);return l=n(h,l).update(a).update(r.from([0])).update(t).update(u).digest(),a=n(h,l).update(a).digest(),{k:l=n(h,l).update(a).update(r.from([1])).update(t).update(u).digest(),v:a=n(h,l).update(a).digest()}}function f(t,i){var e=new s(t),r=(t.length<<3)-i.bitLength();return r>0&&e.ishrn(r),e}function d(t,i,e){var h,o;do{for(h=r.alloc(0);8*h.length<t.bitLength();)i.v=n(e,i.k).update(i.v).digest(),h=r.concat([h,i.v]);o=f(h,t),i.k=n(e,i.k).update(i.v).update(r.from([0])).digest(),i.v=n(e,i.k).update(i.v).digest()}while(-1!==o.cmp(t));return o}function c(t,i,e,r){return t.toRed(s.mont(e)).redPow(i).fromRed().mod(r)}t.exports=function(t,i,e,n,m){var p=u(i);if(p.curve){if("ecdsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");return function(t,i){var e=a[i.curve.join(".")];if(!e)throw new Error("unknown curve "+i.curve.join("."));var n=new o(e).keyFromPrivate(i.privateKey).sign(t);return r.from(n.toDER())}(t,p)}if("dsa"===p.type){if("dsa"!==n)throw new Error("wrong private key type");return function(t,i,e){for(var n,h=i.params.priv_key,o=i.params.p,u=i.params.q,a=i.params.g,m=new s(0),p=f(t,u).mod(u),g=!1,v=l(h,u,t,e);!1===g;)m=c(a,n=d(u,v,e),o,u),0===(g=n.invm(u).imul(p.add(h.mul(m))).mod(u)).cmpn(0)&&(g=!1,m=new s(0));return function(t,i){t=t.toArray(),i=i.toArray(),128&t[0]&&(t=[0].concat(t)),128&i[0]&&(i=[0].concat(i));var e=[48,t.length+i.length+4,2,t.length];return e=e.concat(t,[2,i.length],i),r.from(e)}(m,g)}(t,p,e)}if("rsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");t=r.concat([m,t]);for(var g=p.modulus.byteLength(),v=[0,1];t.length+v.length+1<g;)v.push(255);v.push(0);for(var y=-1;++y<t.length;)v.push(t[y]);return h(v,p)},t.exports.getKey=l,t.exports.makeKey=d},47753:(t,i,e)=>{var r=e(25679).Buffer,n=e(13550),h=e(86266).ec,o=e(70980),s=e(42236);function u(t,i){if(t.cmpn(0)<=0)throw new Error("invalid sig");if(t.cmp(i)>=i)throw new Error("invalid sig")}t.exports=function(t,i,e,a,l){var f=o(e);if("ec"===f.type){if("ecdsa"!==a&&"ecdsa/rsa"!==a)throw new Error("wrong public key type");return function(t,i,e){var r=s[e.data.algorithm.curve.join(".")];if(!r)throw new Error("unknown curve "+e.data.algorithm.curve.join("."));var n=new h(r),o=e.data.subjectPrivateKey.data;return n.verify(i,t,o)}(t,i,f)}if("dsa"===f.type){if("dsa"!==a)throw new Error("wrong public key type");return function(t,i,e){var r=e.data.p,h=e.data.q,s=e.data.g,a=e.data.pub_key,l=o.signature.decode(t,"der"),f=l.s,d=l.r;u(f,h),u(d,h);var c=n.mont(r),m=f.invm(h);return 0===s.toRed(c).redPow(new n(i).mul(m).mod(h)).fromRed().mul(a.toRed(c).redPow(d.mul(m).mod(h)).fromRed()).mod(r).mod(h).cmp(d)}(t,i,f)}if("rsa"!==a&&"ecdsa/rsa"!==a)throw new Error("wrong public key type");i=r.concat([l,i]);for(var d=f.modulus.byteLength(),c=[1],m=0;i.length+c.length+2<d;)c.push(255),m++;c.push(0);for(var p=-1;++p<i.length;)c.push(i[p]);c=r.from(c);var g=n.mont(f.modulus);t=(t=new n(t).toRed(g)).redPow(new n(f.publicExponent)),t=r.from(t.fromRed().toArray());var v=m<8?1:0;for(d=Math.min(t.length,c.length),t.length!==c.length&&(v=1),p=-1;++p<d;)v|=t[p]^c[p];return 0===v}},25679:(t,i,e)=>{var r=e(48764),n=r.Buffer;function h(t,i){for(var e in t)i[e]=t[e]}function o(t,i,e){return n(t,i,e)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?t.exports=r:(h(r,i),i.Buffer=o),o.prototype=Object.create(n.prototype),h(n,o),o.from=function(t,i,e){if("number"==typeof t)throw new TypeError("Argument must not be a number");return n(t,i,e)},o.alloc=function(t,i,e){if("number"!=typeof t)throw new TypeError("Argument must be a number");var r=n(t);return void 0!==i?"string"==typeof e?r.fill(i,e):r.fill(i):r.fill(0),r},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return n(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r.SlowBuffer(t)}},67295:t=>{t.exports=function(t,i){for(var e=Math.min(t.length,i.length),r=new Buffer(e),n=0;n<e;++n)r[n]=t[n]^i[n];return r}},76393:(t,i,e)=>{var r=e(86266),n=e(16426);t.exports=function(t){return new o(t)};var h={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};function o(t){this.curveType=h[t],this.curveType||(this.curveType={name:t}),this.curve=new r.ec(this.curveType.name),this.keys=void 0}function s(t,i,e){Array.isArray(t)||(t=t.toArray());var r=new Buffer(t);if(e&&r.length<e){var n=new Buffer(e-r.length);n.fill(0),r=Buffer.concat([n,r])}return i?r.toString(i):r}h.p224=h.secp224r1,h.p256=h.secp256r1=h.prime256v1,h.p192=h.secp192r1=h.prime192v1,h.p384=h.secp384r1,h.p521=h.secp521r1,o.prototype.generateKeys=function(t,i){return this.keys=this.curve.genKeyPair(),this.getPublicKey(t,i)},o.prototype.computeSecret=function(t,i,e){return i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i)),s(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(),e,this.curveType.byteLength)},o.prototype.getPublicKey=function(t,i){var e=this.keys.getPublic("compressed"===i,!0);return"hybrid"===i&&(e[e.length-1]%2?e[0]=7:e[0]=6),s(e,t)},o.prototype.getPrivateKey=function(t){return s(this.keys.getPrivate(),t)},o.prototype.setPublicKey=function(t,i){return i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i)),this.keys._importPublic(t),this},o.prototype.setPrivateKey=function(t,i){i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i));var e=new n(t);return e=e.toString(16),this.keys=this.curve.genKeyPair(),this.keys._importPrivate(e),this}},16426:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(8623).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,r){for(var n=0,h=Math.min(t.length,e),o=i;o<h;o++){var s=t.charCodeAt(o)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this.strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,d=Math.min(a,i.length-1),c=Math.max(0,a-t.length+1);c<=d;c++){var m=a-c|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[c])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!=(h=s>>>24-n&16777215)||o!==this.length-1?l[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],c=d[t];e="";var m=this.clone();for(m.negative=0;!m.isZero();){var p=m.modn(c).toString(t);e=(m=m.idivn(c)).isZero()?p+e:l[a-p.length]+p+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return r(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-n;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,d=l>>>13,c=0|o[1],m=8191&c,p=c>>>13,g=0|o[2],v=8191&g,y=g>>>13,M=0|o[3],w=8191&M,b=M>>>13,_=0|o[4],k=8191&_,S=_>>>13,A=0|o[5],B=8191&A,E=A>>>13,x=0|o[6],R=8191&x,I=x>>>13,C=0|o[7],T=8191&C,q=C>>>13,N=0|o[8],j=8191&N,D=N>>>13,P=0|o[9],L=8191&P,U=P>>>13,O=0|s[0],Z=8191&O,K=O>>>13,z=0|s[1],H=8191&z,F=z>>>13,V=0|s[2],G=8191&V,X=V>>>13,J=0|s[3],W=8191&J,Y=J>>>13,$=0|s[4],Q=8191&$,tt=$>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,dt=lt>>>13,ct=0|s[9],mt=8191&ct,pt=ct>>>13;e.negative=t.negative^i.negative,e.length=19;var gt=(a+(r=Math.imul(f,Z))|0)+((8191&(n=(n=Math.imul(f,K))+Math.imul(d,Z)|0))<<13)|0;a=((h=Math.imul(d,K))+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(m,Z),n=(n=Math.imul(m,K))+Math.imul(p,Z)|0,h=Math.imul(p,K);var vt=(a+(r=r+Math.imul(f,H)|0)|0)+((8191&(n=(n=n+Math.imul(f,F)|0)+Math.imul(d,H)|0))<<13)|0;a=((h=h+Math.imul(d,F)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(v,Z),n=(n=Math.imul(v,K))+Math.imul(y,Z)|0,h=Math.imul(y,K),r=r+Math.imul(m,H)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(p,H)|0,h=h+Math.imul(p,F)|0;var yt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,X)|0)+Math.imul(d,G)|0))<<13)|0;a=((h=h+Math.imul(d,X)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(w,Z),n=(n=Math.imul(w,K))+Math.imul(b,Z)|0,h=Math.imul(b,K),r=r+Math.imul(v,H)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(y,H)|0,h=h+Math.imul(y,F)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,X)|0)+Math.imul(p,G)|0,h=h+Math.imul(p,X)|0;var Mt=(a+(r=r+Math.imul(f,W)|0)|0)+((8191&(n=(n=n+Math.imul(f,Y)|0)+Math.imul(d,W)|0))<<13)|0;a=((h=h+Math.imul(d,Y)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,Z),n=(n=Math.imul(k,K))+Math.imul(S,Z)|0,h=Math.imul(S,K),r=r+Math.imul(w,H)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(b,H)|0,h=h+Math.imul(b,F)|0,r=r+Math.imul(v,G)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(y,G)|0,h=h+Math.imul(y,X)|0,r=r+Math.imul(m,W)|0,n=(n=n+Math.imul(m,Y)|0)+Math.imul(p,W)|0,h=h+Math.imul(p,Y)|0;var wt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(d,Q)|0))<<13)|0;a=((h=h+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(B,Z),n=(n=Math.imul(B,K))+Math.imul(E,Z)|0,h=Math.imul(E,K),r=r+Math.imul(k,H)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(S,H)|0,h=h+Math.imul(S,F)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,X)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,X)|0,r=r+Math.imul(v,W)|0,n=(n=n+Math.imul(v,Y)|0)+Math.imul(y,W)|0,h=h+Math.imul(y,Y)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(p,Q)|0,h=h+Math.imul(p,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(d,et)|0))<<13)|0;a=((h=h+Math.imul(d,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(R,Z),n=(n=Math.imul(R,K))+Math.imul(I,Z)|0,h=Math.imul(I,K),r=r+Math.imul(B,H)|0,n=(n=n+Math.imul(B,F)|0)+Math.imul(E,H)|0,h=h+Math.imul(E,F)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(S,G)|0,h=h+Math.imul(S,X)|0,r=r+Math.imul(w,W)|0,n=(n=n+Math.imul(w,Y)|0)+Math.imul(b,W)|0,h=h+Math.imul(b,Y)|0,r=r+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,tt)|0)+Math.imul(y,Q)|0,h=h+Math.imul(y,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(p,et)|0,h=h+Math.imul(p,rt)|0;var _t=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(d,ht)|0))<<13)|0;a=((h=h+Math.imul(d,ot)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(T,Z),n=(n=Math.imul(T,K))+Math.imul(q,Z)|0,h=Math.imul(q,K),r=r+Math.imul(R,H)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(I,H)|0,h=h+Math.imul(I,F)|0,r=r+Math.imul(B,G)|0,n=(n=n+Math.imul(B,X)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,X)|0,r=r+Math.imul(k,W)|0,n=(n=n+Math.imul(k,Y)|0)+Math.imul(S,W)|0,h=h+Math.imul(S,Y)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Q)|0,h=h+Math.imul(b,tt)|0,r=r+Math.imul(v,et)|0,n=(n=n+Math.imul(v,rt)|0)+Math.imul(y,et)|0,h=h+Math.imul(y,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(p,ht)|0,h=h+Math.imul(p,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(d,ut)|0))<<13)|0;a=((h=h+Math.imul(d,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(j,Z),n=(n=Math.imul(j,K))+Math.imul(D,Z)|0,h=Math.imul(D,K),r=r+Math.imul(T,H)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(q,H)|0,h=h+Math.imul(q,F)|0,r=r+Math.imul(R,G)|0,n=(n=n+Math.imul(R,X)|0)+Math.imul(I,G)|0,h=h+Math.imul(I,X)|0,r=r+Math.imul(B,W)|0,n=(n=n+Math.imul(B,Y)|0)+Math.imul(E,W)|0,h=h+Math.imul(E,Y)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Q)|0,h=h+Math.imul(S,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,h=h+Math.imul(b,rt)|0,r=r+Math.imul(v,ht)|0,n=(n=n+Math.imul(v,ot)|0)+Math.imul(y,ht)|0,h=h+Math.imul(y,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(p,ut)|0,h=h+Math.imul(p,at)|0;var St=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(d,ft)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,Z),n=(n=Math.imul(L,K))+Math.imul(U,Z)|0,h=Math.imul(U,K),r=r+Math.imul(j,H)|0,n=(n=n+Math.imul(j,F)|0)+Math.imul(D,H)|0,h=h+Math.imul(D,F)|0,r=r+Math.imul(T,G)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(q,G)|0,h=h+Math.imul(q,X)|0,r=r+Math.imul(R,W)|0,n=(n=n+Math.imul(R,Y)|0)+Math.imul(I,W)|0,h=h+Math.imul(I,Y)|0,r=r+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(E,Q)|0,h=h+Math.imul(E,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,h=h+Math.imul(S,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,r=r+Math.imul(v,ut)|0,n=(n=n+Math.imul(v,at)|0)+Math.imul(y,ut)|0,h=h+Math.imul(y,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,dt)|0)+Math.imul(p,ft)|0,h=h+Math.imul(p,dt)|0;var At=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,pt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,pt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,H),n=(n=Math.imul(L,F))+Math.imul(U,H)|0,h=Math.imul(U,F),r=r+Math.imul(j,G)|0,n=(n=n+Math.imul(j,X)|0)+Math.imul(D,G)|0,h=h+Math.imul(D,X)|0,r=r+Math.imul(T,W)|0,n=(n=n+Math.imul(T,Y)|0)+Math.imul(q,W)|0,h=h+Math.imul(q,Y)|0,r=r+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,tt)|0)+Math.imul(I,Q)|0,h=h+Math.imul(I,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(E,et)|0,h=h+Math.imul(E,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(S,ht)|0,h=h+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,r=r+Math.imul(v,ft)|0,n=(n=n+Math.imul(v,dt)|0)+Math.imul(y,ft)|0,h=h+Math.imul(y,dt)|0;var Bt=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,pt)|0)+Math.imul(p,mt)|0))<<13)|0;a=((h=h+Math.imul(p,pt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(L,G),n=(n=Math.imul(L,X))+Math.imul(U,G)|0,h=Math.imul(U,X),r=r+Math.imul(j,W)|0,n=(n=n+Math.imul(j,Y)|0)+Math.imul(D,W)|0,h=h+Math.imul(D,Y)|0,r=r+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(q,Q)|0,h=h+Math.imul(q,tt)|0,r=r+Math.imul(R,et)|0,n=(n=n+Math.imul(R,rt)|0)+Math.imul(I,et)|0,h=h+Math.imul(I,rt)|0,r=r+Math.imul(B,ht)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,h=h+Math.imul(S,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(b,ft)|0,h=h+Math.imul(b,dt)|0;var Et=(a+(r=r+Math.imul(v,mt)|0)|0)+((8191&(n=(n=n+Math.imul(v,pt)|0)+Math.imul(y,mt)|0))<<13)|0;a=((h=h+Math.imul(y,pt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(L,W),n=(n=Math.imul(L,Y))+Math.imul(U,W)|0,h=Math.imul(U,Y),r=r+Math.imul(j,Q)|0,n=(n=n+Math.imul(j,tt)|0)+Math.imul(D,Q)|0,h=h+Math.imul(D,tt)|0,r=r+Math.imul(T,et)|0,n=(n=n+Math.imul(T,rt)|0)+Math.imul(q,et)|0,h=h+Math.imul(q,rt)|0,r=r+Math.imul(R,ht)|0,n=(n=n+Math.imul(R,ot)|0)+Math.imul(I,ht)|0,h=h+Math.imul(I,ot)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,dt)|0)+Math.imul(S,ft)|0,h=h+Math.imul(S,dt)|0;var xt=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,pt)|0)+Math.imul(b,mt)|0))<<13)|0;a=((h=h+Math.imul(b,pt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(L,Q),n=(n=Math.imul(L,tt))+Math.imul(U,Q)|0,h=Math.imul(U,tt),r=r+Math.imul(j,et)|0,n=(n=n+Math.imul(j,rt)|0)+Math.imul(D,et)|0,h=h+Math.imul(D,rt)|0,r=r+Math.imul(T,ht)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(q,ht)|0,h=h+Math.imul(q,ot)|0,r=r+Math.imul(R,ut)|0,n=(n=n+Math.imul(R,at)|0)+Math.imul(I,ut)|0,h=h+Math.imul(I,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(E,ft)|0,h=h+Math.imul(E,dt)|0;var Rt=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,pt)|0)+Math.imul(S,mt)|0))<<13)|0;a=((h=h+Math.imul(S,pt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(L,et),n=(n=Math.imul(L,rt))+Math.imul(U,et)|0,h=Math.imul(U,rt),r=r+Math.imul(j,ht)|0,n=(n=n+Math.imul(j,ot)|0)+Math.imul(D,ht)|0,h=h+Math.imul(D,ot)|0,r=r+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,at)|0)+Math.imul(q,ut)|0,h=h+Math.imul(q,at)|0,r=r+Math.imul(R,ft)|0,n=(n=n+Math.imul(R,dt)|0)+Math.imul(I,ft)|0,h=h+Math.imul(I,dt)|0;var It=(a+(r=r+Math.imul(B,mt)|0)|0)+((8191&(n=(n=n+Math.imul(B,pt)|0)+Math.imul(E,mt)|0))<<13)|0;a=((h=h+Math.imul(E,pt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,ht),n=(n=Math.imul(L,ot))+Math.imul(U,ht)|0,h=Math.imul(U,ot),r=r+Math.imul(j,ut)|0,n=(n=n+Math.imul(j,at)|0)+Math.imul(D,ut)|0,h=h+Math.imul(D,at)|0,r=r+Math.imul(T,ft)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(q,ft)|0,h=h+Math.imul(q,dt)|0;var Ct=(a+(r=r+Math.imul(R,mt)|0)|0)+((8191&(n=(n=n+Math.imul(R,pt)|0)+Math.imul(I,mt)|0))<<13)|0;a=((h=h+Math.imul(I,pt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,ut),n=(n=Math.imul(L,at))+Math.imul(U,ut)|0,h=Math.imul(U,at),r=r+Math.imul(j,ft)|0,n=(n=n+Math.imul(j,dt)|0)+Math.imul(D,ft)|0,h=h+Math.imul(D,dt)|0;var Tt=(a+(r=r+Math.imul(T,mt)|0)|0)+((8191&(n=(n=n+Math.imul(T,pt)|0)+Math.imul(q,mt)|0))<<13)|0;a=((h=h+Math.imul(q,pt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),n=(n=Math.imul(L,dt))+Math.imul(U,ft)|0,h=Math.imul(U,dt);var qt=(a+(r=r+Math.imul(j,mt)|0)|0)+((8191&(n=(n=n+Math.imul(j,pt)|0)+Math.imul(D,mt)|0))<<13)|0;a=((h=h+Math.imul(D,pt)|0)+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863;var Nt=(a+(r=Math.imul(L,mt))|0)+((8191&(n=(n=Math.imul(L,pt))+Math.imul(U,mt)|0))<<13)|0;return a=((h=Math.imul(U,pt))+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=gt,u[1]=vt,u[2]=yt,u[3]=Mt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=St,u[9]=At,u[10]=Bt,u[11]=Et,u[12]=xt,u[13]=Rt,u[14]=It,u[15]=Ct,u[16]=Tt,u[17]=qt,u[18]=Nt,0!==a&&(u[19]=a,e.length++),e};function p(t,i,e){return(new g).mulp(t,i,e)}function g(t,i){this.x=t,this.y=i}Math.imul||(m=c),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,i):e<63?c(this,t,i):e<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),d=67108863&f;s=67108863&(d=d+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e.strip()}(this,t,i):p(this,t,i)},g.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},g.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},g.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},g.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,d=a,c=0;c<o;c++){var m=e[l+c],p=r[l+c],g=e[l+c+o],v=r[l+c+o],y=f*g-d*v;v=f*v+d*g,g=y,e[l+c]=m+g,r[l+c]=p+v,e[l+c+o]=m-g,r[l+c+o]=p-v,c!==s&&(y=u*f-a*d,d=u*d+a*f,f=y)}},g.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},g.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},g.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},g.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},g.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},g.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),d=e.words;d.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var c=0;c<r;c++){var m=s[c]*l[c]-u[c]*f[c];u[c]=s[c]*f[c]+u[c]*l[c],s[c]=m}return this.conjugate(s,u,r),this.transform(s,u,d,h,r,n),this.conjugate(d,h,r),this.normalize13b(d,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,h=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=h>>>26,this.words[e]=67108863&h}return 0!==i&&(this.words[e]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e||!(this.words[e]&n))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!=(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(d=Math.min(d/o|0,67108863),r._ishlnsubmul(n,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},h.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var d=0,c=1;0==(i.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(i.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,p=1;0==(e.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new k(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},y.prototype.split=function(t,i){t.iushrn(this.n,0,i)},y.prototype.imulK=function(t){return t.imul(this.k)},n(M,y),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,y),n(b,y),n(_,y),_.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new w;else if("p192"===t)i=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new _}return v[t]=i,i},k.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},k.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},k.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},k.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},k.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},k.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},k.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),d=this.pow(t,n.addn(1).iushrn(1)),c=this.pow(t,n),m=o;0!==c.cmp(s);){for(var p=c,g=0;0!==p.cmp(s);g++)p=p.redSqr();r(g<m);var v=this.pow(f,new h(1).iushln(m-g-1));d=d.redMul(v),f=v.redSqr(),c=c.redMul(f),m=g}return d},k.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},k.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4==++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},k.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},k.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,k),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},78028:(t,i,e)=>{var r=e(62318);t.exports=function(t){return(new r).update(t).digest()}},58355:(t,i,e)=>{"use strict";var r=e(35717),n=e(51031),h=e(71027),o=e(89509).Buffer,s=e(78028),u=e(79785),a=e(89072),l=o.alloc(128);function f(t,i){h.call(this,"digest"),"string"==typeof i&&(i=o.from(i));var e="sha512"===t||"sha384"===t?128:64;this._alg=t,this._key=i,i.length>e?i=("rmd160"===t?new u:a(t)).update(i).digest():i.length<e&&(i=o.concat([i,l],e));for(var r=this._ipad=o.allocUnsafe(e),n=this._opad=o.allocUnsafe(e),s=0;s<e;s++)r[s]=54^i[s],n[s]=92^i[s];this._hash="rmd160"===t?new u:a(t),this._hash.update(r)}r(f,h),f.prototype._update=function(t){this._hash.update(t)},f.prototype._final=function(){var t=this._hash.digest();return("rmd160"===this._alg?new u:a(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,i){return"rmd160"===(t=t.toLowerCase())||"ripemd160"===t?new f("rmd160",i):"md5"===t?new n(s,i):new f(t,i)}},51031:(t,i,e)=>{"use strict";var r=e(35717),n=e(89509).Buffer,h=e(71027),o=n.alloc(128),s=64;function u(t,i){h.call(this,"digest"),"string"==typeof i&&(i=n.from(i)),this._alg=t,this._key=i,i.length>s?i=t(i):i.length<s&&(i=n.concat([i,o],s));for(var e=this._ipad=n.allocUnsafe(s),r=this._opad=n.allocUnsafe(s),u=0;u<s;u++)e[u]=54^i[u],r[u]=92^i[u];this._hash=[e]}r(u,h),u.prototype._update=function(t){this._hash.push(t)},u.prototype._final=function(){var t=this._alg(n.concat(this._hash));return this._alg(n.concat([this._opad,t]))},t.exports=u},55835:(t,i,e)=>{"use strict";i.randomBytes=i.rng=i.pseudoRandomBytes=i.prng=e(61798),i.createHash=i.Hash=e(23482),i.createHmac=i.Hmac=e(58355);var r=e(56042),n=Object.keys(r),h=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(n);i.getHashes=function(){return h};var o=e(25632);i.pbkdf2=o.pbkdf2,i.pbkdf2Sync=o.pbkdf2Sync;var s=e(53614);i.Cipher=s.Cipher,i.createCipher=s.createCipher,i.Cipheriv=s.Cipheriv,i.createCipheriv=s.createCipheriv,i.Decipher=s.Decipher,i.createDecipher=s.createDecipher,i.Decipheriv=s.Decipheriv,i.createDecipheriv=s.createDecipheriv,i.getCiphers=s.getCiphers,i.listCiphers=s.listCiphers;var u=e(62607);i.DiffieHellmanGroup=u.DiffieHellmanGroup,i.createDiffieHellmanGroup=u.createDiffieHellmanGroup,i.getDiffieHellman=u.getDiffieHellman,i.createDiffieHellman=u.createDiffieHellman,i.DiffieHellman=u.DiffieHellman;var a=e(64743);i.createSign=a.createSign,i.Sign=a.Sign,i.createVerify=a.createVerify,i.Verify=a.Verify,i.createECDH=e(76393);var l=e(7900);i.publicEncrypt=l.publicEncrypt,i.privateEncrypt=l.privateEncrypt,i.publicDecrypt=l.publicDecrypt,i.privateDecrypt=l.privateDecrypt;var f=e(77963);i.randomFill=f.randomFill,i.randomFillSync=f.randomFillSync,i.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},i.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},15251:(t,i,e)=>{"use strict";i.utils=e(11278),i.Cipher=e(55756),i.DES=e(70778),i.CBC=e(39051),i.EDE=e(50651)},39051:(t,i,e)=>{"use strict";var r=e(79746),n=e(35717),h={};function o(t){r.equal(t.length,8,"Invalid IV length"),this.iv=new Array(8);for(var i=0;i<this.iv.length;i++)this.iv[i]=t[i]}i.instantiate=function(t){function i(i){t.call(this,i),this._cbcInit()}n(i,t);for(var e=Object.keys(h),r=0;r<e.length;r++){var o=e[r];i.prototype[o]=h[o]}return i.create=function(t){return new i(t)},i},h._cbcInit=function(){var t=new o(this.options.iv);this._cbcState=t},h._update=function(t,i,e,r){var n=this._cbcState,h=this.constructor.super_.prototype,o=n.iv;if("encrypt"===this.type){for(var s=0;s<this.blockSize;s++)o[s]^=t[i+s];for(h._update.call(this,o,0,e,r),s=0;s<this.blockSize;s++)o[s]=e[r+s]}else{for(h._update.call(this,t,i,e,r),s=0;s<this.blockSize;s++)e[r+s]^=o[s];for(s=0;s<this.blockSize;s++)o[s]=t[i+s]}}},55756:(t,i,e)=>{"use strict";var r=e(79746);function n(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0}t.exports=n,n.prototype._init=function(){},n.prototype.update=function(t){return 0===t.length?[]:"decrypt"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},n.prototype._buffer=function(t,i){for(var e=Math.min(this.buffer.length-this.bufferOff,t.length-i),r=0;r<e;r++)this.buffer[this.bufferOff+r]=t[i+r];return this.bufferOff+=e,e},n.prototype._flushBuffer=function(t,i){return this._update(this.buffer,0,t,i),this.bufferOff=0,this.blockSize},n.prototype._updateEncrypt=function(t){var i=0,e=0,r=(this.bufferOff+t.length)/this.blockSize|0,n=new Array(r*this.blockSize);0!==this.bufferOff&&(i+=this._buffer(t,i),this.bufferOff===this.buffer.length&&(e+=this._flushBuffer(n,e)));for(var h=t.length-(t.length-i)%this.blockSize;i<h;i+=this.blockSize)this._update(t,i,n,e),e+=this.blockSize;for(;i<t.length;i++,this.bufferOff++)this.buffer[this.bufferOff]=t[i];return n},n.prototype._updateDecrypt=function(t){for(var i=0,e=0,r=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,n=new Array(r*this.blockSize);r>0;r--)i+=this._buffer(t,i),e+=this._flushBuffer(n,e);return i+=this._buffer(t,i),n},n.prototype.final=function(t){var i,e;return t&&(i=this.update(t)),e="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),i?i.concat(e):e},n.prototype._pad=function(t,i){if(0===i)return!1;for(;i<t.length;)t[i++]=0;return!0},n.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=new Array(this.blockSize);return this._update(this.buffer,0,t,0),t},n.prototype._unpad=function(t){return t},n.prototype._finalDecrypt=function(){r.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var t=new Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}},70778:(t,i,e)=>{"use strict";var r=e(79746),n=e(35717),h=e(11278),o=e(55756);function s(){this.tmp=new Array(2),this.keys=null}function u(t){o.call(this,t);var i=new s;this._desState=i,this.deriveKeys(i,t.key)}n(u,o),t.exports=u,u.create=function(t){return new u(t)};var a=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];u.prototype.deriveKeys=function(t,i){t.keys=new Array(32),r.equal(i.length,this.blockSize,"Invalid key length");var e=h.readUInt32BE(i,0),n=h.readUInt32BE(i,4);h.pc1(e,n,t.tmp,0),e=t.tmp[0],n=t.tmp[1];for(var o=0;o<t.keys.length;o+=2){var s=a[o>>>1];e=h.r28shl(e,s),n=h.r28shl(n,s),h.pc2(e,n,t.keys,o)}},u.prototype._update=function(t,i,e,r){var n=this._desState,o=h.readUInt32BE(t,i),s=h.readUInt32BE(t,i+4);h.ip(o,s,n.tmp,0),o=n.tmp[0],s=n.tmp[1],"encrypt"===this.type?this._encrypt(n,o,s,n.tmp,0):this._decrypt(n,o,s,n.tmp,0),o=n.tmp[0],s=n.tmp[1],h.writeUInt32BE(e,o,r),h.writeUInt32BE(e,s,r+4)},u.prototype._pad=function(t,i){for(var e=t.length-i,r=i;r<t.length;r++)t[r]=e;return!0},u.prototype._unpad=function(t){for(var i=t[t.length-1],e=t.length-i;e<t.length;e++)r.equal(t[e],i);return t.slice(0,t.length-i)},u.prototype._encrypt=function(t,i,e,r,n){for(var o=i,s=e,u=0;u<t.keys.length;u+=2){var a=t.keys[u],l=t.keys[u+1];h.expand(s,t.tmp,0),a^=t.tmp[0],l^=t.tmp[1];var f=h.substitute(a,l),d=s;s=(o^h.permute(f))>>>0,o=d}h.rip(s,o,r,n)},u.prototype._decrypt=function(t,i,e,r,n){for(var o=e,s=i,u=t.keys.length-2;u>=0;u-=2){var a=t.keys[u],l=t.keys[u+1];h.expand(o,t.tmp,0),a^=t.tmp[0],l^=t.tmp[1];var f=h.substitute(a,l),d=o;o=(s^h.permute(f))>>>0,s=d}h.rip(o,s,r,n)}},50651:(t,i,e)=>{"use strict";var r=e(79746),n=e(35717),h=e(55756),o=e(70778);function s(t,i){r.equal(i.length,24,"Invalid key length");var e=i.slice(0,8),n=i.slice(8,16),h=i.slice(16,24);this.ciphers="encrypt"===t?[o.create({type:"encrypt",key:e}),o.create({type:"decrypt",key:n}),o.create({type:"encrypt",key:h})]:[o.create({type:"decrypt",key:h}),o.create({type:"encrypt",key:n}),o.create({type:"decrypt",key:e})]}function u(t){h.call(this,t);var i=new s(this.type,this.options.key);this._edeState=i}n(u,h),t.exports=u,u.create=function(t){return new u(t)},u.prototype._update=function(t,i,e,r){var n=this._edeState;n.ciphers[0]._update(t,i,e,r),n.ciphers[1]._update(e,r,e,r),n.ciphers[2]._update(e,r,e,r)},u.prototype._pad=o.prototype._pad,u.prototype._unpad=o.prototype._unpad},11278:(t,i)=>{"use strict";i.readUInt32BE=function(t,i){return(t[0+i]<<24|t[1+i]<<16|t[2+i]<<8|t[3+i])>>>0},i.writeUInt32BE=function(t,i,e){t[0+e]=i>>>24,t[1+e]=i>>>16&255,t[2+e]=i>>>8&255,t[3+e]=255&i},i.ip=function(t,i,e,r){for(var n=0,h=0,o=6;o>=0;o-=2){for(var s=0;s<=24;s+=8)n<<=1,n|=i>>>s+o&1;for(s=0;s<=24;s+=8)n<<=1,n|=t>>>s+o&1}for(o=6;o>=0;o-=2){for(s=1;s<=25;s+=8)h<<=1,h|=i>>>s+o&1;for(s=1;s<=25;s+=8)h<<=1,h|=t>>>s+o&1}e[r+0]=n>>>0,e[r+1]=h>>>0},i.rip=function(t,i,e,r){for(var n=0,h=0,o=0;o<4;o++)for(var s=24;s>=0;s-=8)n<<=1,n|=i>>>s+o&1,n<<=1,n|=t>>>s+o&1;for(o=4;o<8;o++)for(s=24;s>=0;s-=8)h<<=1,h|=i>>>s+o&1,h<<=1,h|=t>>>s+o&1;e[r+0]=n>>>0,e[r+1]=h>>>0},i.pc1=function(t,i,e,r){for(var n=0,h=0,o=7;o>=5;o--){for(var s=0;s<=24;s+=8)n<<=1,n|=i>>s+o&1;for(s=0;s<=24;s+=8)n<<=1,n|=t>>s+o&1}for(s=0;s<=24;s+=8)n<<=1,n|=i>>s+o&1;for(o=1;o<=3;o++){for(s=0;s<=24;s+=8)h<<=1,h|=i>>s+o&1;for(s=0;s<=24;s+=8)h<<=1,h|=t>>s+o&1}for(s=0;s<=24;s+=8)h<<=1,h|=t>>s+o&1;e[r+0]=n>>>0,e[r+1]=h>>>0},i.r28shl=function(t,i){return t<<i&268435455|t>>>28-i};var e=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];i.pc2=function(t,i,r,n){for(var h=0,o=0,s=e.length>>>1,u=0;u<s;u++)h<<=1,h|=t>>>e[u]&1;for(u=s;u<e.length;u++)o<<=1,o|=i>>>e[u]&1;r[n+0]=h>>>0,r[n+1]=o>>>0},i.expand=function(t,i,e){var r=0,n=0;r=(1&t)<<5|t>>>27;for(var h=23;h>=15;h-=4)r<<=6,r|=t>>>h&63;for(h=11;h>=3;h-=4)n|=t>>>h&63,n<<=6;n|=(31&t)<<1|t>>>31,i[e+0]=r>>>0,i[e+1]=n>>>0};var r=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];i.substitute=function(t,i){for(var e=0,n=0;n<4;n++)e<<=4,e|=r[64*n+(t>>>18-6*n&63)];for(n=0;n<4;n++)e<<=4,e|=r[256+64*n+(i>>>18-6*n&63)];return e>>>0};var n=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];i.permute=function(t){for(var i=0,e=0;e<n.length;e++)i<<=1,i|=t>>>n[e]&1;return i>>>0},i.padSplit=function(t,i,e){for(var r=t.toString(2);r.length<i;)r="0"+r;for(var n=[],h=0;h<i;h+=e)n.push(r.slice(h,h+e));return n.join(" ")}},62607:(t,i,e)=>{var r=e(43590),n=e(61930),h=e(57426),o={binary:!0,hex:!0,base64:!0};i.DiffieHellmanGroup=i.createDiffieHellmanGroup=i.getDiffieHellman=function(t){var i=new Buffer(n[t].prime,"hex"),e=new Buffer(n[t].gen,"hex");return new h(i,e)},i.createDiffieHellman=i.DiffieHellman=function t(i,e,n,s){return Buffer.isBuffer(e)||void 0===o[e]?t(i,"binary",e,n):(e=e||"binary",s=s||"binary",n=n||new Buffer([2]),Buffer.isBuffer(n)||(n=new Buffer(n,s)),"number"==typeof i?new h(r(i,n),n,!0):(Buffer.isBuffer(i)||(i=new Buffer(i,e)),new h(i,n,!0)))}},57426:(t,i,e)=>{var r=e(83620),n=new(e(63047)),h=new r(24),o=new r(11),s=new r(10),u=new r(3),a=new r(7),l=e(43590),f=e(61798);function d(t,i){return i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i)),this._pub=new r(t),this}function c(t,i){return i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i)),this._priv=new r(t),this}t.exports=p;var m={};function p(t,i,e){this.setGenerator(i),this.__prime=new r(t),this._prime=r.mont(this.__prime),this._primeLen=t.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,e?(this.setPublicKey=d,this.setPrivateKey=c):this._primeCode=8}function g(t,i){var e=new Buffer(t.toArray());return i?e.toString(i):e}Object.defineProperty(p.prototype,"verifyError",{enumerable:!0,get:function(){return"number"!=typeof this._primeCode&&(this._primeCode=function(t,i){var e=i.toString("hex"),r=[e,t.toString(16)].join("_");if(r in m)return m[r];var f,d=0;if(t.isEven()||!l.simpleSieve||!l.fermatTest(t)||!n.test(t))return d+=1,d+="02"===e||"05"===e?8:4,m[r]=d,d;switch(n.test(t.shrn(1))||(d+=2),e){case"02":t.mod(h).cmp(o)&&(d+=8);break;case"05":(f=t.mod(s)).cmp(u)&&f.cmp(a)&&(d+=8);break;default:d+=4}return m[r]=d,d}(this.__prime,this.__gen)),this._primeCode}}),p.prototype.generateKeys=function(){return this._priv||(this._priv=new r(f(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},p.prototype.computeSecret=function(t){var i=(t=(t=new r(t)).toRed(this._prime)).redPow(this._priv).fromRed(),e=new Buffer(i.toArray()),n=this.getPrime();if(e.length<n.length){var h=new Buffer(n.length-e.length);h.fill(0),e=Buffer.concat([h,e])}return e},p.prototype.getPublicKey=function(t){return g(this._pub,t)},p.prototype.getPrivateKey=function(t){return g(this._priv,t)},p.prototype.getPrime=function(t){return g(this.__prime,t)},p.prototype.getGenerator=function(t){return g(this._gen,t)},p.prototype.setGenerator=function(t,i){return i=i||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,i)),this.__gen=t,this._gen=new r(t),this}},43590:(t,i,e)=>{var r=e(61798);t.exports=y,y.simpleSieve=g,y.fermatTest=v;var n=e(83620),h=new n(24),o=new(e(63047)),s=new n(1),u=new n(2),a=new n(5),l=(new n(16),new n(8),new n(10)),f=new n(3),d=(new n(7),new n(11)),c=new n(4),m=(new n(12),null);function p(){if(null!==m)return m;var t=[];t[0]=2;for(var i=1,e=3;e<1048576;e+=2){for(var r=Math.ceil(Math.sqrt(e)),n=0;n<i&&t[n]<=r&&e%t[n]!=0;n++);i!==n&&t[n]<=r||(t[i++]=e)}return m=t,t}function g(t){for(var i=p(),e=0;e<i.length;e++)if(0===t.modn(i[e]))return 0===t.cmpn(i[e]);return!0}function v(t){var i=n.mont(t);return 0===u.toRed(i).redPow(t.subn(1)).fromRed().cmpn(1)}function y(t,i){if(t<16)return new n(2===i||5===i?[140,123]:[140,39]);var e,m;for(i=new n(i);;){for(e=new n(r(Math.ceil(t/8)));e.bitLength()>t;)e.ishrn(1);if(e.isEven()&&e.iadd(s),e.testn(1)||e.iadd(u),i.cmp(u)){if(!i.cmp(a))for(;e.mod(l).cmp(f);)e.iadd(c)}else for(;e.mod(h).cmp(d);)e.iadd(c);if(g(m=e.shrn(1))&&g(e)&&v(m)&&v(e)&&o.test(m)&&o.test(e))return e}}},61930:t=>{"use strict";t.exports=JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}')},83620:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(7748).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,r){for(var n=0,h=Math.min(t.length,e),o=i;o<h;o++){var s=t.charCodeAt(o)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this.strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,d=Math.min(a,i.length-1),c=Math.max(0,a-t.length+1);c<=d;c++){var m=a-c|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[c])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!=(h=s>>>24-n&16777215)||o!==this.length-1?l[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],c=d[t];e="";var m=this.clone();for(m.negative=0;!m.isZero();){var p=m.modn(c).toString(t);e=(m=m.idivn(c)).isZero()?p+e:l[a-p.length]+p+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return r(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-n;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,d=l>>>13,c=0|o[1],m=8191&c,p=c>>>13,g=0|o[2],v=8191&g,y=g>>>13,M=0|o[3],w=8191&M,b=M>>>13,_=0|o[4],k=8191&_,S=_>>>13,A=0|o[5],B=8191&A,E=A>>>13,x=0|o[6],R=8191&x,I=x>>>13,C=0|o[7],T=8191&C,q=C>>>13,N=0|o[8],j=8191&N,D=N>>>13,P=0|o[9],L=8191&P,U=P>>>13,O=0|s[0],Z=8191&O,K=O>>>13,z=0|s[1],H=8191&z,F=z>>>13,V=0|s[2],G=8191&V,X=V>>>13,J=0|s[3],W=8191&J,Y=J>>>13,$=0|s[4],Q=8191&$,tt=$>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,dt=lt>>>13,ct=0|s[9],mt=8191&ct,pt=ct>>>13;e.negative=t.negative^i.negative,e.length=19;var gt=(a+(r=Math.imul(f,Z))|0)+((8191&(n=(n=Math.imul(f,K))+Math.imul(d,Z)|0))<<13)|0;a=((h=Math.imul(d,K))+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(m,Z),n=(n=Math.imul(m,K))+Math.imul(p,Z)|0,h=Math.imul(p,K);var vt=(a+(r=r+Math.imul(f,H)|0)|0)+((8191&(n=(n=n+Math.imul(f,F)|0)+Math.imul(d,H)|0))<<13)|0;a=((h=h+Math.imul(d,F)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(v,Z),n=(n=Math.imul(v,K))+Math.imul(y,Z)|0,h=Math.imul(y,K),r=r+Math.imul(m,H)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(p,H)|0,h=h+Math.imul(p,F)|0;var yt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,X)|0)+Math.imul(d,G)|0))<<13)|0;a=((h=h+Math.imul(d,X)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(w,Z),n=(n=Math.imul(w,K))+Math.imul(b,Z)|0,h=Math.imul(b,K),r=r+Math.imul(v,H)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(y,H)|0,h=h+Math.imul(y,F)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,X)|0)+Math.imul(p,G)|0,h=h+Math.imul(p,X)|0;var Mt=(a+(r=r+Math.imul(f,W)|0)|0)+((8191&(n=(n=n+Math.imul(f,Y)|0)+Math.imul(d,W)|0))<<13)|0;a=((h=h+Math.imul(d,Y)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,Z),n=(n=Math.imul(k,K))+Math.imul(S,Z)|0,h=Math.imul(S,K),r=r+Math.imul(w,H)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(b,H)|0,h=h+Math.imul(b,F)|0,r=r+Math.imul(v,G)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(y,G)|0,h=h+Math.imul(y,X)|0,r=r+Math.imul(m,W)|0,n=(n=n+Math.imul(m,Y)|0)+Math.imul(p,W)|0,h=h+Math.imul(p,Y)|0;var wt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(d,Q)|0))<<13)|0;a=((h=h+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(B,Z),n=(n=Math.imul(B,K))+Math.imul(E,Z)|0,h=Math.imul(E,K),r=r+Math.imul(k,H)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(S,H)|0,h=h+Math.imul(S,F)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,X)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,X)|0,r=r+Math.imul(v,W)|0,n=(n=n+Math.imul(v,Y)|0)+Math.imul(y,W)|0,h=h+Math.imul(y,Y)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(p,Q)|0,h=h+Math.imul(p,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(d,et)|0))<<13)|0;a=((h=h+Math.imul(d,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(R,Z),n=(n=Math.imul(R,K))+Math.imul(I,Z)|0,h=Math.imul(I,K),r=r+Math.imul(B,H)|0,n=(n=n+Math.imul(B,F)|0)+Math.imul(E,H)|0,h=h+Math.imul(E,F)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(S,G)|0,h=h+Math.imul(S,X)|0,r=r+Math.imul(w,W)|0,n=(n=n+Math.imul(w,Y)|0)+Math.imul(b,W)|0,h=h+Math.imul(b,Y)|0,r=r+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,tt)|0)+Math.imul(y,Q)|0,h=h+Math.imul(y,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(p,et)|0,h=h+Math.imul(p,rt)|0;var _t=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(d,ht)|0))<<13)|0;a=((h=h+Math.imul(d,ot)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(T,Z),n=(n=Math.imul(T,K))+Math.imul(q,Z)|0,h=Math.imul(q,K),r=r+Math.imul(R,H)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(I,H)|0,h=h+Math.imul(I,F)|0,r=r+Math.imul(B,G)|0,n=(n=n+Math.imul(B,X)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,X)|0,r=r+Math.imul(k,W)|0,n=(n=n+Math.imul(k,Y)|0)+Math.imul(S,W)|0,h=h+Math.imul(S,Y)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Q)|0,h=h+Math.imul(b,tt)|0,r=r+Math.imul(v,et)|0,n=(n=n+Math.imul(v,rt)|0)+Math.imul(y,et)|0,h=h+Math.imul(y,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(p,ht)|0,h=h+Math.imul(p,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(d,ut)|0))<<13)|0;a=((h=h+Math.imul(d,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(j,Z),n=(n=Math.imul(j,K))+Math.imul(D,Z)|0,h=Math.imul(D,K),r=r+Math.imul(T,H)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(q,H)|0,h=h+Math.imul(q,F)|0,r=r+Math.imul(R,G)|0,n=(n=n+Math.imul(R,X)|0)+Math.imul(I,G)|0,h=h+Math.imul(I,X)|0,r=r+Math.imul(B,W)|0,n=(n=n+Math.imul(B,Y)|0)+Math.imul(E,W)|0,h=h+Math.imul(E,Y)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Q)|0,h=h+Math.imul(S,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,h=h+Math.imul(b,rt)|0,r=r+Math.imul(v,ht)|0,n=(n=n+Math.imul(v,ot)|0)+Math.imul(y,ht)|0,h=h+Math.imul(y,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(p,ut)|0,h=h+Math.imul(p,at)|0;var St=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(d,ft)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,Z),n=(n=Math.imul(L,K))+Math.imul(U,Z)|0,h=Math.imul(U,K),r=r+Math.imul(j,H)|0,n=(n=n+Math.imul(j,F)|0)+Math.imul(D,H)|0,h=h+Math.imul(D,F)|0,r=r+Math.imul(T,G)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(q,G)|0,h=h+Math.imul(q,X)|0,r=r+Math.imul(R,W)|0,n=(n=n+Math.imul(R,Y)|0)+Math.imul(I,W)|0,h=h+Math.imul(I,Y)|0,r=r+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(E,Q)|0,h=h+Math.imul(E,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,h=h+Math.imul(S,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,r=r+Math.imul(v,ut)|0,n=(n=n+Math.imul(v,at)|0)+Math.imul(y,ut)|0,h=h+Math.imul(y,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,dt)|0)+Math.imul(p,ft)|0,h=h+Math.imul(p,dt)|0;var At=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,pt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,pt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,H),n=(n=Math.imul(L,F))+Math.imul(U,H)|0,h=Math.imul(U,F),r=r+Math.imul(j,G)|0,n=(n=n+Math.imul(j,X)|0)+Math.imul(D,G)|0,h=h+Math.imul(D,X)|0,r=r+Math.imul(T,W)|0,n=(n=n+Math.imul(T,Y)|0)+Math.imul(q,W)|0,h=h+Math.imul(q,Y)|0,r=r+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,tt)|0)+Math.imul(I,Q)|0,h=h+Math.imul(I,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(E,et)|0,h=h+Math.imul(E,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(S,ht)|0,h=h+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,r=r+Math.imul(v,ft)|0,n=(n=n+Math.imul(v,dt)|0)+Math.imul(y,ft)|0,h=h+Math.imul(y,dt)|0;var Bt=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,pt)|0)+Math.imul(p,mt)|0))<<13)|0;a=((h=h+Math.imul(p,pt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(L,G),n=(n=Math.imul(L,X))+Math.imul(U,G)|0,h=Math.imul(U,X),r=r+Math.imul(j,W)|0,n=(n=n+Math.imul(j,Y)|0)+Math.imul(D,W)|0,h=h+Math.imul(D,Y)|0,r=r+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(q,Q)|0,h=h+Math.imul(q,tt)|0,r=r+Math.imul(R,et)|0,n=(n=n+Math.imul(R,rt)|0)+Math.imul(I,et)|0,h=h+Math.imul(I,rt)|0,r=r+Math.imul(B,ht)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,h=h+Math.imul(S,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(b,ft)|0,h=h+Math.imul(b,dt)|0;var Et=(a+(r=r+Math.imul(v,mt)|0)|0)+((8191&(n=(n=n+Math.imul(v,pt)|0)+Math.imul(y,mt)|0))<<13)|0;a=((h=h+Math.imul(y,pt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(L,W),n=(n=Math.imul(L,Y))+Math.imul(U,W)|0,h=Math.imul(U,Y),r=r+Math.imul(j,Q)|0,n=(n=n+Math.imul(j,tt)|0)+Math.imul(D,Q)|0,h=h+Math.imul(D,tt)|0,r=r+Math.imul(T,et)|0,n=(n=n+Math.imul(T,rt)|0)+Math.imul(q,et)|0,h=h+Math.imul(q,rt)|0,r=r+Math.imul(R,ht)|0,n=(n=n+Math.imul(R,ot)|0)+Math.imul(I,ht)|0,h=h+Math.imul(I,ot)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,dt)|0)+Math.imul(S,ft)|0,h=h+Math.imul(S,dt)|0;var xt=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,pt)|0)+Math.imul(b,mt)|0))<<13)|0;a=((h=h+Math.imul(b,pt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(L,Q),n=(n=Math.imul(L,tt))+Math.imul(U,Q)|0,h=Math.imul(U,tt),r=r+Math.imul(j,et)|0,n=(n=n+Math.imul(j,rt)|0)+Math.imul(D,et)|0,h=h+Math.imul(D,rt)|0,r=r+Math.imul(T,ht)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(q,ht)|0,h=h+Math.imul(q,ot)|0,r=r+Math.imul(R,ut)|0,n=(n=n+Math.imul(R,at)|0)+Math.imul(I,ut)|0,h=h+Math.imul(I,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(E,ft)|0,h=h+Math.imul(E,dt)|0;var Rt=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,pt)|0)+Math.imul(S,mt)|0))<<13)|0;a=((h=h+Math.imul(S,pt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(L,et),n=(n=Math.imul(L,rt))+Math.imul(U,et)|0,h=Math.imul(U,rt),r=r+Math.imul(j,ht)|0,n=(n=n+Math.imul(j,ot)|0)+Math.imul(D,ht)|0,h=h+Math.imul(D,ot)|0,r=r+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,at)|0)+Math.imul(q,ut)|0,h=h+Math.imul(q,at)|0,r=r+Math.imul(R,ft)|0,n=(n=n+Math.imul(R,dt)|0)+Math.imul(I,ft)|0,h=h+Math.imul(I,dt)|0;var It=(a+(r=r+Math.imul(B,mt)|0)|0)+((8191&(n=(n=n+Math.imul(B,pt)|0)+Math.imul(E,mt)|0))<<13)|0;a=((h=h+Math.imul(E,pt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,ht),n=(n=Math.imul(L,ot))+Math.imul(U,ht)|0,h=Math.imul(U,ot),r=r+Math.imul(j,ut)|0,n=(n=n+Math.imul(j,at)|0)+Math.imul(D,ut)|0,h=h+Math.imul(D,at)|0,r=r+Math.imul(T,ft)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(q,ft)|0,h=h+Math.imul(q,dt)|0;var Ct=(a+(r=r+Math.imul(R,mt)|0)|0)+((8191&(n=(n=n+Math.imul(R,pt)|0)+Math.imul(I,mt)|0))<<13)|0;a=((h=h+Math.imul(I,pt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,ut),n=(n=Math.imul(L,at))+Math.imul(U,ut)|0,h=Math.imul(U,at),r=r+Math.imul(j,ft)|0,n=(n=n+Math.imul(j,dt)|0)+Math.imul(D,ft)|0,h=h+Math.imul(D,dt)|0;var Tt=(a+(r=r+Math.imul(T,mt)|0)|0)+((8191&(n=(n=n+Math.imul(T,pt)|0)+Math.imul(q,mt)|0))<<13)|0;a=((h=h+Math.imul(q,pt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),n=(n=Math.imul(L,dt))+Math.imul(U,ft)|0,h=Math.imul(U,dt);var qt=(a+(r=r+Math.imul(j,mt)|0)|0)+((8191&(n=(n=n+Math.imul(j,pt)|0)+Math.imul(D,mt)|0))<<13)|0;a=((h=h+Math.imul(D,pt)|0)+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863;var Nt=(a+(r=Math.imul(L,mt))|0)+((8191&(n=(n=Math.imul(L,pt))+Math.imul(U,mt)|0))<<13)|0;return a=((h=Math.imul(U,pt))+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=gt,u[1]=vt,u[2]=yt,u[3]=Mt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=St,u[9]=At,u[10]=Bt,u[11]=Et,u[12]=xt,u[13]=Rt,u[14]=It,u[15]=Ct,u[16]=Tt,u[17]=qt,u[18]=Nt,0!==a&&(u[19]=a,e.length++),e};function p(t,i,e){return(new g).mulp(t,i,e)}function g(t,i){this.x=t,this.y=i}Math.imul||(m=c),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,i):e<63?c(this,t,i):e<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),d=67108863&f;s=67108863&(d=d+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e.strip()}(this,t,i):p(this,t,i)},g.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},g.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},g.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},g.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,d=a,c=0;c<o;c++){var m=e[l+c],p=r[l+c],g=e[l+c+o],v=r[l+c+o],y=f*g-d*v;v=f*v+d*g,g=y,e[l+c]=m+g,r[l+c]=p+v,e[l+c+o]=m-g,r[l+c+o]=p-v,c!==s&&(y=u*f-a*d,d=u*d+a*f,f=y)}},g.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},g.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},g.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},g.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},g.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},g.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),d=e.words;d.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var c=0;c<r;c++){var m=s[c]*l[c]-u[c]*f[c];u[c]=s[c]*f[c]+u[c]*l[c],s[c]=m}return this.conjugate(s,u,r),this.transform(s,u,d,h,r,n),this.conjugate(d,h,r),this.normalize13b(d,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,h=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=h>>>26,this.words[e]=67108863&h}return 0!==i&&(this.words[e]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e||!(this.words[e]&n))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!=(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(d=Math.min(d/o|0,67108863),r._ishlnsubmul(n,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},h.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var d=0,c=1;0==(i.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(i.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,p=1;0==(e.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new k(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},y.prototype.split=function(t,i){t.iushrn(this.n,0,i)},y.prototype.imulK=function(t){return t.imul(this.k)},n(M,y),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,y),n(b,y),n(_,y),_.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new w;else if("p192"===t)i=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new _}return v[t]=i,i},k.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},k.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},k.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},k.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},k.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},k.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},k.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),d=this.pow(t,n.addn(1).iushrn(1)),c=this.pow(t,n),m=o;0!==c.cmp(s);){for(var p=c,g=0;0!==p.cmp(s);g++)p=p.redSqr();r(g<m);var v=this.pow(f,new h(1).iushln(m-g-1));d=d.redMul(v),f=v.redSqr(),c=c.redMul(f),m=g}return d},k.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},k.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4==++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},k.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},k.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,k),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},13048:(t,i,e)=>{var r=e(89509).Buffer,n=e(62318);t.exports=function(t,i,e,h){if(r.isBuffer(t)||(t=r.from(t,"binary")),i&&(r.isBuffer(i)||(i=r.from(i,"binary")),8!==i.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var o=e/8,s=r.alloc(o),u=r.alloc(h||0),a=r.alloc(0);o>0||h>0;){var l=new n;l.update(a),l.update(t),i&&l.update(i),a=l.digest();var f=0;if(o>0){var d=s.length-o;f=Math.min(o,a.length),a.copy(s,d,0,f),o-=f}if(f<a.length&&h>0){var c=u.length-h,m=Math.min(h,a.length-f);a.copy(u,c,f,f+m),h-=m}}return a.fill(0),{key:s,iv:u}}},63047:(t,i,e)=>{var r=e(96240),n=e(29931);function h(t){this.rand=t||new n.Rand}t.exports=h,h.create=function(t){return new h(t)},h.prototype._randbelow=function(t){var i=t.bitLength(),e=Math.ceil(i/8);do{var n=new r(this.rand.generate(e))}while(n.cmp(t)>=0);return n},h.prototype._randrange=function(t,i){var e=i.sub(t);return t.add(this._randbelow(e))},h.prototype.test=function(t,i,e){var n=t.bitLength(),h=r.mont(t),o=new r(1).toRed(h);i||(i=Math.max(1,n/48|0));for(var s=t.subn(1),u=0;!s.testn(u);u++);for(var a=t.shrn(u),l=s.toRed(h);i>0;i--){var f=this._randrange(new r(2),s);e&&e(f);var d=f.toRed(h).redPow(a);if(0!==d.cmp(o)&&0!==d.cmp(l)){for(var c=1;c<u;c++){if(0===(d=d.redSqr()).cmp(o))return!1;if(0===d.cmp(l))break}if(c===u)return!1}}return!0},h.prototype.getDivisor=function(t,i){var e=t.bitLength(),n=r.mont(t),h=new r(1).toRed(n);i||(i=Math.max(1,e/48|0));for(var o=t.subn(1),s=0;!o.testn(s);s++);for(var u=t.shrn(s),a=o.toRed(n);i>0;i--){var l=this._randrange(new r(2),o),f=t.gcd(l);if(0!==f.cmpn(1))return f;var d=l.toRed(n).redPow(u);if(0!==d.cmp(h)&&0!==d.cmp(a)){for(var c=1;c<s;c++){if(0===(d=d.redSqr()).cmp(h))return d.fromRed().subn(1).gcd(t);if(0===d.cmp(a))break}if(c===s)return(d=d.redSqr()).fromRed().subn(1).gcd(t)}}return!1}},96240:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(56619).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,r){for(var n=0,h=Math.min(t.length,e),o=i;o<h;o++){var s=t.charCodeAt(o)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this.strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,d=Math.min(a,i.length-1),c=Math.max(0,a-t.length+1);c<=d;c++){var m=a-c|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[c])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!=(h=s>>>24-n&16777215)||o!==this.length-1?l[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],c=d[t];e="";var m=this.clone();for(m.negative=0;!m.isZero();){var p=m.modn(c).toString(t);e=(m=m.idivn(c)).isZero()?p+e:l[a-p.length]+p+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return r(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-n;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,d=l>>>13,c=0|o[1],m=8191&c,p=c>>>13,g=0|o[2],v=8191&g,y=g>>>13,M=0|o[3],w=8191&M,b=M>>>13,_=0|o[4],k=8191&_,S=_>>>13,A=0|o[5],B=8191&A,E=A>>>13,x=0|o[6],R=8191&x,I=x>>>13,C=0|o[7],T=8191&C,q=C>>>13,N=0|o[8],j=8191&N,D=N>>>13,P=0|o[9],L=8191&P,U=P>>>13,O=0|s[0],Z=8191&O,K=O>>>13,z=0|s[1],H=8191&z,F=z>>>13,V=0|s[2],G=8191&V,X=V>>>13,J=0|s[3],W=8191&J,Y=J>>>13,$=0|s[4],Q=8191&$,tt=$>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,dt=lt>>>13,ct=0|s[9],mt=8191&ct,pt=ct>>>13;e.negative=t.negative^i.negative,e.length=19;var gt=(a+(r=Math.imul(f,Z))|0)+((8191&(n=(n=Math.imul(f,K))+Math.imul(d,Z)|0))<<13)|0;a=((h=Math.imul(d,K))+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(m,Z),n=(n=Math.imul(m,K))+Math.imul(p,Z)|0,h=Math.imul(p,K);var vt=(a+(r=r+Math.imul(f,H)|0)|0)+((8191&(n=(n=n+Math.imul(f,F)|0)+Math.imul(d,H)|0))<<13)|0;a=((h=h+Math.imul(d,F)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(v,Z),n=(n=Math.imul(v,K))+Math.imul(y,Z)|0,h=Math.imul(y,K),r=r+Math.imul(m,H)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(p,H)|0,h=h+Math.imul(p,F)|0;var yt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,X)|0)+Math.imul(d,G)|0))<<13)|0;a=((h=h+Math.imul(d,X)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(w,Z),n=(n=Math.imul(w,K))+Math.imul(b,Z)|0,h=Math.imul(b,K),r=r+Math.imul(v,H)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(y,H)|0,h=h+Math.imul(y,F)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,X)|0)+Math.imul(p,G)|0,h=h+Math.imul(p,X)|0;var Mt=(a+(r=r+Math.imul(f,W)|0)|0)+((8191&(n=(n=n+Math.imul(f,Y)|0)+Math.imul(d,W)|0))<<13)|0;a=((h=h+Math.imul(d,Y)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,Z),n=(n=Math.imul(k,K))+Math.imul(S,Z)|0,h=Math.imul(S,K),r=r+Math.imul(w,H)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(b,H)|0,h=h+Math.imul(b,F)|0,r=r+Math.imul(v,G)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(y,G)|0,h=h+Math.imul(y,X)|0,r=r+Math.imul(m,W)|0,n=(n=n+Math.imul(m,Y)|0)+Math.imul(p,W)|0,h=h+Math.imul(p,Y)|0;var wt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(d,Q)|0))<<13)|0;a=((h=h+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(B,Z),n=(n=Math.imul(B,K))+Math.imul(E,Z)|0,h=Math.imul(E,K),r=r+Math.imul(k,H)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(S,H)|0,h=h+Math.imul(S,F)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,X)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,X)|0,r=r+Math.imul(v,W)|0,n=(n=n+Math.imul(v,Y)|0)+Math.imul(y,W)|0,h=h+Math.imul(y,Y)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(p,Q)|0,h=h+Math.imul(p,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(d,et)|0))<<13)|0;a=((h=h+Math.imul(d,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(R,Z),n=(n=Math.imul(R,K))+Math.imul(I,Z)|0,h=Math.imul(I,K),r=r+Math.imul(B,H)|0,n=(n=n+Math.imul(B,F)|0)+Math.imul(E,H)|0,h=h+Math.imul(E,F)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(S,G)|0,h=h+Math.imul(S,X)|0,r=r+Math.imul(w,W)|0,n=(n=n+Math.imul(w,Y)|0)+Math.imul(b,W)|0,h=h+Math.imul(b,Y)|0,r=r+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,tt)|0)+Math.imul(y,Q)|0,h=h+Math.imul(y,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(p,et)|0,h=h+Math.imul(p,rt)|0;var _t=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(d,ht)|0))<<13)|0;a=((h=h+Math.imul(d,ot)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(T,Z),n=(n=Math.imul(T,K))+Math.imul(q,Z)|0,h=Math.imul(q,K),r=r+Math.imul(R,H)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(I,H)|0,h=h+Math.imul(I,F)|0,r=r+Math.imul(B,G)|0,n=(n=n+Math.imul(B,X)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,X)|0,r=r+Math.imul(k,W)|0,n=(n=n+Math.imul(k,Y)|0)+Math.imul(S,W)|0,h=h+Math.imul(S,Y)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Q)|0,h=h+Math.imul(b,tt)|0,r=r+Math.imul(v,et)|0,n=(n=n+Math.imul(v,rt)|0)+Math.imul(y,et)|0,h=h+Math.imul(y,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(p,ht)|0,h=h+Math.imul(p,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(d,ut)|0))<<13)|0;a=((h=h+Math.imul(d,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(j,Z),n=(n=Math.imul(j,K))+Math.imul(D,Z)|0,h=Math.imul(D,K),r=r+Math.imul(T,H)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(q,H)|0,h=h+Math.imul(q,F)|0,r=r+Math.imul(R,G)|0,n=(n=n+Math.imul(R,X)|0)+Math.imul(I,G)|0,h=h+Math.imul(I,X)|0,r=r+Math.imul(B,W)|0,n=(n=n+Math.imul(B,Y)|0)+Math.imul(E,W)|0,h=h+Math.imul(E,Y)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Q)|0,h=h+Math.imul(S,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,h=h+Math.imul(b,rt)|0,r=r+Math.imul(v,ht)|0,n=(n=n+Math.imul(v,ot)|0)+Math.imul(y,ht)|0,h=h+Math.imul(y,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(p,ut)|0,h=h+Math.imul(p,at)|0;var St=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(d,ft)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,Z),n=(n=Math.imul(L,K))+Math.imul(U,Z)|0,h=Math.imul(U,K),r=r+Math.imul(j,H)|0,n=(n=n+Math.imul(j,F)|0)+Math.imul(D,H)|0,h=h+Math.imul(D,F)|0,r=r+Math.imul(T,G)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(q,G)|0,h=h+Math.imul(q,X)|0,r=r+Math.imul(R,W)|0,n=(n=n+Math.imul(R,Y)|0)+Math.imul(I,W)|0,h=h+Math.imul(I,Y)|0,r=r+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(E,Q)|0,h=h+Math.imul(E,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,h=h+Math.imul(S,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,r=r+Math.imul(v,ut)|0,n=(n=n+Math.imul(v,at)|0)+Math.imul(y,ut)|0,h=h+Math.imul(y,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,dt)|0)+Math.imul(p,ft)|0,h=h+Math.imul(p,dt)|0;var At=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,pt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,pt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,H),n=(n=Math.imul(L,F))+Math.imul(U,H)|0,h=Math.imul(U,F),r=r+Math.imul(j,G)|0,n=(n=n+Math.imul(j,X)|0)+Math.imul(D,G)|0,h=h+Math.imul(D,X)|0,r=r+Math.imul(T,W)|0,n=(n=n+Math.imul(T,Y)|0)+Math.imul(q,W)|0,h=h+Math.imul(q,Y)|0,r=r+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,tt)|0)+Math.imul(I,Q)|0,h=h+Math.imul(I,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(E,et)|0,h=h+Math.imul(E,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(S,ht)|0,h=h+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,r=r+Math.imul(v,ft)|0,n=(n=n+Math.imul(v,dt)|0)+Math.imul(y,ft)|0,h=h+Math.imul(y,dt)|0;var Bt=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,pt)|0)+Math.imul(p,mt)|0))<<13)|0;a=((h=h+Math.imul(p,pt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(L,G),n=(n=Math.imul(L,X))+Math.imul(U,G)|0,h=Math.imul(U,X),r=r+Math.imul(j,W)|0,n=(n=n+Math.imul(j,Y)|0)+Math.imul(D,W)|0,h=h+Math.imul(D,Y)|0,r=r+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(q,Q)|0,h=h+Math.imul(q,tt)|0,r=r+Math.imul(R,et)|0,n=(n=n+Math.imul(R,rt)|0)+Math.imul(I,et)|0,h=h+Math.imul(I,rt)|0,r=r+Math.imul(B,ht)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,h=h+Math.imul(S,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(b,ft)|0,h=h+Math.imul(b,dt)|0;var Et=(a+(r=r+Math.imul(v,mt)|0)|0)+((8191&(n=(n=n+Math.imul(v,pt)|0)+Math.imul(y,mt)|0))<<13)|0;a=((h=h+Math.imul(y,pt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(L,W),n=(n=Math.imul(L,Y))+Math.imul(U,W)|0,h=Math.imul(U,Y),r=r+Math.imul(j,Q)|0,n=(n=n+Math.imul(j,tt)|0)+Math.imul(D,Q)|0,h=h+Math.imul(D,tt)|0,r=r+Math.imul(T,et)|0,n=(n=n+Math.imul(T,rt)|0)+Math.imul(q,et)|0,h=h+Math.imul(q,rt)|0,r=r+Math.imul(R,ht)|0,n=(n=n+Math.imul(R,ot)|0)+Math.imul(I,ht)|0,h=h+Math.imul(I,ot)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,dt)|0)+Math.imul(S,ft)|0,h=h+Math.imul(S,dt)|0;var xt=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,pt)|0)+Math.imul(b,mt)|0))<<13)|0;a=((h=h+Math.imul(b,pt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(L,Q),n=(n=Math.imul(L,tt))+Math.imul(U,Q)|0,h=Math.imul(U,tt),r=r+Math.imul(j,et)|0,n=(n=n+Math.imul(j,rt)|0)+Math.imul(D,et)|0,h=h+Math.imul(D,rt)|0,r=r+Math.imul(T,ht)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(q,ht)|0,h=h+Math.imul(q,ot)|0,r=r+Math.imul(R,ut)|0,n=(n=n+Math.imul(R,at)|0)+Math.imul(I,ut)|0,h=h+Math.imul(I,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(E,ft)|0,h=h+Math.imul(E,dt)|0;var Rt=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,pt)|0)+Math.imul(S,mt)|0))<<13)|0;a=((h=h+Math.imul(S,pt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(L,et),n=(n=Math.imul(L,rt))+Math.imul(U,et)|0,h=Math.imul(U,rt),r=r+Math.imul(j,ht)|0,n=(n=n+Math.imul(j,ot)|0)+Math.imul(D,ht)|0,h=h+Math.imul(D,ot)|0,r=r+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,at)|0)+Math.imul(q,ut)|0,h=h+Math.imul(q,at)|0,r=r+Math.imul(R,ft)|0,n=(n=n+Math.imul(R,dt)|0)+Math.imul(I,ft)|0,h=h+Math.imul(I,dt)|0;var It=(a+(r=r+Math.imul(B,mt)|0)|0)+((8191&(n=(n=n+Math.imul(B,pt)|0)+Math.imul(E,mt)|0))<<13)|0;a=((h=h+Math.imul(E,pt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,ht),n=(n=Math.imul(L,ot))+Math.imul(U,ht)|0,h=Math.imul(U,ot),r=r+Math.imul(j,ut)|0,n=(n=n+Math.imul(j,at)|0)+Math.imul(D,ut)|0,h=h+Math.imul(D,at)|0,r=r+Math.imul(T,ft)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(q,ft)|0,h=h+Math.imul(q,dt)|0;var Ct=(a+(r=r+Math.imul(R,mt)|0)|0)+((8191&(n=(n=n+Math.imul(R,pt)|0)+Math.imul(I,mt)|0))<<13)|0;a=((h=h+Math.imul(I,pt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,ut),n=(n=Math.imul(L,at))+Math.imul(U,ut)|0,h=Math.imul(U,at),r=r+Math.imul(j,ft)|0,n=(n=n+Math.imul(j,dt)|0)+Math.imul(D,ft)|0,h=h+Math.imul(D,dt)|0;var Tt=(a+(r=r+Math.imul(T,mt)|0)|0)+((8191&(n=(n=n+Math.imul(T,pt)|0)+Math.imul(q,mt)|0))<<13)|0;a=((h=h+Math.imul(q,pt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),n=(n=Math.imul(L,dt))+Math.imul(U,ft)|0,h=Math.imul(U,dt);var qt=(a+(r=r+Math.imul(j,mt)|0)|0)+((8191&(n=(n=n+Math.imul(j,pt)|0)+Math.imul(D,mt)|0))<<13)|0;a=((h=h+Math.imul(D,pt)|0)+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863;var Nt=(a+(r=Math.imul(L,mt))|0)+((8191&(n=(n=Math.imul(L,pt))+Math.imul(U,mt)|0))<<13)|0;return a=((h=Math.imul(U,pt))+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=gt,u[1]=vt,u[2]=yt,u[3]=Mt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=St,u[9]=At,u[10]=Bt,u[11]=Et,u[12]=xt,u[13]=Rt,u[14]=It,u[15]=Ct,u[16]=Tt,u[17]=qt,u[18]=Nt,0!==a&&(u[19]=a,e.length++),e};function p(t,i,e){return(new g).mulp(t,i,e)}function g(t,i){this.x=t,this.y=i}Math.imul||(m=c),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,i):e<63?c(this,t,i):e<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),d=67108863&f;s=67108863&(d=d+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e.strip()}(this,t,i):p(this,t,i)},g.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},g.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},g.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},g.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,d=a,c=0;c<o;c++){var m=e[l+c],p=r[l+c],g=e[l+c+o],v=r[l+c+o],y=f*g-d*v;v=f*v+d*g,g=y,e[l+c]=m+g,r[l+c]=p+v,e[l+c+o]=m-g,r[l+c+o]=p-v,c!==s&&(y=u*f-a*d,d=u*d+a*f,f=y)}},g.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},g.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},g.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},g.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},g.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},g.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),d=e.words;d.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var c=0;c<r;c++){var m=s[c]*l[c]-u[c]*f[c];u[c]=s[c]*f[c]+u[c]*l[c],s[c]=m}return this.conjugate(s,u,r),this.transform(s,u,d,h,r,n),this.conjugate(d,h,r),this.normalize13b(d,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,h=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=h>>>26,this.words[e]=67108863&h}return 0!==i&&(this.words[e]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e||!(this.words[e]&n))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!=(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(d=Math.min(d/o|0,67108863),r._ishlnsubmul(n,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},h.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var d=0,c=1;0==(i.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(i.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,p=1;0==(e.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new k(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},y.prototype.split=function(t,i){t.iushrn(this.n,0,i)},y.prototype.imulK=function(t){return t.imul(this.k)},n(M,y),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,y),n(b,y),n(_,y),_.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new w;else if("p192"===t)i=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new _}return v[t]=i,i},k.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},k.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},k.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},k.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},k.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},k.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},k.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),d=this.pow(t,n.addn(1).iushrn(1)),c=this.pow(t,n),m=o;0!==c.cmp(s);){for(var p=c,g=0;0!==p.cmp(s);g++)p=p.redSqr();r(g<m);var v=this.pow(f,new h(1).iushln(m-g-1));d=d.redMul(v),f=v.redSqr(),c=c.redMul(f),m=g}return d},k.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},k.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4==++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},k.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},k.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,k),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},873:t=>{"use strict";t.exports=JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}')},52818:(t,i,e)=>{"use strict";var r=e(39809);i.certificate=e(41934);var n=r.define("RSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())}));i.RSAPrivateKey=n;var h=r.define("RSAPublicKey",(function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())}));i.RSAPublicKey=h;var o=r.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(s),this.key("subjectPublicKey").bitstr())}));i.PublicKey=o;var s=r.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())})),u=r.define("PrivateKeyInfo",(function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(s),this.key("subjectPrivateKey").octstr())}));i.PrivateKey=u;var a=r.define("EncryptedPrivateKeyInfo",(function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())}));i.EncryptedPrivateKey=a;var l=r.define("DSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())}));i.DSAPrivateKey=l,i.DSAparam=r.define("DSAparam",(function(){this.int()}));var f=r.define("ECPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(d),this.key("publicKey").optional().explicit(1).bitstr())}));i.ECPrivateKey=f;var d=r.define("ECParameters",(function(){this.choice({namedCurve:this.objid()})}));i.signature=r.define("signature",(function(){this.seq().obj(this.key("r").int(),this.key("s").int())}))},41934:(t,i,e)=>{"use strict";var r=e(39809),n=r.define("Time",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})})),h=r.define("AttributeTypeValue",(function(){this.seq().obj(this.key("type").objid(),this.key("value").any())})),o=r.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional(),this.key("curve").objid().optional())})),s=r.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(o),this.key("subjectPublicKey").bitstr())})),u=r.define("RelativeDistinguishedName",(function(){this.setof(h)})),a=r.define("RDNSequence",(function(){this.seqof(u)})),l=r.define("Name",(function(){this.choice({rdnSequence:this.use(a)})})),f=r.define("Validity",(function(){this.seq().obj(this.key("notBefore").use(n),this.key("notAfter").use(n))})),d=r.define("Extension",(function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(!1),this.key("extnValue").octstr())})),c=r.define("TBSCertificate",(function(){this.seq().obj(this.key("version").explicit(0).int().optional(),this.key("serialNumber").int(),this.key("signature").use(o),this.key("issuer").use(l),this.key("validity").use(f),this.key("subject").use(l),this.key("subjectPublicKeyInfo").use(s),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(d).optional())})),m=r.define("X509Certificate",(function(){this.seq().obj(this.key("tbsCertificate").use(c),this.key("signatureAlgorithm").use(o),this.key("signatureValue").bitstr())}));t.exports=m},77631:(t,i,e)=>{var r=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m,n=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,h=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m,o=e(13048),s=e(44696),u=e(89509).Buffer;t.exports=function(t,i){var e,a=t.toString(),l=a.match(r);if(l){var f="aes"+l[1],d=u.from(l[2],"hex"),c=u.from(l[3].replace(/[\r\n]/g,""),"base64"),m=o(i,d.slice(0,8),parseInt(l[1],10)).key,p=[],g=s.createDecipheriv(f,m,d);p.push(g.update(c)),p.push(g.final()),e=u.concat(p)}else{var v=a.match(h);e=u.from(v[2].replace(/[\r\n]/g,""),"base64")}return{tag:a.match(n)[1],data:e}}},70980:(t,i,e)=>{var r=e(52818),n=e(873),h=e(77631),o=e(44696),s=e(25632),u=e(89509).Buffer;function a(t){var i;"object"!=typeof t||u.isBuffer(t)||(i=t.passphrase,t=t.key),"string"==typeof t&&(t=u.from(t));var e,a,l=h(t,i),f=l.tag,d=l.data;switch(f){case"CERTIFICATE":a=r.certificate.decode(d,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":switch(a||(a=r.PublicKey.decode(d,"der")),e=a.algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return r.RSAPublicKey.decode(a.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":return a.subjectPrivateKey=a.subjectPublicKey,{type:"ec",data:a};case"1.2.840.10040.4.1":return a.algorithm.params.pub_key=r.DSAparam.decode(a.subjectPublicKey.data,"der"),{type:"dsa",data:a.algorithm.params};default:throw new Error("unknown key id "+e)}case"ENCRYPTED PRIVATE KEY":d=function(t,i){var e=t.algorithm.decrypt.kde.kdeparams.salt,r=parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(),10),h=n[t.algorithm.decrypt.cipher.algo.join(".")],a=t.algorithm.decrypt.cipher.iv,l=t.subjectPrivateKey,f=parseInt(h.split("-")[1],10)/8,d=s.pbkdf2Sync(i,e,r,f,"sha1"),c=o.createDecipheriv(h,d,a),m=[];return m.push(c.update(l)),m.push(c.final()),u.concat(m)}(d=r.EncryptedPrivateKey.decode(d,"der"),i);case"PRIVATE KEY":switch(e=(a=r.PrivateKey.decode(d,"der")).algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return r.RSAPrivateKey.decode(a.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:a.algorithm.curve,privateKey:r.ECPrivateKey.decode(a.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":return a.algorithm.params.priv_key=r.DSAparam.decode(a.subjectPrivateKey,"der"),{type:"dsa",params:a.algorithm.params};default:throw new Error("unknown key id "+e)}case"RSA PUBLIC KEY":return r.RSAPublicKey.decode(d,"der");case"RSA PRIVATE KEY":return r.RSAPrivateKey.decode(d,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:r.DSAPrivateKey.decode(d,"der")};case"EC PRIVATE KEY":return{curve:(d=r.ECPrivateKey.decode(d,"der")).parameters.value,privateKey:d.privateKey};default:throw new Error("unknown key type "+f)}}t.exports=a,a.signature=r.signature},25632:(t,i,e)=>{i.pbkdf2=e(88638),i.pbkdf2Sync=e(91257)},88638:(t,i,e)=>{var r,n,h=e(89509).Buffer,o=e(77357),s=e(12368),u=e(91257),a=e(57777),l=e.g.crypto&&e.g.crypto.subtle,f={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},d=[];function c(){return n||(n=e.g.process&&e.g.process.nextTick?e.g.process.nextTick:e.g.queueMicrotask?e.g.queueMicrotask:e.g.setImmediate?e.g.setImmediate:e.g.setTimeout)}function m(t,i,e,r,n){return l.importKey("raw",t,{name:"PBKDF2"},!1,["deriveBits"]).then((function(t){return l.deriveBits({name:"PBKDF2",salt:i,iterations:e,hash:{name:n}},t,r<<3)})).then((function(t){return h.from(t)}))}t.exports=function(t,i,n,p,g,v){"function"==typeof g&&(v=g,g=void 0);var y=f[(g=g||"sha1").toLowerCase()];if(y&&"function"==typeof e.g.Promise){if(o(n,p),t=a(t,s,"Password"),i=a(i,s,"Salt"),"function"!=typeof v)throw new Error("No callback provided to pbkdf2");!function(t,i){t.then((function(t){c()((function(){i(null,t)}))}),(function(t){c()((function(){i(t)}))}))}(function(t){if(e.g.process&&!e.g.process.browser)return Promise.resolve(!1);if(!l||!l.importKey||!l.deriveBits)return Promise.resolve(!1);if(void 0!==d[t])return d[t];var i=m(r=r||h.alloc(8),r,10,128,t).then((function(){return!0})).catch((function(){return!1}));return d[t]=i,i}(y).then((function(e){return e?m(t,i,n,p,y):u(t,i,n,p,g)})),v)}else c()((function(){var e;try{e=u(t,i,n,p,g)}catch(t){return v(t)}v(null,e)}))}},12368:(t,i,e)=>{var r;r=e.g.process&&e.g.process.browser?"utf-8":e.g.process&&e.g.process.version?parseInt(process.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary":"utf-8",t.exports=r},77357:t=>{var i=Math.pow(2,30)-1;t.exports=function(t,e){if("number"!=typeof t)throw new TypeError("Iterations not a number");if(t<0)throw new TypeError("Bad iterations");if("number"!=typeof e)throw new TypeError("Key length not a number");if(e<0||e>i||e!=e)throw new TypeError("Bad key length")}},91257:(t,i,e)=>{var r=e(78028),n=e(79785),h=e(89072),o=e(89509).Buffer,s=e(77357),u=e(12368),a=e(57777),l=o.alloc(128),f={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function d(t,i,e){var s=function(t){return"rmd160"===t||"ripemd160"===t?function(t){return(new n).update(t).digest()}:"md5"===t?r:function(i){return h(t).update(i).digest()}}(t),u="sha512"===t||"sha384"===t?128:64;i.length>u?i=s(i):i.length<u&&(i=o.concat([i,l],u));for(var a=o.allocUnsafe(u+f[t]),d=o.allocUnsafe(u+f[t]),c=0;c<u;c++)a[c]=54^i[c],d[c]=92^i[c];var m=o.allocUnsafe(u+e+4);a.copy(m,0,0,u),this.ipad1=m,this.ipad2=a,this.opad=d,this.alg=t,this.blocksize=u,this.hash=s,this.size=f[t]}d.prototype.run=function(t,i){return t.copy(i,this.blocksize),this.hash(i).copy(this.opad,this.blocksize),this.hash(this.opad)},t.exports=function(t,i,e,r,n){s(e,r);var h=new d(n=n||"sha1",t=a(t,u,"Password"),(i=a(i,u,"Salt")).length),l=o.allocUnsafe(r),c=o.allocUnsafe(i.length+4);i.copy(c,0,0,i.length);for(var m=0,p=f[n],g=Math.ceil(r/p),v=1;v<=g;v++){c.writeUInt32BE(v,i.length);for(var y=h.run(c,h.ipad1),M=y,w=1;w<e;w++){M=h.run(M,h.ipad2);for(var b=0;b<p;b++)y[b]^=M[b]}y.copy(l,m),m+=p}return l}},57777:(t,i,e)=>{var r=e(89509).Buffer;t.exports=function(t,i,e){if(r.isBuffer(t))return t;if("string"==typeof t)return r.from(t,i);if(ArrayBuffer.isView(t))return r.from(t.buffer);throw new TypeError(e+" must be a string, a Buffer, a typed array or a DataView")}},7900:(t,i,e)=>{i.publicEncrypt=e(16559),i.privateDecrypt=e(26138),i.privateEncrypt=function(t,e){return i.publicEncrypt(t,e,!0)},i.publicDecrypt=function(t,e){return i.privateDecrypt(t,e,!0)}},99199:(t,i,e)=>{var r=e(23482),n=e(89509).Buffer;function h(t){var i=n.allocUnsafe(4);return i.writeUInt32BE(t,0),i}t.exports=function(t,i){for(var e,o=n.alloc(0),s=0;o.length<i;)e=h(s++),o=n.concat([o,r("sha1").update(t).update(e).digest()]);return o.slice(0,i)}},92144:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(77108).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,r){for(var n=0,h=Math.min(t.length,e),o=i;o<h;o++){var s=t.charCodeAt(o)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this.strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var l=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,d=Math.min(a,i.length-1),c=Math.max(0,a-t.length+1);c<=d;c++){var m=a-c|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[c])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!=(h=s>>>24-n&16777215)||o!==this.length-1?l[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],c=d[t];e="";var m=this.clone();for(m.negative=0;!m.isZero();){var p=m.modn(c).toString(t);e=(m=m.idivn(c)).isZero()?p+e:l[a-p.length]+p+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return r(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-n;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,d=l>>>13,c=0|o[1],m=8191&c,p=c>>>13,g=0|o[2],v=8191&g,y=g>>>13,M=0|o[3],w=8191&M,b=M>>>13,_=0|o[4],k=8191&_,S=_>>>13,A=0|o[5],B=8191&A,E=A>>>13,x=0|o[6],R=8191&x,I=x>>>13,C=0|o[7],T=8191&C,q=C>>>13,N=0|o[8],j=8191&N,D=N>>>13,P=0|o[9],L=8191&P,U=P>>>13,O=0|s[0],Z=8191&O,K=O>>>13,z=0|s[1],H=8191&z,F=z>>>13,V=0|s[2],G=8191&V,X=V>>>13,J=0|s[3],W=8191&J,Y=J>>>13,$=0|s[4],Q=8191&$,tt=$>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,dt=lt>>>13,ct=0|s[9],mt=8191&ct,pt=ct>>>13;e.negative=t.negative^i.negative,e.length=19;var gt=(a+(r=Math.imul(f,Z))|0)+((8191&(n=(n=Math.imul(f,K))+Math.imul(d,Z)|0))<<13)|0;a=((h=Math.imul(d,K))+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(m,Z),n=(n=Math.imul(m,K))+Math.imul(p,Z)|0,h=Math.imul(p,K);var vt=(a+(r=r+Math.imul(f,H)|0)|0)+((8191&(n=(n=n+Math.imul(f,F)|0)+Math.imul(d,H)|0))<<13)|0;a=((h=h+Math.imul(d,F)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(v,Z),n=(n=Math.imul(v,K))+Math.imul(y,Z)|0,h=Math.imul(y,K),r=r+Math.imul(m,H)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(p,H)|0,h=h+Math.imul(p,F)|0;var yt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,X)|0)+Math.imul(d,G)|0))<<13)|0;a=((h=h+Math.imul(d,X)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(w,Z),n=(n=Math.imul(w,K))+Math.imul(b,Z)|0,h=Math.imul(b,K),r=r+Math.imul(v,H)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(y,H)|0,h=h+Math.imul(y,F)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,X)|0)+Math.imul(p,G)|0,h=h+Math.imul(p,X)|0;var Mt=(a+(r=r+Math.imul(f,W)|0)|0)+((8191&(n=(n=n+Math.imul(f,Y)|0)+Math.imul(d,W)|0))<<13)|0;a=((h=h+Math.imul(d,Y)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,Z),n=(n=Math.imul(k,K))+Math.imul(S,Z)|0,h=Math.imul(S,K),r=r+Math.imul(w,H)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(b,H)|0,h=h+Math.imul(b,F)|0,r=r+Math.imul(v,G)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(y,G)|0,h=h+Math.imul(y,X)|0,r=r+Math.imul(m,W)|0,n=(n=n+Math.imul(m,Y)|0)+Math.imul(p,W)|0,h=h+Math.imul(p,Y)|0;var wt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(d,Q)|0))<<13)|0;a=((h=h+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(B,Z),n=(n=Math.imul(B,K))+Math.imul(E,Z)|0,h=Math.imul(E,K),r=r+Math.imul(k,H)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(S,H)|0,h=h+Math.imul(S,F)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,X)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,X)|0,r=r+Math.imul(v,W)|0,n=(n=n+Math.imul(v,Y)|0)+Math.imul(y,W)|0,h=h+Math.imul(y,Y)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(p,Q)|0,h=h+Math.imul(p,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(d,et)|0))<<13)|0;a=((h=h+Math.imul(d,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(R,Z),n=(n=Math.imul(R,K))+Math.imul(I,Z)|0,h=Math.imul(I,K),r=r+Math.imul(B,H)|0,n=(n=n+Math.imul(B,F)|0)+Math.imul(E,H)|0,h=h+Math.imul(E,F)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(S,G)|0,h=h+Math.imul(S,X)|0,r=r+Math.imul(w,W)|0,n=(n=n+Math.imul(w,Y)|0)+Math.imul(b,W)|0,h=h+Math.imul(b,Y)|0,r=r+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,tt)|0)+Math.imul(y,Q)|0,h=h+Math.imul(y,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(p,et)|0,h=h+Math.imul(p,rt)|0;var _t=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(d,ht)|0))<<13)|0;a=((h=h+Math.imul(d,ot)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(T,Z),n=(n=Math.imul(T,K))+Math.imul(q,Z)|0,h=Math.imul(q,K),r=r+Math.imul(R,H)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(I,H)|0,h=h+Math.imul(I,F)|0,r=r+Math.imul(B,G)|0,n=(n=n+Math.imul(B,X)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,X)|0,r=r+Math.imul(k,W)|0,n=(n=n+Math.imul(k,Y)|0)+Math.imul(S,W)|0,h=h+Math.imul(S,Y)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Q)|0,h=h+Math.imul(b,tt)|0,r=r+Math.imul(v,et)|0,n=(n=n+Math.imul(v,rt)|0)+Math.imul(y,et)|0,h=h+Math.imul(y,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(p,ht)|0,h=h+Math.imul(p,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(d,ut)|0))<<13)|0;a=((h=h+Math.imul(d,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(j,Z),n=(n=Math.imul(j,K))+Math.imul(D,Z)|0,h=Math.imul(D,K),r=r+Math.imul(T,H)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(q,H)|0,h=h+Math.imul(q,F)|0,r=r+Math.imul(R,G)|0,n=(n=n+Math.imul(R,X)|0)+Math.imul(I,G)|0,h=h+Math.imul(I,X)|0,r=r+Math.imul(B,W)|0,n=(n=n+Math.imul(B,Y)|0)+Math.imul(E,W)|0,h=h+Math.imul(E,Y)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Q)|0,h=h+Math.imul(S,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,h=h+Math.imul(b,rt)|0,r=r+Math.imul(v,ht)|0,n=(n=n+Math.imul(v,ot)|0)+Math.imul(y,ht)|0,h=h+Math.imul(y,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(p,ut)|0,h=h+Math.imul(p,at)|0;var St=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(d,ft)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,Z),n=(n=Math.imul(L,K))+Math.imul(U,Z)|0,h=Math.imul(U,K),r=r+Math.imul(j,H)|0,n=(n=n+Math.imul(j,F)|0)+Math.imul(D,H)|0,h=h+Math.imul(D,F)|0,r=r+Math.imul(T,G)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(q,G)|0,h=h+Math.imul(q,X)|0,r=r+Math.imul(R,W)|0,n=(n=n+Math.imul(R,Y)|0)+Math.imul(I,W)|0,h=h+Math.imul(I,Y)|0,r=r+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(E,Q)|0,h=h+Math.imul(E,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,h=h+Math.imul(S,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,r=r+Math.imul(v,ut)|0,n=(n=n+Math.imul(v,at)|0)+Math.imul(y,ut)|0,h=h+Math.imul(y,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,dt)|0)+Math.imul(p,ft)|0,h=h+Math.imul(p,dt)|0;var At=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,pt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,pt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,H),n=(n=Math.imul(L,F))+Math.imul(U,H)|0,h=Math.imul(U,F),r=r+Math.imul(j,G)|0,n=(n=n+Math.imul(j,X)|0)+Math.imul(D,G)|0,h=h+Math.imul(D,X)|0,r=r+Math.imul(T,W)|0,n=(n=n+Math.imul(T,Y)|0)+Math.imul(q,W)|0,h=h+Math.imul(q,Y)|0,r=r+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,tt)|0)+Math.imul(I,Q)|0,h=h+Math.imul(I,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(E,et)|0,h=h+Math.imul(E,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(S,ht)|0,h=h+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,r=r+Math.imul(v,ft)|0,n=(n=n+Math.imul(v,dt)|0)+Math.imul(y,ft)|0,h=h+Math.imul(y,dt)|0;var Bt=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,pt)|0)+Math.imul(p,mt)|0))<<13)|0;a=((h=h+Math.imul(p,pt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(L,G),n=(n=Math.imul(L,X))+Math.imul(U,G)|0,h=Math.imul(U,X),r=r+Math.imul(j,W)|0,n=(n=n+Math.imul(j,Y)|0)+Math.imul(D,W)|0,h=h+Math.imul(D,Y)|0,r=r+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(q,Q)|0,h=h+Math.imul(q,tt)|0,r=r+Math.imul(R,et)|0,n=(n=n+Math.imul(R,rt)|0)+Math.imul(I,et)|0,h=h+Math.imul(I,rt)|0,r=r+Math.imul(B,ht)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,h=h+Math.imul(S,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(b,ft)|0,h=h+Math.imul(b,dt)|0;var Et=(a+(r=r+Math.imul(v,mt)|0)|0)+((8191&(n=(n=n+Math.imul(v,pt)|0)+Math.imul(y,mt)|0))<<13)|0;a=((h=h+Math.imul(y,pt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(L,W),n=(n=Math.imul(L,Y))+Math.imul(U,W)|0,h=Math.imul(U,Y),r=r+Math.imul(j,Q)|0,n=(n=n+Math.imul(j,tt)|0)+Math.imul(D,Q)|0,h=h+Math.imul(D,tt)|0,r=r+Math.imul(T,et)|0,n=(n=n+Math.imul(T,rt)|0)+Math.imul(q,et)|0,h=h+Math.imul(q,rt)|0,r=r+Math.imul(R,ht)|0,n=(n=n+Math.imul(R,ot)|0)+Math.imul(I,ht)|0,h=h+Math.imul(I,ot)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,dt)|0)+Math.imul(S,ft)|0,h=h+Math.imul(S,dt)|0;var xt=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,pt)|0)+Math.imul(b,mt)|0))<<13)|0;a=((h=h+Math.imul(b,pt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(L,Q),n=(n=Math.imul(L,tt))+Math.imul(U,Q)|0,h=Math.imul(U,tt),r=r+Math.imul(j,et)|0,n=(n=n+Math.imul(j,rt)|0)+Math.imul(D,et)|0,h=h+Math.imul(D,rt)|0,r=r+Math.imul(T,ht)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(q,ht)|0,h=h+Math.imul(q,ot)|0,r=r+Math.imul(R,ut)|0,n=(n=n+Math.imul(R,at)|0)+Math.imul(I,ut)|0,h=h+Math.imul(I,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(E,ft)|0,h=h+Math.imul(E,dt)|0;var Rt=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,pt)|0)+Math.imul(S,mt)|0))<<13)|0;a=((h=h+Math.imul(S,pt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(L,et),n=(n=Math.imul(L,rt))+Math.imul(U,et)|0,h=Math.imul(U,rt),r=r+Math.imul(j,ht)|0,n=(n=n+Math.imul(j,ot)|0)+Math.imul(D,ht)|0,h=h+Math.imul(D,ot)|0,r=r+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,at)|0)+Math.imul(q,ut)|0,h=h+Math.imul(q,at)|0,r=r+Math.imul(R,ft)|0,n=(n=n+Math.imul(R,dt)|0)+Math.imul(I,ft)|0,h=h+Math.imul(I,dt)|0;var It=(a+(r=r+Math.imul(B,mt)|0)|0)+((8191&(n=(n=n+Math.imul(B,pt)|0)+Math.imul(E,mt)|0))<<13)|0;a=((h=h+Math.imul(E,pt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,ht),n=(n=Math.imul(L,ot))+Math.imul(U,ht)|0,h=Math.imul(U,ot),r=r+Math.imul(j,ut)|0,n=(n=n+Math.imul(j,at)|0)+Math.imul(D,ut)|0,h=h+Math.imul(D,at)|0,r=r+Math.imul(T,ft)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(q,ft)|0,h=h+Math.imul(q,dt)|0;var Ct=(a+(r=r+Math.imul(R,mt)|0)|0)+((8191&(n=(n=n+Math.imul(R,pt)|0)+Math.imul(I,mt)|0))<<13)|0;a=((h=h+Math.imul(I,pt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,ut),n=(n=Math.imul(L,at))+Math.imul(U,ut)|0,h=Math.imul(U,at),r=r+Math.imul(j,ft)|0,n=(n=n+Math.imul(j,dt)|0)+Math.imul(D,ft)|0,h=h+Math.imul(D,dt)|0;var Tt=(a+(r=r+Math.imul(T,mt)|0)|0)+((8191&(n=(n=n+Math.imul(T,pt)|0)+Math.imul(q,mt)|0))<<13)|0;a=((h=h+Math.imul(q,pt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),n=(n=Math.imul(L,dt))+Math.imul(U,ft)|0,h=Math.imul(U,dt);var qt=(a+(r=r+Math.imul(j,mt)|0)|0)+((8191&(n=(n=n+Math.imul(j,pt)|0)+Math.imul(D,mt)|0))<<13)|0;a=((h=h+Math.imul(D,pt)|0)+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863;var Nt=(a+(r=Math.imul(L,mt))|0)+((8191&(n=(n=Math.imul(L,pt))+Math.imul(U,mt)|0))<<13)|0;return a=((h=Math.imul(U,pt))+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=gt,u[1]=vt,u[2]=yt,u[3]=Mt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=St,u[9]=At,u[10]=Bt,u[11]=Et,u[12]=xt,u[13]=Rt,u[14]=It,u[15]=Ct,u[16]=Tt,u[17]=qt,u[18]=Nt,0!==a&&(u[19]=a,e.length++),e};function p(t,i,e){return(new g).mulp(t,i,e)}function g(t,i){this.x=t,this.y=i}Math.imul||(m=c),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,i):e<63?c(this,t,i):e<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),d=67108863&f;s=67108863&(d=d+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e.strip()}(this,t,i):p(this,t,i)},g.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},g.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},g.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},g.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,d=a,c=0;c<o;c++){var m=e[l+c],p=r[l+c],g=e[l+c+o],v=r[l+c+o],y=f*g-d*v;v=f*v+d*g,g=y,e[l+c]=m+g,r[l+c]=p+v,e[l+c+o]=m-g,r[l+c+o]=p-v,c!==s&&(y=u*f-a*d,d=u*d+a*f,f=y)}},g.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},g.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},g.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},g.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},g.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},g.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),d=e.words;d.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var c=0;c<r;c++){var m=s[c]*l[c]-u[c]*f[c];u[c]=s[c]*f[c]+u[c]*l[c],s[c]=m}return this.conjugate(s,u,r),this.transform(s,u,d,h,r,n),this.conjugate(d,h,r),this.normalize13b(d,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,h=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=h>>>26,this.words[e]=67108863&h}return 0!==i&&(this.words[e]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e||!(this.words[e]&n))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!=(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(d=Math.min(d/o|0,67108863),r._ishlnsubmul(n,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},h.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var d=0,c=1;0==(i.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(i.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,p=1;0==(e.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new k(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},y.prototype.split=function(t,i){t.iushrn(this.n,0,i)},y.prototype.imulK=function(t){return t.imul(this.k)},n(M,y),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,y),n(b,y),n(_,y),_.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new w;else if("p192"===t)i=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new _}return v[t]=i,i},k.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},k.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},k.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},k.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},k.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},k.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},k.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),d=this.pow(t,n.addn(1).iushrn(1)),c=this.pow(t,n),m=o;0!==c.cmp(s);){for(var p=c,g=0;0!==p.cmp(s);g++)p=p.redSqr();r(g<m);var v=this.pow(f,new h(1).iushln(m-g-1));d=d.redMul(v),f=v.redSqr(),c=c.redMul(f),m=g}return d},k.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},k.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4==++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},k.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},k.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,k),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},26138:(t,i,e)=>{var r=e(70980),n=e(99199),h=e(57859),o=e(92144),s=e(23663),u=e(23482),a=e(84818),l=e(89509).Buffer;t.exports=function(t,i,e){var f;f=t.padding?t.padding:e?1:4;var d,c=r(t),m=c.modulus.byteLength();if(i.length>m||new o(i).cmp(c.modulus)>=0)throw new Error("decryption error");d=e?a(new o(i),c):s(i,c);var p=l.alloc(m-d.length);if(d=l.concat([p,d],m),4===f)return function(t,i){var e=t.modulus.byteLength(),r=u("sha1").update(l.alloc(0)).digest(),o=r.length;if(0!==i[0])throw new Error("decryption error");var s=i.slice(1,o+1),a=i.slice(o+1),f=h(s,n(a,o)),d=h(a,n(f,e-o-1));if(function(t,i){t=l.from(t),i=l.from(i);var e=0,r=t.length;t.length!==i.length&&(e++,r=Math.min(t.length,i.length));for(var n=-1;++n<r;)e+=t[n]^i[n];return e}(r,d.slice(0,o)))throw new Error("decryption error");for(var c=o;0===d[c];)c++;if(1!==d[c++])throw new Error("decryption error");return d.slice(c)}(c,d);if(1===f)return function(t,i,e){for(var r=i.slice(0,2),n=2,h=0;0!==i[n++];)if(n>=i.length){h++;break}var o=i.slice(2,n-1);if(("0002"!==r.toString("hex")&&!e||"0001"!==r.toString("hex")&&e)&&h++,o.length<8&&h++,h)throw new Error("decryption error");return i.slice(n)}(0,d,e);if(3===f)return d;throw new Error("unknown padding")}},16559:(t,i,e)=>{var r=e(70980),n=e(61798),h=e(23482),o=e(99199),s=e(57859),u=e(92144),a=e(84818),l=e(23663),f=e(89509).Buffer;t.exports=function(t,i,e){var d;d=t.padding?t.padding:e?1:4;var c,m=r(t);if(4===d)c=function(t,i){var e=t.modulus.byteLength(),r=i.length,a=h("sha1").update(f.alloc(0)).digest(),l=a.length,d=2*l;if(r>e-d-2)throw new Error("message too long");var c=f.alloc(e-r-d-2),m=e-l-1,p=n(l),g=s(f.concat([a,c,f.alloc(1,1),i],m),o(p,m)),v=s(p,o(g,l));return new u(f.concat([f.alloc(1),v,g],e))}(m,i);else if(1===d)c=function(t,i,e){var r,h=i.length,o=t.modulus.byteLength();if(h>o-11)throw new Error("message too long");return r=e?f.alloc(o-h-3,255):function(t){for(var i,e=f.allocUnsafe(t),r=0,h=n(2*t),o=0;r<t;)o===h.length&&(h=n(2*t),o=0),(i=h[o++])&&(e[r++]=i);return e}(o-h-3),new u(f.concat([f.from([0,e?1:2]),r,f.alloc(1),i],o))}(m,i,e);else{if(3!==d)throw new Error("unknown padding");if((c=new u(i)).cmp(m.modulus)>=0)throw new Error("data too long for modulus")}return e?l(c,m):a(c,m)}},84818:(t,i,e)=>{var r=e(92144),n=e(89509).Buffer;t.exports=function(t,i){return n.from(t.toRed(r.mont(i.modulus)).redPow(new r(i.publicExponent)).fromRed().toArray())}},57859:t=>{t.exports=function(t,i){for(var e=t.length,r=-1;++r<e;)t[r]^=i[r];return t}},77963:(t,i,e)=>{"use strict";function r(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var n=e(89509),h=e(61798),o=n.Buffer,s=n.kMaxLength,u=e.g.crypto||e.g.msCrypto,a=Math.pow(2,32)-1;function l(t,i){if("number"!=typeof t||t!=t)throw new TypeError("offset must be a number");if(t>a||t<0)throw new TypeError("offset must be a uint32");if(t>s||t>i)throw new RangeError("offset out of range")}function f(t,i,e){if("number"!=typeof t||t!=t)throw new TypeError("size must be a number");if(t>a||t<0)throw new TypeError("size must be a uint32");if(t+i>e||t>s)throw new RangeError("buffer too small")}function d(t,i,e,r){if(process.browser){var n=t.buffer,o=new Uint8Array(n,i,e);return u.getRandomValues(o),r?void process.nextTick((function(){r(null,t)})):t}if(!r)return h(e).copy(t,i),t;h(e,(function(e,n){if(e)return r(e);n.copy(t,i),r(null,t)}))}u&&u.getRandomValues||!process.browser?(i.randomFill=function(t,i,r,n){if(!(o.isBuffer(t)||t instanceof e.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof i)n=i,i=0,r=t.length;else if("function"==typeof r)n=r,r=t.length-i;else if("function"!=typeof n)throw new TypeError('"cb" argument must be a function');return l(i,t.length),f(r,i,t.length),d(t,i,r,n)},i.randomFillSync=function(t,i,r){if(void 0===i&&(i=0),!(o.isBuffer(t)||t instanceof e.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');return l(i,t.length),void 0===r&&(r=t.length-i),f(r,i,t.length),d(t,i,r)}):(i.randomFill=r,i.randomFillSync=r)},2399:(t,i,e)=>{"use strict";var r,n=e(48764),h=n.Buffer,o={};for(r in n)n.hasOwnProperty(r)&&"SlowBuffer"!==r&&"Buffer"!==r&&(o[r]=n[r]);var s=o.Buffer={};for(r in h)h.hasOwnProperty(r)&&"allocUnsafe"!==r&&"allocUnsafeSlow"!==r&&(s[r]=h[r]);if(o.Buffer.prototype=h.prototype,s.from&&s.from!==Uint8Array.from||(s.from=function(t,i,e){if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof t);if(t&&void 0===t.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);return h(t,i,e)}),s.alloc||(s.alloc=function(t,i,e){if("number"!=typeof t)throw new TypeError('The "size" argument must be of type number. Received type '+typeof t);if(t<0||t>=2*(1<<30))throw new RangeError('The value "'+t+'" is invalid for option "size"');var r=h(t);return i&&0!==i.length?"string"==typeof e?r.fill(i,e):r.fill(i):r.fill(0),r}),!o.kStringMaxLength)try{o.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch(t){}o.constants||(o.constants={MAX_LENGTH:o.kMaxLength},o.kStringMaxLength&&(o.constants.MAX_STRING_LENGTH=o.kStringMaxLength)),t.exports=o}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,