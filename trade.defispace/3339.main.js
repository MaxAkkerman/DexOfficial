(self.webpackChunkmy_swap=self.webpackChunkmy_swap||[]).push([[3339],{73339:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i}),t(35666);var r=t(14113);function a(e,n,t,r,a,o,i){try{var u=e[o](i),s=u.value}catch(e){return void t(e)}u.done?n(s):Promise.resolve(s).then(r,a)}function o(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var i=e.apply(n,t);function u(e){a(i,r,o,u,s,"next",e)}function s(e){a(i,r,o,u,s,"throw",e)}u(void 0)}))}}t(44431),t(5942),t(51206);const i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.heading,t=e.description,a=e.icon,i=e.html,u=e.button;return function(){var e=o(regeneratorRuntime.mark((function e(o){var s,c,d,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s=o.wallet,c=o.address,d=o.stateSyncStatus,l=o.stateStore,null!==c){e.next=5;break}if(!d.address){e.next=5;break}return e.next=5,new Promise((function(e){d.address&&d.address.then(e),setTimeout((function(){null===c&&e(void 0)}),500)}));case 5:if(l.address.get()||!s||!s.name){e.next=7;break}return e.abrupt("return",{heading:n||"Login and Authorize Your Wallet",description:t||"This dapp requires access to your wallet, please login and authorize access to your ".concat(s.name," accounts to continue."),eventCode:"loginFail",action:s.connect,icon:a||r.e,html:i,button:u});case 7:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1zd2FwLy4vbm9kZV9tb2R1bGVzL2JuYy1vbmJvYXJkL2Rpc3QvZXNtL2Nvbm5lY3QtOTZmMTE1OTMuanMiXSwibmFtZXMiOlsiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVzb2x2ZSIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiYXJnIiwiaW5mbyIsInZhbHVlIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsInRoaXMiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJvcHRpb25zIiwibGVuZ3RoIiwiaGVhZGluZyIsImRlc2NyaXB0aW9uIiwiaWNvbiIsImh0bWwiLCJidXR0b24iLCJfcmVmIiwicmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJzdGF0ZUFuZEhlbHBlcnMiLCJ3YWxsZXQiLCJhZGRyZXNzIiwic3RhdGVTeW5jU3RhdHVzIiwic3RhdGVTdG9yZSIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJuZXh0Iiwic2V0VGltZW91dCIsImdldCIsIm5hbWUiLCJhYnJ1cHQiLCJjb25jYXQiLCJldmVudENvZGUiLCJhY3Rpb24iLCJjb25uZWN0Iiwic3RvcCIsIl94Il0sIm1hcHBpbmdzIjoieUpBQUEsU0FBU0EsRUFBbUJDLEVBQUtDLEVBQVNDLEVBQVFDLEVBQU9DLEVBQVFDLEVBQUtDLEdBQU8sSUFBTSxJQUFJQyxFQUFPUCxFQUFJSyxHQUFLQyxHQUFVRSxFQUFRRCxFQUFLQyxNQUFTLE1BQU9DLEdBQXdCLFlBQWZQLEVBQU9PLEdBQXNCRixFQUFLRyxLQUFRVCxFQUFRTyxHQUFpQkcsUUFBUVYsUUFBUU8sR0FBT0ksS0FBS1QsRUFBT0MsR0FFN1AsU0FBU1MsRUFBa0JDLEdBQU0sT0FBTyxXQUFjLElBQUlDLEVBQU9DLEtBQU1DLEVBQU9DLFVBQVcsT0FBTyxJQUFJUCxTQUFRLFNBQVVWLEVBQVNDLEdBQVUsSUFBSUYsRUFBTWMsRUFBR0ssTUFBTUosRUFBTUUsR0FBTyxTQUFTZCxFQUFNSyxHQUFTVCxFQUFtQkMsRUFBS0MsRUFBU0MsRUFBUUMsRUFBT0MsRUFBUSxPQUFRSSxHQUFVLFNBQVNKLEVBQU9nQixHQUFPckIsRUFBbUJDLEVBQUtDLEVBQVNDLEVBQVFDLEVBQU9DLEVBQVEsUUFBU2dCLEdBQVFqQixPQUFNa0IsTywwQkEyRWpYLFFBbkVBLFdBQ0UsSUFBSUMsRUFBVUosVUFBVUssT0FBUyxRQUFzQkYsSUFBakJILFVBQVUsR0FBbUJBLFVBQVUsR0FBSyxHQUM5RU0sRUFBVUYsRUFBUUUsUUFDbEJDLEVBQWNILEVBQVFHLFlBQ3RCQyxFQUFPSixFQUFRSSxLQUNmQyxFQUFPTCxFQUFRSyxLQUNmQyxFQUFTTixFQUFRTSxPQUNyQixPQUFvQixXQUNsQixJQUFJQyxFQUFPaEIsRUFBZ0NpQixtQkFBbUJDLE1BQUssU0FBU0MsRUFBUUMsR0FDbEYsSUFBSUMsRUFBUUMsRUFBU0MsRUFBaUJDLEVBQ3RDLE9BQU9QLG1CQUFtQlEsTUFBSyxTQUFrQkMsR0FDL0MsT0FDRSxPQUFRQSxFQUFTQyxLQUFPRCxFQUFTRSxNQUMvQixLQUFLLEVBR0gsR0FGQVAsRUFBU0QsRUFBZ0JDLE9BQVFDLEVBQVVGLEVBQWdCRSxRQUFTQyxFQUFrQkgsRUFBZ0JHLGdCQUFpQkMsRUFBYUosRUFBZ0JJLFdBRWxJLE9BQVpGLEVBQW1CLENBQ3ZCSSxFQUFTRSxLQUFPLEVBQ2hCLE1BR0YsSUFBS0wsRUFBZ0JELFFBQVMsQ0FDNUJJLEVBQVNFLEtBQU8sRUFDaEIsTUFJRixPQURBRixFQUFTRSxLQUFPLEVBQ1QsSUFBSTlCLFNBQVEsU0FBVVYsR0FDM0JtQyxFQUFnQkQsU0FBV0MsRUFBZ0JELFFBQVF2QixLQUFLWCxHQUN4RHlDLFlBQVcsV0FDTyxPQUFaUCxHQUVGbEMsT0FBUW9CLEtBRVQsUUFHUCxLQUFLLEVBQ0gsR0FBT2dCLEVBQVdGLFFBQVFRLFFBQVNULElBQVVBLEVBQU9VLEtBQU8sQ0FDekRMLEVBQVNFLEtBQU8sRUFDaEIsTUFHRixPQUFPRixFQUFTTSxPQUFPLFNBQVUsQ0FDL0JyQixRQUFTQSxHQUFXLGtDQUNwQkMsWUFBYUEsR0FBZSx1RkFBdUZxQixPQUFPWixFQUFPVSxLQUFNLDBCQUN2SUcsVUFBVyxZQUNYQyxPQUFRZCxFQUFPZSxRQUNmdkIsS0FBTUEsR0FBUSxJQUNkQyxLQUFNQSxFQUNOQyxPQUFRQSxJQUdaLEtBQUssRUFDTCxJQUFLLE1BQ0gsT0FBT1csRUFBU1csVUFHckJsQixPQUdMLE9BQU8sU0FBVW1CLEdBQ2YsT0FBT3RCLEVBQUtWLE1BQU1ILEtBQU1FLFlBdkRSIiwiZmlsZSI6IjMzMzkubWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsgdHJ5IHsgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOyB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOyB9IGNhdGNoIChlcnJvcikgeyByZWplY3QoZXJyb3IpOyByZXR1cm47IH0gaWYgKGluZm8uZG9uZSkgeyByZXNvbHZlKHZhbHVlKTsgfSBlbHNlIHsgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOyB9IH1cblxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTsgfSBmdW5jdGlvbiBfdGhyb3coZXJyKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpOyB9IF9uZXh0KHVuZGVmaW5lZCk7IH0pOyB9OyB9XG5cbmltcG9ydCAncmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lJztcbmltcG9ydCB7IGUgYXMgY29ubmVjdEljb24gfSBmcm9tICcuL29uYm9hcmQtYTM5NzdiODguanMnO1xuaW1wb3J0ICdiaWdudW1iZXIuanMnO1xuaW1wb3J0ICdibmMtc2RrJztcbmltcG9ydCAnYm93c2VyJztcblxuZnVuY3Rpb24gY29ubmVjdCgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgaGVhZGluZyA9IG9wdGlvbnMuaGVhZGluZyxcbiAgICAgIGRlc2NyaXB0aW9uID0gb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICAgIGljb24gPSBvcHRpb25zLmljb24sXG4gICAgICBodG1sID0gb3B0aW9ucy5odG1sLFxuICAgICAgYnV0dG9uID0gb3B0aW9ucy5idXR0b247XG4gIHJldHVybiAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHN0YXRlQW5kSGVscGVycykge1xuICAgICAgdmFyIHdhbGxldCwgYWRkcmVzcywgc3RhdGVTeW5jU3RhdHVzLCBzdGF0ZVN0b3JlO1xuICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICB3YWxsZXQgPSBzdGF0ZUFuZEhlbHBlcnMud2FsbGV0LCBhZGRyZXNzID0gc3RhdGVBbmRIZWxwZXJzLmFkZHJlc3MsIHN0YXRlU3luY1N0YXR1cyA9IHN0YXRlQW5kSGVscGVycy5zdGF0ZVN5bmNTdGF0dXMsIHN0YXRlU3RvcmUgPSBzdGF0ZUFuZEhlbHBlcnMuc3RhdGVTdG9yZTtcblxuICAgICAgICAgICAgICBpZiAoIShhZGRyZXNzID09PSBudWxsKSkge1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFzdGF0ZVN5bmNTdGF0dXMuYWRkcmVzcykge1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgICAgIHN0YXRlU3luY1N0YXR1cy5hZGRyZXNzICYmIHN0YXRlU3luY1N0YXR1cy5hZGRyZXNzLnRoZW4ocmVzb2x2ZSk7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICBpZiAoYWRkcmVzcyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiBwcm9tIGlzbid0IHJlc29sdmluZyBhZnRlciA1MDBtcywgdGhlbiBzdG9wIHdhaXRpbmdcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgIGlmICghKCFzdGF0ZVN0b3JlLmFkZHJlc3MuZ2V0KCkgJiYgd2FsbGV0ICYmIHdhbGxldC5uYW1lKSkge1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdChcInJldHVyblwiLCB7XG4gICAgICAgICAgICAgICAgaGVhZGluZzogaGVhZGluZyB8fCAnTG9naW4gYW5kIEF1dGhvcml6ZSBZb3VyIFdhbGxldCcsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIHx8IFwiVGhpcyBkYXBwIHJlcXVpcmVzIGFjY2VzcyB0byB5b3VyIHdhbGxldCwgcGxlYXNlIGxvZ2luIGFuZCBhdXRob3JpemUgYWNjZXNzIHRvIHlvdXIgXCIuY29uY2F0KHdhbGxldC5uYW1lLCBcIiBhY2NvdW50cyB0byBjb250aW51ZS5cIiksXG4gICAgICAgICAgICAgICAgZXZlbnRDb2RlOiAnbG9naW5GYWlsJyxcbiAgICAgICAgICAgICAgICBhY3Rpb246IHdhbGxldC5jb25uZWN0LFxuICAgICAgICAgICAgICAgIGljb246IGljb24gfHwgY29ubmVjdEljb24sXG4gICAgICAgICAgICAgICAgaHRtbDogaHRtbCxcbiAgICAgICAgICAgICAgICBidXR0b246IGJ1dHRvblxuICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgX2NhbGxlZSk7XG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkge1xuICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9O1xuICB9KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==