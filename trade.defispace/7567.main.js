(self.webpackChunkmy_swap=self.webpackChunkmy_swap||[]).push([[7567],{76522:(e,n,t)=>{"use strict";t.d(n,{e:()=>r,m:()=>a});var r=function(e){var n=e.currentWallet,t=e.selectedWallet;return n?'\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    We have detected that you already have\n    <b>'.concat(n,"</b>\n    installed. If you would prefer to use\n    <b>").concat(t,'</b>\n    instead, then click below to install.\n    </p>\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    <b>Tip:</b>\n    If you already have ').concat(t,' installed, check your\n    browser extension settings to make sure that you have it enabled\n    and that you have disabled any other browser extension wallets.\n    <span\n      class="bn-onboard-clickable"\n      style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;"\n      onclick="window.location.reload();">\n      Then refresh the page.\n    </span>\n    </p>\n    '):'\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    You\'ll need to install <b>'.concat(t,'</b> to continue. Once you have it installed, go ahead and\n    <span\n    class="bn-onboard-clickable"\n      style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;"\n      onclick={window.location.reload();}>\n      refresh the page.\n    </span>\n    ').concat("Opera"===t?'<br><br><i>Hint: If you already have Opera installed, make sure that your web3 wallet is <a style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;" class="bn-onboard-clickable" href="https://help.opera.com/en/touch/crypto-wallet/" rel="noreferrer noopener" target="_blank">enabled</a></i>':"","\n    </p>\n    ")},a=function(e){var n=e.selectedWallet;return'\n  <p style="font-size: 0.889rem;">\n  Tap the button below to <b>Open '.concat(n,"</b>. Please access this site on ").concat(n,"'s in-app browser for a seamless experience.\n  </p>\n  ")}},67567:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});var r=t(76522);function a(e,n,t,r,a,l,o){try{var i=e[l](o),s=i.value}catch(e){return void t(e)}i.done?n(s):Promise.resolve(s).then(r,a)}function l(e){return function(){var n=this,t=arguments;return new Promise((function(r,l){var o=e.apply(n,t);function i(e){a(o,r,l,i,s,"next",e)}function s(e){a(o,r,l,i,s,"throw",e)}i(void 0)}))}}const o=function(e){var n,a=e.preferred,o=e.label,i=e.svg,s=e.rpcUrl;return{name:o||"Huobi Wallet",svg:i||'\n    <svg id="图层_1" data-name="图层 1" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 1024 1024">\n        <defs>\n            <style>.cls-1{fill:#2d65f8;}.cls-1,.cls-2{fill-rule:evenodd;}.cls-2{fill:#173fff;}.cls-3{fill:#fcfcff;}.cls-4{fill:#fff;}</style>\n        </defs>\n        <title>huobi wallet icon</title>\n        <path class="cls-1" d="M292.28,0H552Q742.79,27,858.24,122.88T1024,392V731.72c0,101.63-10.58,138.48-30.45,175.64a207.13,207.13,0,0,1-86.19,86.19c-37.16,19.87-74,30.45-175.64,30.45H292.28c-101.63,0-138.48-10.58-175.64-30.45a207.13,207.13,0,0,1-86.19-86.19C10.58,870.2,0,833.35,0,731.72V292.28C0,190.65,10.58,153.8,30.45,116.64a207.13,207.13,0,0,1,86.19-86.19C153.8,10.58,190.65,0,292.28,0Z"/>\n        <path class="cls-2" d="M993.55,116.64a207.13,207.13,0,0,0-86.19-86.19C870.21,10.58,833.35,0,731.72,0H552Q742.79,27,858.24,122.88T1024,392V292.28C1024,190.65,1013.42,153.8,993.55,116.64Z"/>\n        <path class="cls-3" d="M591.8,382.71c0-97.43-48-181.13-84.48-208.41,0,0-2.78-1.53-2.59,2.3-3,188-100.19,239-153.65,307.63-123.27,158.45-8.6,332.23,108.14,364.18,65.35,18-15.06-31.95-25.4-136.86C421.21,584.73,591.8,487.81,591.8,382.71Z"/>\n        <path class="cls-4" d="M643.64,445.69c-.78-.51-1.81-.9-2.53.32-2.07,23.74-26.56,74.42-57.67,121C478.07,725,538.08,801.1,571.91,842.18c19.44,23.74,0,0,49-24.25,60.52-36.26,99.8-98.95,105.62-168.62A242.5,242.5,0,0,0,643.64,445.69Z"/>\n    </svg>',wallet:(n=l(regeneratorRuntime.mark((function e(n){var r,a,o,i,c,u,f,d,p;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=n.getProviderName,a=n.getAddress,o=n.getNetwork,i=n.getBalance,c=window.ethereum||window.web3&&window.web3.currentProvider,!(u="huobiwallet"===r(c))||!s){e.next=7;break}return e.next=6,Promise.all([t.e(8847),t.e(7359),t.e(7895),t.e(7994),t.e(3714),t.e(8090),t.e(9606),t.e(9835),t.e(9225),t.e(596)]).then(t.bind(t,49225));case 6:f=e.sent.default;case 7:return d=f?f({rpcUrl:s}):null,p=!1,e.abrupt("return",{provider:c,interface:u?{address:{get:function(){return a(c)}},network:{get:function(){return o(c)}},balance:{get:function(){var e=l(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(d){e.next=3;break}return p||(console.warn('The Huobi Wallet provider does not allow rpc calls preventing Onboard.js from getting the balance. You can pass in a "rpcUrl" to the Huobi Wallet initialization object to get the balance.'),p=!0),e.abrupt("return",null);case 3:return e.next=5,a(c);case 5:return n=e.sent,e.abrupt("return",i(d,n));case 7:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()},name:r(c)}:null});case 10:case"end":return e.stop()}}),e)}))),function(e){return n.apply(this,arguments)}),type:"injected",link:"https://www.huobiwallet.com",installMessage:r.m,mobile:!0,preferred:a}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1zd2FwLy4vbm9kZV9tb2R1bGVzL2JuYy1vbmJvYXJkL2Rpc3QvZXNtL2NvbnRlbnQtNjEyYmQwNGIuanMiLCJ3ZWJwYWNrOi8vbXktc3dhcC8uL25vZGVfbW9kdWxlcy9ibmMtb25ib2FyZC9kaXN0L2VzbS9odW9iaXdhbGxldC0yNjdhZDM3Yi5qcyJdLCJuYW1lcyI6WyJleHRlbnNpb25JbnN0YWxsTWVzc2FnZSIsImhlbHBlcnMiLCJjdXJyZW50V2FsbGV0Iiwic2VsZWN0ZWRXYWxsZXQiLCJjb25jYXQiLCJtb2JpbGVXYWxsZXRJbnN0YWxsTWVzc2FnZSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlc29sdmUiLCJyZWplY3QiLCJfbmV4dCIsIl90aHJvdyIsImtleSIsImFyZyIsImluZm8iLCJ2YWx1ZSIsImVycm9yIiwiZG9uZSIsIlByb21pc2UiLCJ0aGVuIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJ0aGlzIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiZXJyIiwidW5kZWZpbmVkIiwib3B0aW9ucyIsIl93YWxsZXQiLCJwcmVmZXJyZWQiLCJsYWJlbCIsInN2ZyIsInJwY1VybCIsIm5hbWUiLCJ3YWxsZXQiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZTIiLCJnZXRQcm92aWRlck5hbWUiLCJnZXRBZGRyZXNzIiwiZ2V0TmV0d29yayIsImdldEJhbGFuY2UiLCJodW9iaXdhbGxldFByb3ZpZGVyIiwiaXNIdW9iaVdhbGxldCIsImNyZWF0ZVByb3ZpZGVyIiwicHJvdmlkZXIiLCJ3YXJuZWQiLCJ3cmFwIiwiX2NvbnRleHQyIiwicHJldiIsIm5leHQiLCJ3aW5kb3ciLCJldGhlcmV1bSIsIndlYjMiLCJjdXJyZW50UHJvdmlkZXIiLCJzZW50IiwiYWJydXB0IiwiYWRkcmVzcyIsImdldCIsIm5ldHdvcmsiLCJiYWxhbmNlIiwiX2dldCIsIl9jYWxsZWUiLCJfY29udGV4dCIsImNvbnNvbGUiLCJ3YXJuIiwic3RvcCIsIl94IiwidHlwZSIsImxpbmsiLCJpbnN0YWxsTWVzc2FnZSIsIm0iLCJtb2JpbGUiXSwibWFwcGluZ3MiOiI0SEFBQSxJQUFJQSxFQUEwQixTQUFpQ0MsR0FDN0QsSUFBSUMsRUFBZ0JELEVBQVFDLGNBQ3hCQyxFQUFpQkYsRUFBUUUsZUFFN0IsT0FBSUQsRUFDSyx3SUFBMElFLE9BQU9GLEVBQWUsNERBQTRERSxPQUFPRCxFQUFnQix3TEFBMExDLE9BQU9ELEVBQWdCLHFZQUVwYyxvSEFBcUhDLE9BQU9ELEVBQWdCLDZRQUFpUkMsT0FBMEIsVUFBbkJELEVBQTZCLDhTQUFnVCxHQUFJLHFCQUk1dkJFLEVBQTZCLFNBQW9DSixHQUNuRSxJQUFJRSxFQUFpQkYsRUFBUUUsZUFDN0IsTUFBTywyRUFBNkVDLE9BQU9ELEVBQWdCLHFDQUFxQ0MsT0FBT0QsRUFBZ0IsOEQsMEVDYnpLLFNBQVNHLEVBQW1CQyxFQUFLQyxFQUFTQyxFQUFRQyxFQUFPQyxFQUFRQyxFQUFLQyxHQUFPLElBQU0sSUFBSUMsRUFBT1AsRUFBSUssR0FBS0MsR0FBVUUsRUFBUUQsRUFBS0MsTUFBUyxNQUFPQyxHQUF3QixZQUFmUCxFQUFPTyxHQUFzQkYsRUFBS0csS0FBUVQsRUFBUU8sR0FBaUJHLFFBQVFWLFFBQVFPLEdBQU9JLEtBQUtULEVBQU9DLEdBRTdQLFNBQVNTLEVBQWtCQyxHQUFNLE9BQU8sV0FBYyxJQUFJQyxFQUFPQyxLQUFNQyxFQUFPQyxVQUFXLE9BQU8sSUFBSVAsU0FBUSxTQUFVVixFQUFTQyxHQUFVLElBQUlGLEVBQU1jLEVBQUdLLE1BQU1KLEVBQU1FLEdBQU8sU0FBU2QsRUFBTUssR0FBU1QsRUFBbUJDLEVBQUtDLEVBQVNDLEVBQVFDLEVBQU9DLEVBQVEsT0FBUUksR0FBVSxTQUFTSixFQUFPZ0IsR0FBT3JCLEVBQW1CQyxFQUFLQyxFQUFTQyxFQUFRQyxFQUFPQyxFQUFRLFFBQVNnQixHQUFRakIsT0FBTWtCLE9BMEhqWCxRQXJIQSxTQUFxQkMsR0FDbkIsSUFRUUMsRUFSSkMsRUFBWUYsRUFBUUUsVUFDcEJDLEVBQVFILEVBQVFHLE1BQ2hCQyxFQUFNSixFQUFRSSxJQUNkQyxFQUFTTCxFQUFRSyxPQUNyQixNQUFPLENBQ0xDLEtBQU1ILEdBQVMsZUFDZkMsSUFBS0EsR0FUYSwrNUNBVWxCRyxRQUNNTixFQUFVVixFQUFnQ2lCLG1CQUFtQkMsTUFBSyxTQUFTQyxFQUFTdEMsR0FDdEYsSUFBSXVDLEVBQWlCQyxFQUFZQyxFQUFZQyxFQUFZQyxFQUFxQkMsRUFBZUMsRUFBZ0JDLEVBQVVDLEVBQ3ZILE9BQU9YLG1CQUFtQlksTUFBSyxTQUFtQkMsR0FDaEQsT0FDRSxPQUFRQSxFQUFVQyxLQUFPRCxFQUFVRSxNQUNqQyxLQUFLLEVBS0gsR0FKQVosRUFBa0J2QyxFQUFRdUMsZ0JBQWlCQyxFQUFheEMsRUFBUXdDLFdBQVlDLEVBQWF6QyxFQUFReUMsV0FBWUMsRUFBYTFDLEVBQVEwQyxXQUNsSUMsRUFBc0JTLE9BQU9DLFVBQVlELE9BQU9FLE1BQVFGLE9BQU9FLEtBQUtDLGtCQUNwRVgsRUFBeUQsZ0JBQXpDTCxFQUFnQkksTUFFVFYsRUFBUyxDQUM5QmdCLEVBQVVFLEtBQU8sRUFDakIsTUFJRixPQURBRixFQUFVRSxLQUFPLEVBQ1Ysd0lBRVQsS0FBSyxFQUNITixFQUFpQkksRUFBVU8sS0FBYyxRQUUzQyxLQUFLLEVBS0gsT0FKQVYsRUFBV0QsRUFBaUJBLEVBQWUsQ0FDekNaLE9BQVFBLElBQ0wsS0FDTGMsR0FBUyxFQUNGRSxFQUFVUSxPQUFPLFNBQVUsQ0FDaENYLFNBQVVILEVBQ1YsVUFBYUMsRUFBZ0IsQ0FDM0JjLFFBQVMsQ0FDUEMsSUFBSyxXQUNILE9BQU9uQixFQUFXRyxLQUd0QmlCLFFBQVMsQ0FDUEQsSUFBSyxXQUNILE9BQU9sQixFQUFXRSxLQUd0QmtCLFFBQVMsQ0FDUEYsSUFBSyxXQUNILElBQUlHLEVBQU8zQyxFQUFnQ2lCLG1CQUFtQkMsTUFBSyxTQUFTMEIsSUFDMUUsSUFBSUwsRUFDSixPQUFPdEIsbUJBQW1CWSxNQUFLLFNBQWtCZ0IsR0FDL0MsT0FDRSxPQUFRQSxFQUFTZCxLQUFPYyxFQUFTYixNQUMvQixLQUFLLEVBQ0gsR0FBSUwsRUFBVSxDQUNaa0IsRUFBU2IsS0FBTyxFQUNoQixNQVFGLE9BTEtKLElBQ0hrQixRQUFRQyxLQUFLLCtMQUNibkIsR0FBUyxHQUdKaUIsRUFBU1AsT0FBTyxTQUFVLE1BRW5DLEtBQUssRUFFSCxPQURBTyxFQUFTYixLQUFPLEVBQ1RYLEVBQVdHLEdBRXBCLEtBQUssRUFFSCxPQURBZSxFQUFVTSxFQUFTUixLQUNaUSxFQUFTUCxPQUFPLFNBQVVmLEVBQVdJLEVBQVVZLElBRXhELEtBQUssRUFDTCxJQUFLLE1BQ0gsT0FBT00sRUFBU0csVUFHckJKLE9BT0wsT0FKQSxXQUNFLE9BQU9ELEVBQUtyQyxNQUFNSCxLQUFNRSxZQXBDdkIsSUEwQ1BVLEtBQU1LLEVBQWdCSSxJQUNwQixPQUdSLEtBQUssR0FDTCxJQUFLLE1BQ0gsT0FBT00sRUFBVWtCLFVBR3RCN0IsT0FHTCxTQUFnQjhCLEdBQ2QsT0FBT3ZDLEVBQVFKLE1BQU1ILEtBQU1FLGFBSy9CNkMsS0FBTSxXQUNOQyxLQUFNLDhCQUNOQyxlQUFnQixFQUFBQyxFQUNoQkMsUUFBUSxFQUNSM0MsVUFBV0EiLCJmaWxlIjoiNzU2Ny5tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4dGVuc2lvbkluc3RhbGxNZXNzYWdlID0gZnVuY3Rpb24gZXh0ZW5zaW9uSW5zdGFsbE1lc3NhZ2UoaGVscGVycykge1xuICB2YXIgY3VycmVudFdhbGxldCA9IGhlbHBlcnMuY3VycmVudFdhbGxldCxcbiAgICAgIHNlbGVjdGVkV2FsbGV0ID0gaGVscGVycy5zZWxlY3RlZFdhbGxldDtcblxuICBpZiAoY3VycmVudFdhbGxldCkge1xuICAgIHJldHVybiBcIlxcbiAgICA8cCBzdHlsZT1cXFwiZm9udC1zaXplOiAwLjg4OXJlbTsgZm9udC1mYW1pbHk6IGluaGVyaXQ7IG1hcmdpbjogMC44ODlyZW0gMDtcXFwiPlxcbiAgICBXZSBoYXZlIGRldGVjdGVkIHRoYXQgeW91IGFscmVhZHkgaGF2ZVxcbiAgICA8Yj5cIi5jb25jYXQoY3VycmVudFdhbGxldCwgXCI8L2I+XFxuICAgIGluc3RhbGxlZC4gSWYgeW91IHdvdWxkIHByZWZlciB0byB1c2VcXG4gICAgPGI+XCIpLmNvbmNhdChzZWxlY3RlZFdhbGxldCwgXCI8L2I+XFxuICAgIGluc3RlYWQsIHRoZW4gY2xpY2sgYmVsb3cgdG8gaW5zdGFsbC5cXG4gICAgPC9wPlxcbiAgICA8cCBzdHlsZT1cXFwiZm9udC1zaXplOiAwLjg4OXJlbTsgZm9udC1mYW1pbHk6IGluaGVyaXQ7IG1hcmdpbjogMC44ODlyZW0gMDtcXFwiPlxcbiAgICA8Yj5UaXA6PC9iPlxcbiAgICBJZiB5b3UgYWxyZWFkeSBoYXZlIFwiKS5jb25jYXQoc2VsZWN0ZWRXYWxsZXQsIFwiIGluc3RhbGxlZCwgY2hlY2sgeW91clxcbiAgICBicm93c2VyIGV4dGVuc2lvbiBzZXR0aW5ncyB0byBtYWtlIHN1cmUgdGhhdCB5b3UgaGF2ZSBpdCBlbmFibGVkXFxuICAgIGFuZCB0aGF0IHlvdSBoYXZlIGRpc2FibGVkIGFueSBvdGhlciBicm93c2VyIGV4dGVuc2lvbiB3YWxsZXRzLlxcbiAgICA8c3BhblxcbiAgICAgIGNsYXNzPVxcXCJibi1vbmJvYXJkLWNsaWNrYWJsZVxcXCJcXG4gICAgICBzdHlsZT1cXFwiY29sb3I6ICM0YTkwZTI7IGZvbnQtc2l6ZTogMC44ODlyZW07IGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcXCJcXG4gICAgICBvbmNsaWNrPVxcXCJ3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XFxcIj5cXG4gICAgICBUaGVuIHJlZnJlc2ggdGhlIHBhZ2UuXFxuICAgIDwvc3Bhbj5cXG4gICAgPC9wPlxcbiAgICBcIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXFxuICAgIDxwIHN0eWxlPVxcXCJmb250LXNpemU6IDAuODg5cmVtOyBmb250LWZhbWlseTogaW5oZXJpdDsgbWFyZ2luOiAwLjg4OXJlbSAwO1xcXCI+XFxuICAgIFlvdSdsbCBuZWVkIHRvIGluc3RhbGwgPGI+XCIuY29uY2F0KHNlbGVjdGVkV2FsbGV0LCBcIjwvYj4gdG8gY29udGludWUuIE9uY2UgeW91IGhhdmUgaXQgaW5zdGFsbGVkLCBnbyBhaGVhZCBhbmRcXG4gICAgPHNwYW5cXG4gICAgY2xhc3M9XFxcImJuLW9uYm9hcmQtY2xpY2thYmxlXFxcIlxcbiAgICAgIHN0eWxlPVxcXCJjb2xvcjogIzRhOTBlMjsgZm9udC1zaXplOiAwLjg4OXJlbTsgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxcIlxcbiAgICAgIG9uY2xpY2s9e3dpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTt9PlxcbiAgICAgIHJlZnJlc2ggdGhlIHBhZ2UuXFxuICAgIDwvc3Bhbj5cXG4gICAgXCIpLmNvbmNhdChzZWxlY3RlZFdhbGxldCA9PT0gJ09wZXJhJyA/ICc8YnI+PGJyPjxpPkhpbnQ6IElmIHlvdSBhbHJlYWR5IGhhdmUgT3BlcmEgaW5zdGFsbGVkLCBtYWtlIHN1cmUgdGhhdCB5b3VyIHdlYjMgd2FsbGV0IGlzIDxhIHN0eWxlPVwiY29sb3I6ICM0YTkwZTI7IGZvbnQtc2l6ZTogMC44ODlyZW07IGZvbnQtZmFtaWx5OiBpbmhlcml0O1wiIGNsYXNzPVwiYm4tb25ib2FyZC1jbGlja2FibGVcIiBocmVmPVwiaHR0cHM6Ly9oZWxwLm9wZXJhLmNvbS9lbi90b3VjaC9jcnlwdG8td2FsbGV0L1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5lbmFibGVkPC9hPjwvaT4nIDogJycsIFwiXFxuICAgIDwvcD5cXG4gICAgXCIpO1xuICB9XG59O1xuXG52YXIgbW9iaWxlV2FsbGV0SW5zdGFsbE1lc3NhZ2UgPSBmdW5jdGlvbiBtb2JpbGVXYWxsZXRJbnN0YWxsTWVzc2FnZShoZWxwZXJzKSB7XG4gIHZhciBzZWxlY3RlZFdhbGxldCA9IGhlbHBlcnMuc2VsZWN0ZWRXYWxsZXQ7XG4gIHJldHVybiBcIlxcbiAgPHAgc3R5bGU9XFxcImZvbnQtc2l6ZTogMC44ODlyZW07XFxcIj5cXG4gIFRhcCB0aGUgYnV0dG9uIGJlbG93IHRvIDxiPk9wZW4gXCIuY29uY2F0KHNlbGVjdGVkV2FsbGV0LCBcIjwvYj4uIFBsZWFzZSBhY2Nlc3MgdGhpcyBzaXRlIG9uIFwiKS5jb25jYXQoc2VsZWN0ZWRXYWxsZXQsIFwiJ3MgaW4tYXBwIGJyb3dzZXIgZm9yIGEgc2VhbWxlc3MgZXhwZXJpZW5jZS5cXG4gIDwvcD5cXG4gIFwiKTtcbn07XG5cbmV4cG9ydCB7IGV4dGVuc2lvbkluc3RhbGxNZXNzYWdlIGFzIGUsIG1vYmlsZVdhbGxldEluc3RhbGxNZXNzYWdlIGFzIG0gfTsiLCJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9XG5cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOyBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTsgfSBfbmV4dCh1bmRlZmluZWQpOyB9KTsgfTsgfVxuXG5pbXBvcnQgeyBtIGFzIG1vYmlsZVdhbGxldEluc3RhbGxNZXNzYWdlIH0gZnJvbSAnLi9jb250ZW50LTYxMmJkMDRiLmpzJztcbnZhciBodW9iaXdhbGxldEljb24gPSBcIlxcbiAgICA8c3ZnIGlkPVxcXCJcXHU1NkZFXFx1NUM0Ml8xXFxcIiBkYXRhLW5hbWU9XFxcIlxcdTU2RkVcXHU1QzQyIDFcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgd2lkdGg9XFxcIjQwXFxcIiBoZWlnaHQ9XFxcIjQwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMTAyNCAxMDI0XFxcIj5cXG4gICAgICAgIDxkZWZzPlxcbiAgICAgICAgICAgIDxzdHlsZT4uY2xzLTF7ZmlsbDojMmQ2NWY4O30uY2xzLTEsLmNscy0ye2ZpbGwtcnVsZTpldmVub2RkO30uY2xzLTJ7ZmlsbDojMTczZmZmO30uY2xzLTN7ZmlsbDojZmNmY2ZmO30uY2xzLTR7ZmlsbDojZmZmO308L3N0eWxlPlxcbiAgICAgICAgPC9kZWZzPlxcbiAgICAgICAgPHRpdGxlPmh1b2JpIHdhbGxldCBpY29uPC90aXRsZT5cXG4gICAgICAgIDxwYXRoIGNsYXNzPVxcXCJjbHMtMVxcXCIgZD1cXFwiTTI5Mi4yOCwwSDU1MlE3NDIuNzksMjcsODU4LjI0LDEyMi44OFQxMDI0LDM5MlY3MzEuNzJjMCwxMDEuNjMtMTAuNTgsMTM4LjQ4LTMwLjQ1LDE3NS42NGEyMDcuMTMsMjA3LjEzLDAsMCwxLTg2LjE5LDg2LjE5Yy0zNy4xNiwxOS44Ny03NCwzMC40NS0xNzUuNjQsMzAuNDVIMjkyLjI4Yy0xMDEuNjMsMC0xMzguNDgtMTAuNTgtMTc1LjY0LTMwLjQ1YTIwNy4xMywyMDcuMTMsMCwwLDEtODYuMTktODYuMTlDMTAuNTgsODcwLjIsMCw4MzMuMzUsMCw3MzEuNzJWMjkyLjI4QzAsMTkwLjY1LDEwLjU4LDE1My44LDMwLjQ1LDExNi42NGEyMDcuMTMsMjA3LjEzLDAsMCwxLDg2LjE5LTg2LjE5QzE1My44LDEwLjU4LDE5MC42NSwwLDI5Mi4yOCwwWlxcXCIvPlxcbiAgICAgICAgPHBhdGggY2xhc3M9XFxcImNscy0yXFxcIiBkPVxcXCJNOTkzLjU1LDExNi42NGEyMDcuMTMsMjA3LjEzLDAsMCwwLTg2LjE5LTg2LjE5Qzg3MC4yMSwxMC41OCw4MzMuMzUsMCw3MzEuNzIsMEg1NTJRNzQyLjc5LDI3LDg1OC4yNCwxMjIuODhUMTAyNCwzOTJWMjkyLjI4QzEwMjQsMTkwLjY1LDEwMTMuNDIsMTUzLjgsOTkzLjU1LDExNi42NFpcXFwiLz5cXG4gICAgICAgIDxwYXRoIGNsYXNzPVxcXCJjbHMtM1xcXCIgZD1cXFwiTTU5MS44LDM4Mi43MWMwLTk3LjQzLTQ4LTE4MS4xMy04NC40OC0yMDguNDEsMCwwLTIuNzgtMS41My0yLjU5LDIuMy0zLDE4OC0xMDAuMTksMjM5LTE1My42NSwzMDcuNjMtMTIzLjI3LDE1OC40NS04LjYsMzMyLjIzLDEwOC4xNCwzNjQuMTgsNjUuMzUsMTgtMTUuMDYtMzEuOTUtMjUuNC0xMzYuODZDNDIxLjIxLDU4NC43Myw1OTEuOCw0ODcuODEsNTkxLjgsMzgyLjcxWlxcXCIvPlxcbiAgICAgICAgPHBhdGggY2xhc3M9XFxcImNscy00XFxcIiBkPVxcXCJNNjQzLjY0LDQ0NS42OWMtLjc4LS41MS0xLjgxLS45LTIuNTMuMzItMi4wNywyMy43NC0yNi41Niw3NC40Mi01Ny42NywxMjFDNDc4LjA3LDcyNSw1MzguMDgsODAxLjEsNTcxLjkxLDg0Mi4xOGMxOS40NCwyMy43NCwwLDAsNDktMjQuMjUsNjAuNTItMzYuMjYsOTkuOC05OC45NSwxMDUuNjItMTY4LjYyQTI0Mi41LDI0Mi41LDAsMCwwLDY0My42NCw0NDUuNjlaXFxcIi8+XFxuICAgIDwvc3ZnPlwiO1xuXG5mdW5jdGlvbiBodW9iaXdhbGxldChvcHRpb25zKSB7XG4gIHZhciBwcmVmZXJyZWQgPSBvcHRpb25zLnByZWZlcnJlZCxcbiAgICAgIGxhYmVsID0gb3B0aW9ucy5sYWJlbCxcbiAgICAgIHN2ZyA9IG9wdGlvbnMuc3ZnLFxuICAgICAgcnBjVXJsID0gb3B0aW9ucy5ycGNVcmw7XG4gIHJldHVybiB7XG4gICAgbmFtZTogbGFiZWwgfHwgJ0h1b2JpIFdhbGxldCcsXG4gICAgc3ZnOiBzdmcgfHwgaHVvYml3YWxsZXRJY29uLFxuICAgIHdhbGxldDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF93YWxsZXQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGhlbHBlcnMpIHtcbiAgICAgICAgdmFyIGdldFByb3ZpZGVyTmFtZSwgZ2V0QWRkcmVzcywgZ2V0TmV0d29yaywgZ2V0QmFsYW5jZSwgaHVvYml3YWxsZXRQcm92aWRlciwgaXNIdW9iaVdhbGxldCwgY3JlYXRlUHJvdmlkZXIsIHByb3ZpZGVyLCB3YXJuZWQ7XG4gICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgZ2V0UHJvdmlkZXJOYW1lID0gaGVscGVycy5nZXRQcm92aWRlck5hbWUsIGdldEFkZHJlc3MgPSBoZWxwZXJzLmdldEFkZHJlc3MsIGdldE5ldHdvcmsgPSBoZWxwZXJzLmdldE5ldHdvcmssIGdldEJhbGFuY2UgPSBoZWxwZXJzLmdldEJhbGFuY2U7XG4gICAgICAgICAgICAgICAgaHVvYml3YWxsZXRQcm92aWRlciA9IHdpbmRvdy5ldGhlcmV1bSB8fCB3aW5kb3cud2ViMyAmJiB3aW5kb3cud2ViMy5jdXJyZW50UHJvdmlkZXI7XG4gICAgICAgICAgICAgICAgaXNIdW9iaVdhbGxldCA9IGdldFByb3ZpZGVyTmFtZShodW9iaXdhbGxldFByb3ZpZGVyKSA9PT0gJ2h1b2Jpd2FsbGV0JztcblxuICAgICAgICAgICAgICAgIGlmICghKGlzSHVvYmlXYWxsZXQgJiYgcnBjVXJsKSkge1xuICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3O1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2O1xuICAgICAgICAgICAgICAgIHJldHVybiBpbXBvcnQoJy4vcHJvdmlkZXJFbmdpbmUtOGJkYWY0NTIuanMnKTtcblxuICAgICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgY3JlYXRlUHJvdmlkZXIgPSBfY29udGV4dDIuc2VudFtcImRlZmF1bHRcIl07XG5cbiAgICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgICAgIHByb3ZpZGVyID0gY3JlYXRlUHJvdmlkZXIgPyBjcmVhdGVQcm92aWRlcih7XG4gICAgICAgICAgICAgICAgICBycGNVcmw6IHJwY1VybFxuICAgICAgICAgICAgICAgIH0pIDogbnVsbDtcbiAgICAgICAgICAgICAgICB3YXJuZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdChcInJldHVyblwiLCB7XG4gICAgICAgICAgICAgICAgICBwcm92aWRlcjogaHVvYml3YWxsZXRQcm92aWRlcixcbiAgICAgICAgICAgICAgICAgIFwiaW50ZXJmYWNlXCI6IGlzSHVvYmlXYWxsZXQgPyB7XG4gICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRBZGRyZXNzKGh1b2Jpd2FsbGV0UHJvdmlkZXIpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbmV0d29yazoge1xuICAgICAgICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldE5ldHdvcmsoaHVvYml3YWxsZXRQcm92aWRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBiYWxhbmNlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2dldCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFkZHJlc3M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvdmlkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF3YXJuZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignVGhlIEh1b2JpIFdhbGxldCBwcm92aWRlciBkb2VzIG5vdCBhbGxvdyBycGMgY2FsbHMgcHJldmVudGluZyBPbmJvYXJkLmpzIGZyb20gZ2V0dGluZyB0aGUgYmFsYW5jZS4gWW91IGNhbiBwYXNzIGluIGEgXCJycGNVcmxcIiB0byB0aGUgSHVvYmkgV2FsbGV0IGluaXRpYWxpemF0aW9uIG9iamVjdCB0byBnZXQgdGhlIGJhbGFuY2UuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgbnVsbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRBZGRyZXNzKGh1b2Jpd2FsbGV0UHJvdmlkZXIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGdldEJhbGFuY2UocHJvdmlkZXIsIGFkZHJlc3MpKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9nZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldDtcbiAgICAgICAgICAgICAgICAgICAgICB9KClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogZ2V0UHJvdmlkZXJOYW1lKGh1b2Jpd2FsbGV0UHJvdmlkZXIpXG4gICAgICAgICAgICAgICAgICB9IDogbnVsbFxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9jYWxsZWUyKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gd2FsbGV0KF94KSB7XG4gICAgICAgIHJldHVybiBfd2FsbGV0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB3YWxsZXQ7XG4gICAgfSgpLFxuICAgIHR5cGU6ICdpbmplY3RlZCcsXG4gICAgbGluazogJ2h0dHBzOi8vd3d3Lmh1b2Jpd2FsbGV0LmNvbScsXG4gICAgaW5zdGFsbE1lc3NhZ2U6IG1vYmlsZVdhbGxldEluc3RhbGxNZXNzYWdlLFxuICAgIG1vYmlsZTogdHJ1ZSxcbiAgICBwcmVmZXJyZWQ6IHByZWZlcnJlZFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBodW9iaXdhbGxldDsiXSwic291cmNlUm9vdCI6IiJ9