(self.webpackChunkmy_swap=self.webpackChunkmy_swap||[]).push([[3600],{94278:(t,i,r)=>{"use strict";var n=r(43614),e=r(83206),h=new n(0),o=new n(-1),s={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};function u(t){var i=t?t.toLowerCase():"ether",r=s[i];if("string"!=typeof r)throw new Error("[ethjs-unit] the unit provided "+t+" doesn't exists, please use the one of the following units "+JSON.stringify(s,null,2));return new n(r,10)}function a(t){if("string"==typeof t){if(!t.match(/^-?[0-9.]+$/))throw new Error("while converting number to string, invalid number value '"+t+"', should be a number matching (^-?[0-9.]+).");return t}if("number"==typeof t)return String(t);if("object"==typeof t&&t.toString&&(t.toTwos||t.dividedToIntegerBy))return t.toPrecision?String(t.toPrecision()):t.toString(10);throw new Error("while converting number to string, invalid number value '"+t+"' type "+typeof t+".")}t.exports={unitMap:s,numberToString:a,getValueOfUnit:u,fromWei:function(t,i,r){var n=e(t),a=n.lt(h),l=u(i),m=s[i].length-1||1,f=r||{};a&&(n=n.mul(o));for(var d=n.mod(l).toString(10);d.length<m;)d="0"+d;f.pad||(d=d.match(/^([0-9]*[1-9]|0)(0*)/)[1]);var p=n.div(l).toString(10);f.commify&&(p=p.replace(/\B(?=(\d{3})+(?!\d))/g,","));var M=p+("0"==d?"":"."+d);return a&&(M="-"+M),M},toWei:function(t,i){var r=a(t),e=u(i),h=s[i].length-1||1,l="-"===r.substring(0,1);if(l&&(r=r.substring(1)),"."===r)throw new Error("[ethjs-unit] while converting number "+t+" to wei, invalid value");var m=r.split(".");if(m.length>2)throw new Error("[ethjs-unit] while converting number "+t+" to wei,  too many decimal points");var f=m[0],d=m[1];if(f||(f="0"),d||(d="0"),d.length>h)throw new Error("[ethjs-unit] while converting number "+t+" to wei, too many decimal places");for(;d.length<h;)d+="0";f=new n(f),d=new n(d);var p=f.mul(e).add(d);return l&&(p=p.mul(o)),new n(p.toString(10),10)}}},43614:function(t,i,r){!function(t,i){"use strict";function n(t,i){if(!t)throw new Error(i||"Assertion failed")}function e(t,i){t.super_=i;var r=function(){};r.prototype=i.prototype,t.prototype=new r,t.prototype.constructor=t}function h(t,i,r){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(r=i,i=10),this._init(t||0,i||10,r||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o=r(48764).Buffer}catch(t){}function s(t,i,r){for(var n=0,e=Math.min(t.length,r),h=i;h<e;h++){var o=t.charCodeAt(h)-48;n<<=4,n|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return n}function u(t,i,r,n){for(var e=0,h=Math.min(t.length,r),o=i;o<h;o++){var s=t.charCodeAt(o)-48;e*=n,e+=s>=49?s-49+10:s>=17?s-17+10:s}return e}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,r){if("number"==typeof t)return this._initNumber(t,i,r);if("object"==typeof t)return this._initArray(t,i,r);"hex"===i&&(i=16),n(i===(0|i)&&i>=2&&i<=36);var e=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&e++,16===i?this._parseHex(t,e):this._parseBase(t,i,e),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),i,r)},h.prototype._initNumber=function(t,i,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),i,r)},h.prototype._initArray=function(t,i,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var e=0;e<this.length;e++)this.words[e]=0;var h,o,s=0;if("be"===r)for(e=t.length-1,h=0;e>=0;e-=3)o=t[e]|t[e-1]<<8|t[e-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===r)for(e=0,h=0;e<t.length;e+=3)o=t[e]|t[e+1]<<8|t[e+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,e,h=0;for(r=t.length-6,n=0;r>=i;r-=6)e=s(t,r,r+6),this.words[n]|=e<<h&67108863,this.words[n+1]|=e>>>26-h&4194303,(h+=24)>=26&&(h-=26,n++);r+6!==i&&(e=s(t,i,r+6),this.words[n]|=e<<h&67108863,this.words[n+1]|=e>>>26-h&4194303),this.strip()},h.prototype._parseBase=function(t,i,r){this.words=[0],this.length=1;for(var n=0,e=1;e<=67108863;e*=i)n++;n--,e=e/i|0;for(var h=t.length-r,o=h%n,s=Math.min(h,h-o)+r,a=0,l=r;l<s;l+=n)a=u(t,l,l+n,i),this.imuln(e),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);if(0!==o){var m=1;for(a=u(t,l,t.length,i),l=0;l<o;l++)m*=i;this.imuln(m),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a)}},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var a=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],m=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,i,r){r.negative=i.negative^t.negative;var n=t.length+i.length|0;r.length=n,n=n-1|0;var e=0|t.words[0],h=0|i.words[0],o=e*h,s=67108863&o,u=o/67108864|0;r.words[0]=s;for(var a=1;a<n;a++){for(var l=u>>>26,m=67108863&u,f=Math.min(a,i.length-1),d=Math.max(0,a-t.length+1);d<=f;d++){var p=a-d|0;l+=(o=(e=0|t.words[p])*(h=0|i.words[d])+m)/67108864|0,m=67108863&o}r.words[a]=0|m,u=0|l}return 0!==u?r.words[a]=0|u:r.length--,r.strip()}h.prototype.toString=function(t,i){var r;if(i=0|i||1,16===(t=t||10)||"hex"===t){r="";for(var e=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<e|h)).toString(16);r=0!=(h=s>>>24-e&16777215)||o!==this.length-1?a[6-u.length]+u+r:u+r,(e+=2)>=26&&(e-=26,o--)}for(0!==h&&(r=h.toString(16)+r);r.length%i!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var f=l[t],d=m[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var M=p.modn(d).toString(t);r=(p=p.idivn(d)).isZero()?M+r:a[f-M.length]+M+r}for(this.isZero()&&(r="0"+r);r.length%i!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return n(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,r){var e=this.byteLength(),h=r||Math.max(1,e);n(e<=h,"byte array longer than desired length"),n(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-e;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,r=0;return i>=4096&&(r+=13,i>>>=13),i>=64&&(r+=7,i>>>=7),i>=8&&(r+=4,i>>>=4),i>=2&&(r+=2,i>>>=2),r+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,r=0;return 0==(8191&i)&&(r+=13,i>>>=13),0==(127&i)&&(r+=7,i>>>=7),0==(15&i)&&(r+=4,i>>>=4),0==(3&i)&&(r+=2,i>>>=2),0==(1&i)&&r++,r},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var r=this._zeroBits(this.words[i]);if(t+=r,26!==r)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var r=0;r<i.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,r;this.length>t.length?(i=this,r=t):(i=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=i.words[n]^r.words[n];if(this!==i)for(;n<i.length;n++)this.words[n]=i.words[n];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),r=t%26;this._expand(i),r>0&&i--;for(var e=0;e<i;e++)this.words[e]=67108863&~this.words[e];return r>0&&(this.words[e]=~this.words[e]&67108863>>26-r),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){n("number"==typeof t&&t>=0);var r=t/26|0,e=t%26;return this._expand(r+1),this.words[r]=i?this.words[r]|1<<e:this.words[r]&~(1<<e),this.strip()},h.prototype.iadd=function(t){var i,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var e=0,h=0;h<n.length;h++)i=(0|r.words[h])+(0|n.words[h])+e,this.words[h]=67108863&i,e=i>>>26;for(;0!==e&&h<r.length;h++)i=(0|r.words[h])+e,this.words[h]=67108863&i,e=i>>>26;if(this.length=r.length,0!==e)this.words[this.length]=e,this.length++;else if(r!==this)for(;h<r.length;h++)this.words[h]=r.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,e=this.cmp(t);if(0===e)return this.negative=0,this.length=1,this.words[0]=0,this;e>0?(r=this,n=t):(r=t,n=this);for(var h=0,o=0;o<n.length;o++)h=(i=(0|r.words[o])-(0|n.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<r.length;o++)h=(i=(0|r.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,i,r){var n,e,h,o=t.words,s=i.words,u=r.words,a=0,l=0|o[0],m=8191&l,f=l>>>13,d=0|o[1],p=8191&d,M=d>>>13,v=0|o[2],g=8191&v,c=v>>>13,w=0|o[3],y=8191&w,b=w>>>13,_=0|o[4],k=8191&_,A=_>>>13,S=0|o[5],x=8191&S,B=S>>>13,Z=0|o[6],q=8191&Z,R=Z>>>13,N=0|o[7],L=8191&N,E=N>>>13,I=0|o[8],T=8191&I,z=I>>>13,j=0|o[9],O=8191&j,C=j>>>13,F=0|s[0],P=8191&F,K=F>>>13,$=0|s[1],U=8191&$,D=$>>>13,H=0|s[2],J=8191&H,V=H>>>13,W=0|s[3],G=8191&W,Q=W>>>13,X=0|s[4],Y=8191&X,tt=X>>>13,it=0|s[5],rt=8191&it,nt=it>>>13,et=0|s[6],ht=8191&et,ot=et>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],mt=8191&lt,ft=lt>>>13,dt=0|s[9],pt=8191&dt,Mt=dt>>>13;r.negative=t.negative^i.negative,r.length=19;var vt=(a+(n=Math.imul(m,P))|0)+((8191&(e=(e=Math.imul(m,K))+Math.imul(f,P)|0))<<13)|0;a=((h=Math.imul(f,K))+(e>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(p,P),e=(e=Math.imul(p,K))+Math.imul(M,P)|0,h=Math.imul(M,K);var gt=(a+(n=n+Math.imul(m,U)|0)|0)+((8191&(e=(e=e+Math.imul(m,D)|0)+Math.imul(f,U)|0))<<13)|0;a=((h=h+Math.imul(f,D)|0)+(e>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(g,P),e=(e=Math.imul(g,K))+Math.imul(c,P)|0,h=Math.imul(c,K),n=n+Math.imul(p,U)|0,e=(e=e+Math.imul(p,D)|0)+Math.imul(M,U)|0,h=h+Math.imul(M,D)|0;var ct=(a+(n=n+Math.imul(m,J)|0)|0)+((8191&(e=(e=e+Math.imul(m,V)|0)+Math.imul(f,J)|0))<<13)|0;a=((h=h+Math.imul(f,V)|0)+(e>>>13)|0)+(ct>>>26)|0,ct&=67108863,n=Math.imul(y,P),e=(e=Math.imul(y,K))+Math.imul(b,P)|0,h=Math.imul(b,K),n=n+Math.imul(g,U)|0,e=(e=e+Math.imul(g,D)|0)+Math.imul(c,U)|0,h=h+Math.imul(c,D)|0,n=n+Math.imul(p,J)|0,e=(e=e+Math.imul(p,V)|0)+Math.imul(M,J)|0,h=h+Math.imul(M,V)|0;var wt=(a+(n=n+Math.imul(m,G)|0)|0)+((8191&(e=(e=e+Math.imul(m,Q)|0)+Math.imul(f,G)|0))<<13)|0;a=((h=h+Math.imul(f,Q)|0)+(e>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(k,P),e=(e=Math.imul(k,K))+Math.imul(A,P)|0,h=Math.imul(A,K),n=n+Math.imul(y,U)|0,e=(e=e+Math.imul(y,D)|0)+Math.imul(b,U)|0,h=h+Math.imul(b,D)|0,n=n+Math.imul(g,J)|0,e=(e=e+Math.imul(g,V)|0)+Math.imul(c,J)|0,h=h+Math.imul(c,V)|0,n=n+Math.imul(p,G)|0,e=(e=e+Math.imul(p,Q)|0)+Math.imul(M,G)|0,h=h+Math.imul(M,Q)|0;var yt=(a+(n=n+Math.imul(m,Y)|0)|0)+((8191&(e=(e=e+Math.imul(m,tt)|0)+Math.imul(f,Y)|0))<<13)|0;a=((h=h+Math.imul(f,tt)|0)+(e>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(x,P),e=(e=Math.imul(x,K))+Math.imul(B,P)|0,h=Math.imul(B,K),n=n+Math.imul(k,U)|0,e=(e=e+Math.imul(k,D)|0)+Math.imul(A,U)|0,h=h+Math.imul(A,D)|0,n=n+Math.imul(y,J)|0,e=(e=e+Math.imul(y,V)|0)+Math.imul(b,J)|0,h=h+Math.imul(b,V)|0,n=n+Math.imul(g,G)|0,e=(e=e+Math.imul(g,Q)|0)+Math.imul(c,G)|0,h=h+Math.imul(c,Q)|0,n=n+Math.imul(p,Y)|0,e=(e=e+Math.imul(p,tt)|0)+Math.imul(M,Y)|0,h=h+Math.imul(M,tt)|0;var bt=(a+(n=n+Math.imul(m,rt)|0)|0)+((8191&(e=(e=e+Math.imul(m,nt)|0)+Math.imul(f,rt)|0))<<13)|0;a=((h=h+Math.imul(f,nt)|0)+(e>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(q,P),e=(e=Math.imul(q,K))+Math.imul(R,P)|0,h=Math.imul(R,K),n=n+Math.imul(x,U)|0,e=(e=e+Math.imul(x,D)|0)+Math.imul(B,U)|0,h=h+Math.imul(B,D)|0,n=n+Math.imul(k,J)|0,e=(e=e+Math.imul(k,V)|0)+Math.imul(A,J)|0,h=h+Math.imul(A,V)|0,n=n+Math.imul(y,G)|0,e=(e=e+Math.imul(y,Q)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,Q)|0,n=n+Math.imul(g,Y)|0,e=(e=e+Math.imul(g,tt)|0)+Math.imul(c,Y)|0,h=h+Math.imul(c,tt)|0,n=n+Math.imul(p,rt)|0,e=(e=e+Math.imul(p,nt)|0)+Math.imul(M,rt)|0,h=h+Math.imul(M,nt)|0;var _t=(a+(n=n+Math.imul(m,ht)|0)|0)+((8191&(e=(e=e+Math.imul(m,ot)|0)+Math.imul(f,ht)|0))<<13)|0;a=((h=h+Math.imul(f,ot)|0)+(e>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(L,P),e=(e=Math.imul(L,K))+Math.imul(E,P)|0,h=Math.imul(E,K),n=n+Math.imul(q,U)|0,e=(e=e+Math.imul(q,D)|0)+Math.imul(R,U)|0,h=h+Math.imul(R,D)|0,n=n+Math.imul(x,J)|0,e=(e=e+Math.imul(x,V)|0)+Math.imul(B,J)|0,h=h+Math.imul(B,V)|0,n=n+Math.imul(k,G)|0,e=(e=e+Math.imul(k,Q)|0)+Math.imul(A,G)|0,h=h+Math.imul(A,Q)|0,n=n+Math.imul(y,Y)|0,e=(e=e+Math.imul(y,tt)|0)+Math.imul(b,Y)|0,h=h+Math.imul(b,tt)|0,n=n+Math.imul(g,rt)|0,e=(e=e+Math.imul(g,nt)|0)+Math.imul(c,rt)|0,h=h+Math.imul(c,nt)|0,n=n+Math.imul(p,ht)|0,e=(e=e+Math.imul(p,ot)|0)+Math.imul(M,ht)|0,h=h+Math.imul(M,ot)|0;var kt=(a+(n=n+Math.imul(m,ut)|0)|0)+((8191&(e=(e=e+Math.imul(m,at)|0)+Math.imul(f,ut)|0))<<13)|0;a=((h=h+Math.imul(f,at)|0)+(e>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(T,P),e=(e=Math.imul(T,K))+Math.imul(z,P)|0,h=Math.imul(z,K),n=n+Math.imul(L,U)|0,e=(e=e+Math.imul(L,D)|0)+Math.imul(E,U)|0,h=h+Math.imul(E,D)|0,n=n+Math.imul(q,J)|0,e=(e=e+Math.imul(q,V)|0)+Math.imul(R,J)|0,h=h+Math.imul(R,V)|0,n=n+Math.imul(x,G)|0,e=(e=e+Math.imul(x,Q)|0)+Math.imul(B,G)|0,h=h+Math.imul(B,Q)|0,n=n+Math.imul(k,Y)|0,e=(e=e+Math.imul(k,tt)|0)+Math.imul(A,Y)|0,h=h+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,e=(e=e+Math.imul(y,nt)|0)+Math.imul(b,rt)|0,h=h+Math.imul(b,nt)|0,n=n+Math.imul(g,ht)|0,e=(e=e+Math.imul(g,ot)|0)+Math.imul(c,ht)|0,h=h+Math.imul(c,ot)|0,n=n+Math.imul(p,ut)|0,e=(e=e+Math.imul(p,at)|0)+Math.imul(M,ut)|0,h=h+Math.imul(M,at)|0;var At=(a+(n=n+Math.imul(m,mt)|0)|0)+((8191&(e=(e=e+Math.imul(m,ft)|0)+Math.imul(f,mt)|0))<<13)|0;a=((h=h+Math.imul(f,ft)|0)+(e>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(O,P),e=(e=Math.imul(O,K))+Math.imul(C,P)|0,h=Math.imul(C,K),n=n+Math.imul(T,U)|0,e=(e=e+Math.imul(T,D)|0)+Math.imul(z,U)|0,h=h+Math.imul(z,D)|0,n=n+Math.imul(L,J)|0,e=(e=e+Math.imul(L,V)|0)+Math.imul(E,J)|0,h=h+Math.imul(E,V)|0,n=n+Math.imul(q,G)|0,e=(e=e+Math.imul(q,Q)|0)+Math.imul(R,G)|0,h=h+Math.imul(R,Q)|0,n=n+Math.imul(x,Y)|0,e=(e=e+Math.imul(x,tt)|0)+Math.imul(B,Y)|0,h=h+Math.imul(B,tt)|0,n=n+Math.imul(k,rt)|0,e=(e=e+Math.imul(k,nt)|0)+Math.imul(A,rt)|0,h=h+Math.imul(A,nt)|0,n=n+Math.imul(y,ht)|0,e=(e=e+Math.imul(y,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,n=n+Math.imul(g,ut)|0,e=(e=e+Math.imul(g,at)|0)+Math.imul(c,ut)|0,h=h+Math.imul(c,at)|0,n=n+Math.imul(p,mt)|0,e=(e=e+Math.imul(p,ft)|0)+Math.imul(M,mt)|0,h=h+Math.imul(M,ft)|0;var St=(a+(n=n+Math.imul(m,pt)|0)|0)+((8191&(e=(e=e+Math.imul(m,Mt)|0)+Math.imul(f,pt)|0))<<13)|0;a=((h=h+Math.imul(f,Mt)|0)+(e>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(O,U),e=(e=Math.imul(O,D))+Math.imul(C,U)|0,h=Math.imul(C,D),n=n+Math.imul(T,J)|0,e=(e=e+Math.imul(T,V)|0)+Math.imul(z,J)|0,h=h+Math.imul(z,V)|0,n=n+Math.imul(L,G)|0,e=(e=e+Math.imul(L,Q)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,Q)|0,n=n+Math.imul(q,Y)|0,e=(e=e+Math.imul(q,tt)|0)+Math.imul(R,Y)|0,h=h+Math.imul(R,tt)|0,n=n+Math.imul(x,rt)|0,e=(e=e+Math.imul(x,nt)|0)+Math.imul(B,rt)|0,h=h+Math.imul(B,nt)|0,n=n+Math.imul(k,ht)|0,e=(e=e+Math.imul(k,ot)|0)+Math.imul(A,ht)|0,h=h+Math.imul(A,ot)|0,n=n+Math.imul(y,ut)|0,e=(e=e+Math.imul(y,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,n=n+Math.imul(g,mt)|0,e=(e=e+Math.imul(g,ft)|0)+Math.imul(c,mt)|0,h=h+Math.imul(c,ft)|0;var xt=(a+(n=n+Math.imul(p,pt)|0)|0)+((8191&(e=(e=e+Math.imul(p,Mt)|0)+Math.imul(M,pt)|0))<<13)|0;a=((h=h+Math.imul(M,Mt)|0)+(e>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(O,J),e=(e=Math.imul(O,V))+Math.imul(C,J)|0,h=Math.imul(C,V),n=n+Math.imul(T,G)|0,e=(e=e+Math.imul(T,Q)|0)+Math.imul(z,G)|0,h=h+Math.imul(z,Q)|0,n=n+Math.imul(L,Y)|0,e=(e=e+Math.imul(L,tt)|0)+Math.imul(E,Y)|0,h=h+Math.imul(E,tt)|0,n=n+Math.imul(q,rt)|0,e=(e=e+Math.imul(q,nt)|0)+Math.imul(R,rt)|0,h=h+Math.imul(R,nt)|0,n=n+Math.imul(x,ht)|0,e=(e=e+Math.imul(x,ot)|0)+Math.imul(B,ht)|0,h=h+Math.imul(B,ot)|0,n=n+Math.imul(k,ut)|0,e=(e=e+Math.imul(k,at)|0)+Math.imul(A,ut)|0,h=h+Math.imul(A,at)|0,n=n+Math.imul(y,mt)|0,e=(e=e+Math.imul(y,ft)|0)+Math.imul(b,mt)|0,h=h+Math.imul(b,ft)|0;var Bt=(a+(n=n+Math.imul(g,pt)|0)|0)+((8191&(e=(e=e+Math.imul(g,Mt)|0)+Math.imul(c,pt)|0))<<13)|0;a=((h=h+Math.imul(c,Mt)|0)+(e>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(O,G),e=(e=Math.imul(O,Q))+Math.imul(C,G)|0,h=Math.imul(C,Q),n=n+Math.imul(T,Y)|0,e=(e=e+Math.imul(T,tt)|0)+Math.imul(z,Y)|0,h=h+Math.imul(z,tt)|0,n=n+Math.imul(L,rt)|0,e=(e=e+Math.imul(L,nt)|0)+Math.imul(E,rt)|0,h=h+Math.imul(E,nt)|0,n=n+Math.imul(q,ht)|0,e=(e=e+Math.imul(q,ot)|0)+Math.imul(R,ht)|0,h=h+Math.imul(R,ot)|0,n=n+Math.imul(x,ut)|0,e=(e=e+Math.imul(x,at)|0)+Math.imul(B,ut)|0,h=h+Math.imul(B,at)|0,n=n+Math.imul(k,mt)|0,e=(e=e+Math.imul(k,ft)|0)+Math.imul(A,mt)|0,h=h+Math.imul(A,ft)|0;var Zt=(a+(n=n+Math.imul(y,pt)|0)|0)+((8191&(e=(e=e+Math.imul(y,Mt)|0)+Math.imul(b,pt)|0))<<13)|0;a=((h=h+Math.imul(b,Mt)|0)+(e>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,n=Math.imul(O,Y),e=(e=Math.imul(O,tt))+Math.imul(C,Y)|0,h=Math.imul(C,tt),n=n+Math.imul(T,rt)|0,e=(e=e+Math.imul(T,nt)|0)+Math.imul(z,rt)|0,h=h+Math.imul(z,nt)|0,n=n+Math.imul(L,ht)|0,e=(e=e+Math.imul(L,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,n=n+Math.imul(q,ut)|0,e=(e=e+Math.imul(q,at)|0)+Math.imul(R,ut)|0,h=h+Math.imul(R,at)|0,n=n+Math.imul(x,mt)|0,e=(e=e+Math.imul(x,ft)|0)+Math.imul(B,mt)|0,h=h+Math.imul(B,ft)|0;var qt=(a+(n=n+Math.imul(k,pt)|0)|0)+((8191&(e=(e=e+Math.imul(k,Mt)|0)+Math.imul(A,pt)|0))<<13)|0;a=((h=h+Math.imul(A,Mt)|0)+(e>>>13)|0)+(qt>>>26)|0,qt&=67108863,n=Math.imul(O,rt),e=(e=Math.imul(O,nt))+Math.imul(C,rt)|0,h=Math.imul(C,nt),n=n+Math.imul(T,ht)|0,e=(e=e+Math.imul(T,ot)|0)+Math.imul(z,ht)|0,h=h+Math.imul(z,ot)|0,n=n+Math.imul(L,ut)|0,e=(e=e+Math.imul(L,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,n=n+Math.imul(q,mt)|0,e=(e=e+Math.imul(q,ft)|0)+Math.imul(R,mt)|0,h=h+Math.imul(R,ft)|0;var Rt=(a+(n=n+Math.imul(x,pt)|0)|0)+((8191&(e=(e=e+Math.imul(x,Mt)|0)+Math.imul(B,pt)|0))<<13)|0;a=((h=h+Math.imul(B,Mt)|0)+(e>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,n=Math.imul(O,ht),e=(e=Math.imul(O,ot))+Math.imul(C,ht)|0,h=Math.imul(C,ot),n=n+Math.imul(T,ut)|0,e=(e=e+Math.imul(T,at)|0)+Math.imul(z,ut)|0,h=h+Math.imul(z,at)|0,n=n+Math.imul(L,mt)|0,e=(e=e+Math.imul(L,ft)|0)+Math.imul(E,mt)|0,h=h+Math.imul(E,ft)|0;var Nt=(a+(n=n+Math.imul(q,pt)|0)|0)+((8191&(e=(e=e+Math.imul(q,Mt)|0)+Math.imul(R,pt)|0))<<13)|0;a=((h=h+Math.imul(R,Mt)|0)+(e>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(O,ut),e=(e=Math.imul(O,at))+Math.imul(C,ut)|0,h=Math.imul(C,at),n=n+Math.imul(T,mt)|0,e=(e=e+Math.imul(T,ft)|0)+Math.imul(z,mt)|0,h=h+Math.imul(z,ft)|0;var Lt=(a+(n=n+Math.imul(L,pt)|0)|0)+((8191&(e=(e=e+Math.imul(L,Mt)|0)+Math.imul(E,pt)|0))<<13)|0;a=((h=h+Math.imul(E,Mt)|0)+(e>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(O,mt),e=(e=Math.imul(O,ft))+Math.imul(C,mt)|0,h=Math.imul(C,ft);var Et=(a+(n=n+Math.imul(T,pt)|0)|0)+((8191&(e=(e=e+Math.imul(T,Mt)|0)+Math.imul(z,pt)|0))<<13)|0;a=((h=h+Math.imul(z,Mt)|0)+(e>>>13)|0)+(Et>>>26)|0,Et&=67108863;var It=(a+(n=Math.imul(O,pt))|0)+((8191&(e=(e=Math.imul(O,Mt))+Math.imul(C,pt)|0))<<13)|0;return a=((h=Math.imul(C,Mt))+(e>>>13)|0)+(It>>>26)|0,It&=67108863,u[0]=vt,u[1]=gt,u[2]=ct,u[3]=wt,u[4]=yt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=At,u[9]=St,u[10]=xt,u[11]=Bt,u[12]=Zt,u[13]=qt,u[14]=Rt,u[15]=Nt,u[16]=Lt,u[17]=Et,u[18]=It,0!==a&&(u[19]=a,r.length++),r};function p(t,i,r){return(new M).mulp(t,i,r)}function M(t,i){this.x=t,this.y=i}Math.imul||(d=f),h.prototype.mulTo=function(t,i){var r=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,i):r<63?f(this,t,i):r<1024?function(t,i,r){r.negative=i.negative^t.negative,r.length=t.length+i.length;for(var n=0,e=0,h=0;h<r.length-1;h++){var o=e;e=0;for(var s=67108863&n,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,m=(0|t.words[l])*(0|i.words[a]),f=67108863&m;s=67108863&(f=f+s|0),e+=(o=(o=o+(m/67108864|0)|0)+(f>>>26)|0)>>>26,o&=67108863}r.words[h]=s,n=o,o=e}return 0!==n?r.words[h]=n:r.length--,r.strip()}(this,t,i):p(this,t,i)},M.prototype.makeRBT=function(t){for(var i=new Array(t),r=h.prototype._countBits(t)-1,n=0;n<t;n++)i[n]=this.revBin(n,r,t);return i},M.prototype.revBin=function(t,i,r){if(0===t||t===r-1)return t;for(var n=0,e=0;e<i;e++)n|=(1&t)<<i-e-1,t>>=1;return n},M.prototype.permute=function(t,i,r,n,e,h){for(var o=0;o<h;o++)n[o]=i[t[o]],e[o]=r[t[o]]},M.prototype.transform=function(t,i,r,n,e,h){this.permute(h,t,i,r,n,e);for(var o=1;o<e;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<e;l+=s)for(var m=u,f=a,d=0;d<o;d++){var p=r[l+d],M=n[l+d],v=r[l+d+o],g=n[l+d+o],c=m*v-f*g;g=m*g+f*v,v=c,r[l+d]=p+v,n[l+d]=M+g,r[l+d+o]=p-v,n[l+d+o]=M-g,d!==s&&(c=u*m-a*f,f=u*f+a*m,m=c)}},M.prototype.guessLen13b=function(t,i){var r=1|Math.max(i,t),n=1&r,e=0;for(r=r/2|0;r;r>>>=1)e++;return 1<<e+1+n},M.prototype.conjugate=function(t,i,r){if(!(r<=1))for(var n=0;n<r/2;n++){var e=t[n];t[n]=t[r-n-1],t[r-n-1]=e,e=i[n],i[n]=-i[r-n-1],i[r-n-1]=-e}},M.prototype.normalize13b=function(t,i){for(var r=0,n=0;n<i/2;n++){var e=8192*Math.round(t[2*n+1]/i)+Math.round(t[2*n]/i)+r;t[n]=67108863&e,r=e<67108864?0:e/67108864|0}return t},M.prototype.convert13b=function(t,i,r,e){for(var h=0,o=0;o<i;o++)h+=0|t[o],r[2*o]=8191&h,h>>>=13,r[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<e;++o)r[o]=0;n(0===h),n(0==(-8192&h))},M.prototype.stub=function(t){for(var i=new Array(t),r=0;r<t;r++)i[r]=0;return i},M.prototype.mulp=function(t,i,r){var n=2*this.guessLen13b(t.length,i.length),e=this.makeRBT(n),h=this.stub(n),o=new Array(n),s=new Array(n),u=new Array(n),a=new Array(n),l=new Array(n),m=new Array(n),f=r.words;f.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(i.words,i.length,a,n),this.transform(o,h,s,u,n,e),this.transform(a,h,l,m,n,e);for(var d=0;d<n;d++){var p=s[d]*l[d]-u[d]*m[d];u[d]=s[d]*m[d]+u[d]*l[d],s[d]=p}return this.conjugate(s,u,n),this.transform(s,u,f,h,n,e),this.conjugate(f,h,n),this.normalize13b(f,n),r.negative=t.negative^i.negative,r.length=t.length+i.length,r.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var i=0,r=0;r<this.length;r++){var e=(0|this.words[r])*t,h=(67108863&e)+(67108863&i);i>>=26,i+=e/67108864|0,i+=h>>>26,this.words[r]=67108863&h}return 0!==i&&(this.words[r]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),r=0;r<i.length;r++){var n=r/26|0,e=r%26;i[r]=(t.words[n]&1<<e)>>>e}return i}(t);if(0===i.length)return new h(1);for(var r=this,n=0;n<i.length&&0===i[n];n++,r=r.sqr());if(++n<i.length)for(var e=r.sqr();n<i.length;n++,e=e.sqr())0!==i[n]&&(r=r.mul(e));return r},h.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var i,r=t%26,e=(t-r)/26,h=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<r;this.words[i]=u|o,o=s>>>26-r}o&&(this.words[i]=o,this.length++)}if(0!==e){for(i=this.length-1;i>=0;i--)this.words[i+e]=this.words[i];for(i=0;i<e;i++)this.words[i]=0;this.length+=e}return this.strip()},h.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,r){var e;n("number"==typeof t&&t>=0),e=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=r;if(e-=o,e=Math.max(0,e),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=e);a--){var m=0|this.words[a];this.words[a]=l<<26-h|m>>>h,l=m&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,r){return n(0===this.negative),this.iushrn(t,i,r)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){n("number"==typeof t&&t>=0);var i=t%26,r=(t-i)/26,e=1<<i;return!(this.length<=r||!(this.words[r]&e))},h.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var i=t%26,r=(t-i)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==i&&r++,this.length=Math.min(r,this.length),0!==i){var e=67108863^67108863>>>i<<i;this.words[this.length-1]&=e}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,r){var e,h,o=t.length+r;this._expand(o);var s=0;for(e=0;e<t.length;e++){h=(0|this.words[e+r])+s;var u=(0|t.words[e])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[e+r]=67108863&h}for(;e<this.length-r;e++)s=(h=(0|this.words[e+r])+s)>>26,this.words[e+r]=67108863&h;if(0===s)return this.strip();for(n(-1===s),s=0,e=0;e<this.length;e++)s=(h=-(0|this.words[e])+s)>>26,this.words[e]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var r=(this.length,t.length),n=this.clone(),e=t,o=0|e.words[e.length-1];0!=(r=26-this._countBits(o))&&(e=e.ushln(r),n.iushln(r),o=0|e.words[e.length-1]);var s,u=n.length-e.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=n.clone()._ishlnsubmul(e,1,u);0===l.negative&&(n=l,s&&(s.words[u]=1));for(var m=u-1;m>=0;m--){var f=67108864*(0|n.words[e.length+m])+(0|n.words[e.length+m-1]);for(f=Math.min(f/o|0,67108863),n._ishlnsubmul(e,f,m);0!==n.negative;)f--,n.negative=0,n._ishlnsubmul(e,1,m),n.isZero()||(n.negative^=1);s&&(s.words[m]=f)}return s&&s.strip(),n.strip(),"div"!==i&&0!==r&&n.iushrn(r),{div:s||null,mod:n}},h.prototype.divmod=function(t,i,r){return n(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(e=s.div.neg()),"div"!==i&&(o=s.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:e,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(e=s.div.neg()),{div:e,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var e,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var r=0!==i.div.negative?i.mod.isub(t):i.mod,n=t.ushrn(1),e=t.andln(1),h=r.cmp(n);return h<0||1===e&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){n(t<=67108863);for(var i=(1<<26)%t,r=0,e=this.length-1;e>=0;e--)r=(i*r+(0|this.words[e]))%t;return r},h.prototype.idivn=function(t){n(t<=67108863);for(var i=0,r=this.length-1;r>=0;r--){var e=(0|this.words[r])+67108864*i;this.words[r]=e/t|0,i=e%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var i=this,r=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&r.isEven();)i.iushrn(1),r.iushrn(1),++a;for(var l=r.clone(),m=i.clone();!i.isZero();){for(var f=0,d=1;0==(i.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(i.iushrn(f);f-- >0;)(e.isOdd()||o.isOdd())&&(e.iadd(l),o.isub(m)),e.iushrn(1),o.iushrn(1);for(var p=0,M=1;0==(r.words[0]&M)&&p<26;++p,M<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(m)),s.iushrn(1),u.iushrn(1);i.cmp(r)>=0?(i.isub(r),e.isub(s),o.isub(u)):(r.isub(i),s.isub(e),u.isub(o))}return{a:s,b:u,gcd:r.iushln(a)}},h.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var i=this,r=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e,o=new h(1),s=new h(0),u=r.clone();i.cmpn(1)>0&&r.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var m=0,f=1;0==(r.words[0]&f)&&m<26;++m,f<<=1);if(m>0)for(r.iushrn(m);m-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(r)>=0?(i.isub(r),o.isub(s)):(r.isub(i),s.isub(o))}return(e=0===i.cmpn(1)?o:s).cmpn(0)<0&&e.iadd(t),e},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),r=t.clone();i.negative=0,r.negative=0;for(var n=0;i.isEven()&&r.isEven();n++)i.iushrn(1),r.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;r.isEven();)r.iushrn(1);var e=i.cmp(r);if(e<0){var h=i;i=r,r=h}else if(0===e||0===r.cmpn(1))break;i.isub(r)}return r.iushln(n)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){n("number"==typeof t);var i=t%26,r=(t-i)/26,e=1<<i;if(this.length<=r)return this._expand(r+1),this.words[r]|=e,this;for(var h=e,o=r;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)i=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var e=0|this.words[0];i=e===t?0:e<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],e=0|t.words[r];if(n!==e){n<e?i=-1:n>e&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new _(t)},h.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function c(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function y(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function _(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function k(t){_.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var i,r=t;do{this.split(r,this.tmp),i=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(i>this.n);var n=i<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},g.prototype.split=function(t,i){t.iushrn(this.n,0,i)},g.prototype.imulK=function(t){return t.imul(this.k)},e(c,g),c.prototype.split=function(t,i){for(var r=4194303,n=Math.min(t.length,9),e=0;e<n;e++)i.words[e]=t.words[e];if(i.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&r,e=10;e<t.length;e++){var o=0|t.words[e];t.words[e-10]=(o&r)<<4|h>>>22,h=o}h>>>=22,t.words[e-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},c.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,r=0;r<t.length;r++){var n=0|t.words[r];i+=977*n,t.words[r]=67108863&i,i=64*n+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},e(w,g),e(y,g),e(b,g),b.prototype.imulK=function(t){for(var i=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+i,e=67108863&n;n>>>=26,t.words[r]=e,i=n}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new c;else if("p224"===t)i=new w;else if("p192"===t)i=new y;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new b}return v[t]=i,i},_.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},_.prototype._verify2=function(t,i){n(0==(t.negative|i.negative),"red works only with positives"),n(t.red&&t.red===i.red,"red works only with red numbers")},_.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},_.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},_.prototype.add=function(t,i){this._verify2(t,i);var r=t.add(i);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},_.prototype.iadd=function(t,i){this._verify2(t,i);var r=t.iadd(i);return r.cmp(this.m)>=0&&r.isub(this.m),r},_.prototype.sub=function(t,i){this._verify2(t,i);var r=t.sub(i);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},_.prototype.isub=function(t,i){this._verify2(t,i);var r=t.isub(i);return r.cmpn(0)<0&&r.iadd(this.m),r},_.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},_.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},_.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},_.prototype.isqr=function(t){return this.imul(t,t.clone())},_.prototype.sqr=function(t){return this.mul(t,t)},_.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(n(i%2==1),3===i){var r=this.m.add(new h(1)).iushrn(2);return this.pow(t,r)}for(var e=this.m.subn(1),o=0;!e.isZero()&&0===e.andln(1);)o++,e.iushrn(1);n(!e.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var m=this.pow(l,e),f=this.pow(t,e.addn(1).iushrn(1)),d=this.pow(t,e),p=o;0!==d.cmp(s);){for(var M=d,v=0;0!==M.cmp(s);v++)M=M.redSqr();n(v<p);var g=this.pow(m,new h(1).iushln(p-v-1));f=f.redMul(g),m=g.redSqr(),d=d.redMul(m),p=v}return f},_.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},_.prototype.pow=function(t,i){if(i.isZero())return new h(1);if(0===i.cmpn(1))return t.clone();var r=new Array(16);r[0]=new h(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var e=r[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),n=i.length-1;n>=0;n--){for(var a=i.words[n],l=u-1;l>=0;l--){var m=a>>l&1;e!==r[0]&&(e=this.sqr(e)),0!==m||0!==o?(o<<=1,o|=m,(4==++s||0===n&&0===l)&&(e=this.mul(e,r[o]),s=0,o=0)):s=0}u=26}return e},_.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},_.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new k(t)},e(k,_),k.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},k.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},k.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=r.isub(n).iushrn(this.shift),h=e;return e.cmp(this.m)>=0?h=e.isub(this.m):e.cmpn(0)<0&&(h=e.iadd(this.m)),h._forceRed(this)},k.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var r=t.mul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=r.isub(n).iushrn(this.shift),o=e;return e.cmp(this.m)>=0?o=e.isub(this.m):e.cmpn(0)<0&&(o=e.iadd(this.m)),o._forceRed(this)},k.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},45033:function(t,i,r){!function(t,i){"use strict";function n(t,i){if(!t)throw new Error(i||"Assertion failed")}function e(t,i){t.super_=i;var r=function(){};r.prototype=i.prototype,t.prototype=new r,t.prototype.constructor=t}function h(t,i,r){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(r=i,i=10),this._init(t||0,i||10,r||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o=r(48764).Buffer}catch(t){}function s(t,i,r){for(var n=0,e=Math.min(t.length,r),h=i;h<e;h++){var o=t.charCodeAt(h)-48;n<<=4,n|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return n}function u(t,i,r,n){for(var e=0,h=Math.min(t.length,r),o=i;o<h;o++){var s=t.charCodeAt(o)-48;e*=n,e+=s>=49?s-49+10:s>=17?s-17+10:s}return e}h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,r){if("number"==typeof t)return this._initNumber(t,i,r);if("object"==typeof t)return this._initArray(t,i,r);"hex"===i&&(i=16),n(i===(0|i)&&i>=2&&i<=36);var e=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&e++,16===i?this._parseHex(t,e):this._parseBase(t,i,e),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),i,r)},h.prototype._initNumber=function(t,i,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),i,r)},h.prototype._initArray=function(t,i,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var e=0;e<this.length;e++)this.words[e]=0;var h,o,s=0;if("be"===r)for(e=t.length-1,h=0;e>=0;e-=3)o=t[e]|t[e-1]<<8|t[e-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===r)for(e=0,h=0;e<t.length;e+=3)o=t[e]|t[e+1]<<8|t[e+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this.strip()},h.prototype._parseHex=function(t,i){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,e,h=0;for(r=t.length-6,n=0;r>=i;r-=6)e=s(t,r,r+6),this.words[n]|=e<<h&67108863,this.words[n+1]|=e>>>26-h&4194303,(h+=24)>=26&&(h-=26,n++);r+6!==i&&(e=s(t,i,r+6),this.words[n]|=e<<h&67108863,this.words[n+1]|=e>>>26-h&4194303),this.strip()},h.prototype._parseBase=function(t,i,r){this.words=[0],this.length=1;for(var n=0,e=1;e<=67108863;e*=i)n++;n--,e=e/i|0;for(var h=t.length-r,o=h%n,s=Math.min(h,h-o)+r,a=0,l=r;l<s;l+=n)a=u(t,l,l+n,i),this.imuln(e),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);if(0!==o){var m=1;for(a=u(t,l,t.length,i),l=0;l<o;l++)m*=i;this.imuln(m),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a)}},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},h.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var a=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],m=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,i,r){r.negative=i.negative^t.negative;var n=t.length+i.length|0;r.length=n,n=n-1|0;var e=0|t.words[0],h=0|i.words[0],o=e*h,s=67108863&o,u=o/67108864|0;r.words[0]=s;for(var a=1;a<n;a++){for(var l=u>>>26,m=67108863&u,f=Math.min(a,i.length-1),d=Math.max(0,a-t.length+1);d<=f;d++){var p=a-d|0;l+=(o=(e=0|t.words[p])*(h=0|i.words[d])+m)/67108864|0,m=67108863&o}r.words[a]=0|m,u=0|l}return 0!==u?r.words[a]=0|u:r.length--,r.strip()}h.prototype.toString=function(t,i){var r;if(i=0|i||1,16===(t=t||10)||"hex"===t){r="";for(var e=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<e|h)).toString(16);r=0!=(h=s>>>24-e&16777215)||o!==this.length-1?a[6-u.length]+u+r:u+r,(e+=2)>=26&&(e-=26,o--)}for(0!==h&&(r=h.toString(16)+r);r.length%i!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var f=l[t],d=m[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var M=p.modn(d).toString(t);r=(p=p.idivn(d)).isZero()?M+r:a[f-M.length]+M+r}for(this.isZero()&&(r="0"+r);r.length%i!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16)},h.prototype.toBuffer=function(t,i){return n(void 0!==o),this.toArrayLike(o,t,i)},h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,r){var e=this.byteLength(),h=r||Math.max(1,e);n(e<=h,"byte array longer than desired length"),n(h>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===i,a=new t(h),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[s]=o;for(;s<h;s++)a[s]=0}else{for(s=0;s<h-e;s++)a[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),a[h-s-1]=o}return a},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,r=0;return i>=4096&&(r+=13,i>>>=13),i>=64&&(r+=7,i>>>=7),i>=8&&(r+=4,i>>>=4),i>=2&&(r+=2,i>>>=2),r+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,r=0;return 0==(8191&i)&&(r+=13,i>>>=13),0==(127&i)&&(r+=7,i>>>=7),0==(15&i)&&(r+=4,i>>>=4),0==(3&i)&&(r+=2,i>>>=2),0==(1&i)&&r++,r},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var r=this._zeroBits(this.words[i]);if(t+=r,26!==r)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},h.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var r=0;r<i.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=i.length,this.strip()},h.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,r;this.length>t.length?(i=this,r=t):(i=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=i.words[n]^r.words[n];if(this!==i)for(;n<i.length;n++)this.words[n]=i.words[n];return this.length=i.length,this.strip()},h.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),r=t%26;this._expand(i),r>0&&i--;for(var e=0;e<i;e++)this.words[e]=67108863&~this.words[e];return r>0&&(this.words[e]=~this.words[e]&67108863>>26-r),this.strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){n("number"==typeof t&&t>=0);var r=t/26|0,e=t%26;return this._expand(r+1),this.words[r]=i?this.words[r]|1<<e:this.words[r]&~(1<<e),this.strip()},h.prototype.iadd=function(t){var i,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var e=0,h=0;h<n.length;h++)i=(0|r.words[h])+(0|n.words[h])+e,this.words[h]=67108863&i,e=i>>>26;for(;0!==e&&h<r.length;h++)i=(0|r.words[h])+e,this.words[h]=67108863&i,e=i>>>26;if(this.length=r.length,0!==e)this.words[this.length]=e,this.length++;else if(r!==this)for(;h<r.length;h++)this.words[h]=r.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,e=this.cmp(t);if(0===e)return this.negative=0,this.length=1,this.words[0]=0,this;e>0?(r=this,n=t):(r=t,n=this);for(var h=0,o=0;o<n.length;o++)h=(i=(0|r.words[o])-(0|n.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<r.length;o++)h=(i=(0|r.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,i,r){var n,e,h,o=t.words,s=i.words,u=r.words,a=0,l=0|o[0],m=8191&l,f=l>>>13,d=0|o[1],p=8191&d,M=d>>>13,v=0|o[2],g=8191&v,c=v>>>13,w=0|o[3],y=8191&w,b=w>>>13,_=0|o[4],k=8191&_,A=_>>>13,S=0|o[5],x=8191&S,B=S>>>13,Z=0|o[6],q=8191&Z,R=Z>>>13,N=0|o[7],L=8191&N,E=N>>>13,I=0|o[8],T=8191&I,z=I>>>13,j=0|o[9],O=8191&j,C=j>>>13,F=0|s[0],P=8191&F,K=F>>>13,$=0|s[1],U=8191&$,D=$>>>13,H=0|s[2],J=8191&H,V=H>>>13,W=0|s[3],G=8191&W,Q=W>>>13,X=0|s[4],Y=8191&X,tt=X>>>13,it=0|s[5],rt=8191&it,nt=it>>>13,et=0|s[6],ht=8191&et,ot=et>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],mt=8191&lt,ft=lt>>>13,dt=0|s[9],pt=8191&dt,Mt=dt>>>13;r.negative=t.negative^i.negative,r.length=19;var vt=(a+(n=Math.imul(m,P))|0)+((8191&(e=(e=Math.imul(m,K))+Math.imul(f,P)|0))<<13)|0;a=((h=Math.imul(f,K))+(e>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(p,P),e=(e=Math.imul(p,K))+Math.imul(M,P)|0,h=Math.imul(M,K);var gt=(a+(n=n+Math.imul(m,U)|0)|0)+((8191&(e=(e=e+Math.imul(m,D)|0)+Math.imul(f,U)|0))<<13)|0;a=((h=h+Math.imul(f,D)|0)+(e>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(g,P),e=(e=Math.imul(g,K))+Math.imul(c,P)|0,h=Math.imul(c,K),n=n+Math.imul(p,U)|0,e=(e=e+Math.imul(p,D)|0)+Math.imul(M,U)|0,h=h+Math.imul(M,D)|0;var ct=(a+(n=n+Math.imul(m,J)|0)|0)+((8191&(e=(e=e+Math.imul(m,V)|0)+Math.imul(f,J)|0))<<13)|0;a=((h=h+Math.imul(f,V)|0)+(e>>>13)|0)+(ct>>>26)|0,ct&=67108863,n=Math.imul(y,P),e=(e=Math.imul(y,K))+Math.imul(b,P)|0,h=Math.imul(b,K),n=n+Math.imul(g,U)|0,e=(e=e+Math.imul(g,D)|0)+Math.imul(c,U)|0,h=h+Math.imul(c,D)|0,n=n+Math.imul(p,J)|0,e=(e=e+Math.imul(p,V)|0)+Math.imul(M,J)|0,h=h+Math.imul(M,V)|0;var wt=(a+(n=n+Math.imul(m,G)|0)|0)+((8191&(e=(e=e+Math.imul(m,Q)|0)+Math.imul(f,G)|0))<<13)|0;a=((h=h+Math.imul(f,Q)|0)+(e>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(k,P),e=(e=Math.imul(k,K))+Math.imul(A,P)|0,h=Math.imul(A,K),n=n+Math.imul(y,U)|0,e=(e=e+Math.imul(y,D)|0)+Math.imul(b,U)|0,h=h+Math.imul(b,D)|0,n=n+Math.imul(g,J)|0,e=(e=e+Math.imul(g,V)|0)+Math.imul(c,J)|0,h=h+Math.imul(c,V)|0,n=n+Math.imul(p,G)|0,e=(e=e+Math.imul(p,Q)|0)+Math.imul(M,G)|0,h=h+Math.imul(M,Q)|0;var yt=(a+(n=n+Math.imul(m,Y)|0)|0)+((8191&(e=(e=e+Math.imul(m,tt)|0)+Math.imul(f,Y)|0))<<13)|0;a=((h=h+Math.imul(f,tt)|0)+(e>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(x,P),e=(e=Math.imul(x,K))+Math.imul(B,P)|0,h=Math.imul(B,K),n=n+Math.imul(k,U)|0,e=(e=e+Math.imul(k,D)|0)+Math.imul(A,U)|0,h=h+Math.imul(A,D)|0,n=n+Math.imul(y,J)|0,e=(e=e+Math.imul(y,V)|0)+Math.imul(b,J)|0,h=h+Math.imul(b,V)|0,n=n+Math.imul(g,G)|0,e=(e=e+Math.imul(g,Q)|0)+Math.imul(c,G)|0,h=h+Math.imul(c,Q)|0,n=n+Math.imul(p,Y)|0,e=(e=e+Math.imul(p,tt)|0)+Math.imul(M,Y)|0,h=h+Math.imul(M,tt)|0;var bt=(a+(n=n+Math.imul(m,rt)|0)|0)+((8191&(e=(e=e+Math.imul(m,nt)|0)+Math.imul(f,rt)|0))<<13)|0;a=((h=h+Math.imul(f,nt)|0)+(e>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(q,P),e=(e=Math.imul(q,K))+Math.imul(R,P)|0,h=Math.imul(R,K),n=n+Math.imul(x,U)|0,e=(e=e+Math.imul(x,D)|0)+Math.imul(B,U)|0,h=h+Math.imul(B,D)|0,n=n+Math.imul(k,J)|0,e=(e=e+Math.imul(k,V)|0)+Math.imul(A,J)|0,h=h+Math.imul(A,V)|0,n=n+Math.imul(y,G)|0,e=(e=e+Math.imul(y,Q)|0)+Math.imul(b,G)|0,h=h+Math.imul(b,Q)|0,n=n+Math.imul(g,Y)|0,e=(e=e+Math.imul(g,tt)|0)+Math.imul(c,Y)|0,h=h+Math.imul(c,tt)|0,n=n+Math.imul(p,rt)|0,e=(e=e+Math.imul(p,nt)|0)+Math.imul(M,rt)|0,h=h+Math.imul(M,nt)|0;var _t=(a+(n=n+Math.imul(m,ht)|0)|0)+((8191&(e=(e=e+Math.imul(m,ot)|0)+Math.imul(f,ht)|0))<<13)|0;a=((h=h+Math.imul(f,ot)|0)+(e>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(L,P),e=(e=Math.imul(L,K))+Math.imul(E,P)|0,h=Math.imul(E,K),n=n+Math.imul(q,U)|0,e=(e=e+Math.imul(q,D)|0)+Math.imul(R,U)|0,h=h+Math.imul(R,D)|0,n=n+Math.imul(x,J)|0,e=(e=e+Math.imul(x,V)|0)+Math.imul(B,J)|0,h=h+Math.imul(B,V)|0,n=n+Math.imul(k,G)|0,e=(e=e+Math.imul(k,Q)|0)+Math.imul(A,G)|0,h=h+Math.imul(A,Q)|0,n=n+Math.imul(y,Y)|0,e=(e=e+Math.imul(y,tt)|0)+Math.imul(b,Y)|0,h=h+Math.imul(b,tt)|0,n=n+Math.imul(g,rt)|0,e=(e=e+Math.imul(g,nt)|0)+Math.imul(c,rt)|0,h=h+Math.imul(c,nt)|0,n=n+Math.imul(p,ht)|0,e=(e=e+Math.imul(p,ot)|0)+Math.imul(M,ht)|0,h=h+Math.imul(M,ot)|0;var kt=(a+(n=n+Math.imul(m,ut)|0)|0)+((8191&(e=(e=e+Math.imul(m,at)|0)+Math.imul(f,ut)|0))<<13)|0;a=((h=h+Math.imul(f,at)|0)+(e>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(T,P),e=(e=Math.imul(T,K))+Math.imul(z,P)|0,h=Math.imul(z,K),n=n+Math.imul(L,U)|0,e=(e=e+Math.imul(L,D)|0)+Math.imul(E,U)|0,h=h+Math.imul(E,D)|0,n=n+Math.imul(q,J)|0,e=(e=e+Math.imul(q,V)|0)+Math.imul(R,J)|0,h=h+Math.imul(R,V)|0,n=n+Math.imul(x,G)|0,e=(e=e+Math.imul(x,Q)|0)+Math.imul(B,G)|0,h=h+Math.imul(B,Q)|0,n=n+Math.imul(k,Y)|0,e=(e=e+Math.imul(k,tt)|0)+Math.imul(A,Y)|0,h=h+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,e=(e=e+Math.imul(y,nt)|0)+Math.imul(b,rt)|0,h=h+Math.imul(b,nt)|0,n=n+Math.imul(g,ht)|0,e=(e=e+Math.imul(g,ot)|0)+Math.imul(c,ht)|0,h=h+Math.imul(c,ot)|0,n=n+Math.imul(p,ut)|0,e=(e=e+Math.imul(p,at)|0)+Math.imul(M,ut)|0,h=h+Math.imul(M,at)|0;var At=(a+(n=n+Math.imul(m,mt)|0)|0)+((8191&(e=(e=e+Math.imul(m,ft)|0)+Math.imul(f,mt)|0))<<13)|0;a=((h=h+Math.imul(f,ft)|0)+(e>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(O,P),e=(e=Math.imul(O,K))+Math.imul(C,P)|0,h=Math.imul(C,K),n=n+Math.imul(T,U)|0,e=(e=e+Math.imul(T,D)|0)+Math.imul(z,U)|0,h=h+Math.imul(z,D)|0,n=n+Math.imul(L,J)|0,e=(e=e+Math.imul(L,V)|0)+Math.imul(E,J)|0,h=h+Math.imul(E,V)|0,n=n+Math.imul(q,G)|0,e=(e=e+Math.imul(q,Q)|0)+Math.imul(R,G)|0,h=h+Math.imul(R,Q)|0,n=n+Math.imul(x,Y)|0,e=(e=e+Math.imul(x,tt)|0)+Math.imul(B,Y)|0,h=h+Math.imul(B,tt)|0,n=n+Math.imul(k,rt)|0,e=(e=e+Math.imul(k,nt)|0)+Math.imul(A,rt)|0,h=h+Math.imul(A,nt)|0,n=n+Math.imul(y,ht)|0,e=(e=e+Math.imul(y,ot)|0)+Math.imul(b,ht)|0,h=h+Math.imul(b,ot)|0,n=n+Math.imul(g,ut)|0,e=(e=e+Math.imul(g,at)|0)+Math.imul(c,ut)|0,h=h+Math.imul(c,at)|0,n=n+Math.imul(p,mt)|0,e=(e=e+Math.imul(p,ft)|0)+Math.imul(M,mt)|0,h=h+Math.imul(M,ft)|0;var St=(a+(n=n+Math.imul(m,pt)|0)|0)+((8191&(e=(e=e+Math.imul(m,Mt)|0)+Math.imul(f,pt)|0))<<13)|0;a=((h=h+Math.imul(f,Mt)|0)+(e>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(O,U),e=(e=Math.imul(O,D))+Math.imul(C,U)|0,h=Math.imul(C,D),n=n+Math.imul(T,J)|0,e=(e=e+Math.imul(T,V)|0)+Math.imul(z,J)|0,h=h+Math.imul(z,V)|0,n=n+Math.imul(L,G)|0,e=(e=e+Math.imul(L,Q)|0)+Math.imul(E,G)|0,h=h+Math.imul(E,Q)|0,n=n+Math.imul(q,Y)|0,e=(e=e+Math.imul(q,tt)|0)+Math.imul(R,Y)|0,h=h+Math.imul(R,tt)|0,n=n+Math.imul(x,rt)|0,e=(e=e+Math.imul(x,nt)|0)+Math.imul(B,rt)|0,h=h+Math.imul(B,nt)|0,n=n+Math.imul(k,ht)|0,e=(e=e+Math.imul(k,ot)|0)+Math.imul(A,ht)|0,h=h+Math.imul(A,ot)|0,n=n+Math.imul(y,ut)|0,e=(e=e+Math.imul(y,at)|0)+Math.imul(b,ut)|0,h=h+Math.imul(b,at)|0,n=n+Math.imul(g,mt)|0,e=(e=e+Math.imul(g,ft)|0)+Math.imul(c,mt)|0,h=h+Math.imul(c,ft)|0;var xt=(a+(n=n+Math.imul(p,pt)|0)|0)+((8191&(e=(e=e+Math.imul(p,Mt)|0)+Math.imul(M,pt)|0))<<13)|0;a=((h=h+Math.imul(M,Mt)|0)+(e>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(O,J),e=(e=Math.imul(O,V))+Math.imul(C,J)|0,h=Math.imul(C,V),n=n+Math.imul(T,G)|0,e=(e=e+Math.imul(T,Q)|0)+Math.imul(z,G)|0,h=h+Math.imul(z,Q)|0,n=n+Math.imul(L,Y)|0,e=(e=e+Math.imul(L,tt)|0)+Math.imul(E,Y)|0,h=h+Math.imul(E,tt)|0,n=n+Math.imul(q,rt)|0,e=(e=e+Math.imul(q,nt)|0)+Math.imul(R,rt)|0,h=h+Math.imul(R,nt)|0,n=n+Math.imul(x,ht)|0,e=(e=e+Math.imul(x,ot)|0)+Math.imul(B,ht)|0,h=h+Math.imul(B,ot)|0,n=n+Math.imul(k,ut)|0,e=(e=e+Math.imul(k,at)|0)+Math.imul(A,ut)|0,h=h+Math.imul(A,at)|0,n=n+Math.imul(y,mt)|0,e=(e=e+Math.imul(y,ft)|0)+Math.imul(b,mt)|0,h=h+Math.imul(b,ft)|0;var Bt=(a+(n=n+Math.imul(g,pt)|0)|0)+((8191&(e=(e=e+Math.imul(g,Mt)|0)+Math.imul(c,pt)|0))<<13)|0;a=((h=h+Math.imul(c,Mt)|0)+(e>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(O,G),e=(e=Math.imul(O,Q))+Math.imul(C,G)|0,h=Math.imul(C,Q),n=n+Math.imul(T,Y)|0,e=(e=e+Math.imul(T,tt)|0)+Math.imul(z,Y)|0,h=h+Math.imul(z,tt)|0,n=n+Math.imul(L,rt)|0,e=(e=e+Math.imul(L,nt)|0)+Math.imul(E,rt)|0,h=h+Math.imul(E,nt)|0,n=n+Math.imul(q,ht)|0,e=(e=e+Math.imul(q,ot)|0)+Math.imul(R,ht)|0,h=h+Math.imul(R,ot)|0,n=n+Math.imul(x,ut)|0,e=(e=e+Math.imul(x,at)|0)+Math.imul(B,ut)|0,h=h+Math.imul(B,at)|0,n=n+Math.imul(k,mt)|0,e=(e=e+Math.imul(k,ft)|0)+Math.imul(A,mt)|0,h=h+Math.imul(A,ft)|0;var Zt=(a+(n=n+Math.imul(y,pt)|0)|0)+((8191&(e=(e=e+Math.imul(y,Mt)|0)+Math.imul(b,pt)|0))<<13)|0;a=((h=h+Math.imul(b,Mt)|0)+(e>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,n=Math.imul(O,Y),e=(e=Math.imul(O,tt))+Math.imul(C,Y)|0,h=Math.imul(C,tt),n=n+Math.imul(T,rt)|0,e=(e=e+Math.imul(T,nt)|0)+Math.imul(z,rt)|0,h=h+Math.imul(z,nt)|0,n=n+Math.imul(L,ht)|0,e=(e=e+Math.imul(L,ot)|0)+Math.imul(E,ht)|0,h=h+Math.imul(E,ot)|0,n=n+Math.imul(q,ut)|0,e=(e=e+Math.imul(q,at)|0)+Math.imul(R,ut)|0,h=h+Math.imul(R,at)|0,n=n+Math.imul(x,mt)|0,e=(e=e+Math.imul(x,ft)|0)+Math.imul(B,mt)|0,h=h+Math.imul(B,ft)|0;var qt=(a+(n=n+Math.imul(k,pt)|0)|0)+((8191&(e=(e=e+Math.imul(k,Mt)|0)+Math.imul(A,pt)|0))<<13)|0;a=((h=h+Math.imul(A,Mt)|0)+(e>>>13)|0)+(qt>>>26)|0,qt&=67108863,n=Math.imul(O,rt),e=(e=Math.imul(O,nt))+Math.imul(C,rt)|0,h=Math.imul(C,nt),n=n+Math.imul(T,ht)|0,e=(e=e+Math.imul(T,ot)|0)+Math.imul(z,ht)|0,h=h+Math.imul(z,ot)|0,n=n+Math.imul(L,ut)|0,e=(e=e+Math.imul(L,at)|0)+Math.imul(E,ut)|0,h=h+Math.imul(E,at)|0,n=n+Math.imul(q,mt)|0,e=(e=e+Math.imul(q,ft)|0)+Math.imul(R,mt)|0,h=h+Math.imul(R,ft)|0;var Rt=(a+(n=n+Math.imul(x,pt)|0)|0)+((8191&(e=(e=e+Math.imul(x,Mt)|0)+Math.imul(B,pt)|0))<<13)|0;a=((h=h+Math.imul(B,Mt)|0)+(e>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,n=Math.imul(O,ht),e=(e=Math.imul(O,ot))+Math.imul(C,ht)|0,h=Math.imul(C,ot),n=n+Math.imul(T,ut)|0,e=(e=e+Math.imul(T,at)|0)+Math.imul(z,ut)|0,h=h+Math.imul(z,at)|0,n=n+Math.imul(L,mt)|0,e=(e=e+Math.imul(L,ft)|0)+Math.imul(E,mt)|0,h=h+Math.imul(E,ft)|0;var Nt=(a+(n=n+Math.imul(q,pt)|0)|0)+((8191&(e=(e=e+Math.imul(q,Mt)|0)+Math.imul(R,pt)|0))<<13)|0;a=((h=h+Math.imul(R,Mt)|0)+(e>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(O,ut),e=(e=Math.imul(O,at))+Math.imul(C,ut)|0,h=Math.imul(C,at),n=n+Math.imul(T,mt)|0,e=(e=e+Math.imul(T,ft)|0)+Math.imul(z,mt)|0,h=h+Math.imul(z,ft)|0;var Lt=(a+(n=n+Math.imul(L,pt)|0)|0)+((8191&(e=(e=e+Math.imul(L,Mt)|0)+Math.imul(E,pt)|0))<<13)|0;a=((h=h+Math.imul(E,Mt)|0)+(e>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(O,mt),e=(e=Math.imul(O,ft))+Math.imul(C,mt)|0,h=Math.imul(C,ft);var Et=(a+(n=n+Math.imul(T,pt)|0)|0)+((8191&(e=(e=e+Math.imul(T,Mt)|0)+Math.imul(z,pt)|0))<<13)|0;a=((h=h+Math.imul(z,Mt)|0)+(e>>>13)|0)+(Et>>>26)|0,Et&=67108863;var It=(a+(n=Math.imul(O,pt))|0)+((8191&(e=(e=Math.imul(O,Mt))+Math.imul(C,pt)|0))<<13)|0;return a=((h=Math.imul(C,Mt))+(e>>>13)|0)+(It>>>26)|0,It&=67108863,u[0]=vt,u[1]=gt,u[2]=ct,u[3]=wt,u[4]=yt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=At,u[9]=St,u[10]=xt,u[11]=Bt,u[12]=Zt,u[13]=qt,u[14]=Rt,u[15]=Nt,u[16]=Lt,u[17]=Et,u[18]=It,0!==a&&(u[19]=a,r.length++),r};function p(t,i,r){return(new M).mulp(t,i,r)}function M(t,i){this.x=t,this.y=i}Math.imul||(d=f),h.prototype.mulTo=function(t,i){var r=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,i):r<63?f(this,t,i):r<1024?function(t,i,r){r.negative=i.negative^t.negative,r.length=t.length+i.length;for(var n=0,e=0,h=0;h<r.length-1;h++){var o=e;e=0;for(var s=67108863&n,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,m=(0|t.words[l])*(0|i.words[a]),f=67108863&m;s=67108863&(f=f+s|0),e+=(o=(o=o+(m/67108864|0)|0)+(f>>>26)|0)>>>26,o&=67108863}r.words[h]=s,n=o,o=e}return 0!==n?r.words[h]=n:r.length--,r.strip()}(this,t,i):p(this,t,i)},M.prototype.makeRBT=function(t){for(var i=new Array(t),r=h.prototype._countBits(t)-1,n=0;n<t;n++)i[n]=this.revBin(n,r,t);return i},M.prototype.revBin=function(t,i,r){if(0===t||t===r-1)return t;for(var n=0,e=0;e<i;e++)n|=(1&t)<<i-e-1,t>>=1;return n},M.prototype.permute=function(t,i,r,n,e,h){for(var o=0;o<h;o++)n[o]=i[t[o]],e[o]=r[t[o]]},M.prototype.transform=function(t,i,r,n,e,h){this.permute(h,t,i,r,n,e);for(var o=1;o<e;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<e;l+=s)for(var m=u,f=a,d=0;d<o;d++){var p=r[l+d],M=n[l+d],v=r[l+d+o],g=n[l+d+o],c=m*v-f*g;g=m*g+f*v,v=c,r[l+d]=p+v,n[l+d]=M+g,r[l+d+o]=p-v,n[l+d+o]=M-g,d!==s&&(c=u*m-a*f,f=u*f+a*m,m=c)}},M.prototype.guessLen13b=function(t,i){var r=1|Math.max(i,t),n=1&r,e=0;for(r=r/2|0;r;r>>>=1)e++;return 1<<e+1+n},M.prototype.conjugate=function(t,i,r){if(!(r<=1))for(var n=0;n<r/2;n++){var e=t[n];t[n]=t[r-n-1],t[r-n-1]=e,e=i[n],i[n]=-i[r-n-1],i[r-n-1]=-e}},M.prototype.normalize13b=function(t,i){for(var r=0,n=0;n<i/2;n++){var e=8192*Math.round(t[2*n+1]/i)+Math.round(t[2*n]/i)+r;t[n]=67108863&e,r=e<67108864?0:e/67108864|0}return t},M.prototype.convert13b=function(t,i,r,e){for(var h=0,o=0;o<i;o++)h+=0|t[o],r[2*o]=8191&h,h>>>=13,r[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<e;++o)r[o]=0;n(0===h),n(0==(-8192&h))},M.prototype.stub=function(t){for(var i=new Array(t),r=0;r<t;r++)i[r]=0;return i},M.prototype.mulp=function(t,i,r){var n=2*this.guessLen13b(t.length,i.length),e=this.makeRBT(n),h=this.stub(n),o=new Array(n),s=new Array(n),u=new Array(n),a=new Array(n),l=new Array(n),m=new Array(n),f=r.words;f.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(i.words,i.length,a,n),this.transform(o,h,s,u,n,e),this.transform(a,h,l,m,n,e);for(var d=0;d<n;d++){var p=s[d]*l[d]-u[d]*m[d];u[d]=s[d]*m[d]+u[d]*l[d],s[d]=p}return this.conjugate(s,u,n),this.transform(s,u,f,h,n,e),this.conjugate(f,h,n),this.normalize13b(f,n),r.negative=t.negative^i.negative,r.length=t.length+i.length,r.strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),p(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var i=0,r=0;r<this.length;r++){var e=(0|this.words[r])*t,h=(67108863&e)+(67108863&i);i>>=26,i+=e/67108864|0,i+=h>>>26,this.words[r]=67108863&h}return 0!==i&&(this.words[r]=i,this.length++),this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),r=0;r<i.length;r++){var n=r/26|0,e=r%26;i[r]=(t.words[n]&1<<e)>>>e}return i}(t);if(0===i.length)return new h(1);for(var r=this,n=0;n<i.length&&0===i[n];n++,r=r.sqr());if(++n<i.length)for(var e=r.sqr();n<i.length;n++,e=e.sqr())0!==i[n]&&(r=r.mul(e));return r},h.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var i,r=t%26,e=(t-r)/26,h=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<r;this.words[i]=u|o,o=s>>>26-r}o&&(this.words[i]=o,this.length++)}if(0!==e){for(i=this.length-1;i>=0;i--)this.words[i+e]=this.words[i];for(i=0;i<e;i++)this.words[i]=0;this.length+=e}return this.strip()},h.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,r){var e;n("number"==typeof t&&t>=0),e=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=r;if(e-=o,e=Math.max(0,e),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=e);a--){var m=0|this.words[a];this.words[a]=l<<26-h|m>>>h,l=m&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},h.prototype.ishrn=function(t,i,r){return n(0===this.negative),this.iushrn(t,i,r)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){n("number"==typeof t&&t>=0);var i=t%26,r=(t-i)/26,e=1<<i;return!(this.length<=r||!(this.words[r]&e))},h.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var i=t%26,r=(t-i)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==i&&r++,this.length=Math.min(r,this.length),0!==i){var e=67108863^67108863>>>i<<i;this.words[this.length-1]&=e}return this.strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,r){var e,h,o=t.length+r;this._expand(o);var s=0;for(e=0;e<t.length;e++){h=(0|this.words[e+r])+s;var u=(0|t.words[e])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[e+r]=67108863&h}for(;e<this.length-r;e++)s=(h=(0|this.words[e+r])+s)>>26,this.words[e+r]=67108863&h;if(0===s)return this.strip();for(n(-1===s),s=0,e=0;e<this.length;e++)s=(h=-(0|this.words[e])+s)>>26,this.words[e]=67108863&h;return this.negative=1,this.strip()},h.prototype._wordDiv=function(t,i){var r=(this.length,t.length),n=this.clone(),e=t,o=0|e.words[e.length-1];0!=(r=26-this._countBits(o))&&(e=e.ushln(r),n.iushln(r),o=0|e.words[e.length-1]);var s,u=n.length-e.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=n.clone()._ishlnsubmul(e,1,u);0===l.negative&&(n=l,s&&(s.words[u]=1));for(var m=u-1;m>=0;m--){var f=67108864*(0|n.words[e.length+m])+(0|n.words[e.length+m-1]);for(f=Math.min(f/o|0,67108863),n._ishlnsubmul(e,f,m);0!==n.negative;)f--,n.negative=0,n._ishlnsubmul(e,1,m),n.isZero()||(n.negative^=1);s&&(s.words[m]=f)}return s&&s.strip(),n.strip(),"div"!==i&&0!==r&&n.iushrn(r),{div:s||null,mod:n}},h.prototype.divmod=function(t,i,r){return n(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(e=s.div.neg()),"div"!==i&&(o=s.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:e,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(e=s.div.neg()),{div:e,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modn(t.words[0]))}:this._wordDiv(t,i);var e,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var r=0!==i.div.negative?i.mod.isub(t):i.mod,n=t.ushrn(1),e=t.andln(1),h=r.cmp(n);return h<0||1===e&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modn=function(t){n(t<=67108863);for(var i=(1<<26)%t,r=0,e=this.length-1;e>=0;e--)r=(i*r+(0|this.words[e]))%t;return r},h.prototype.idivn=function(t){n(t<=67108863);for(var i=0,r=this.length-1;r>=0;r--){var e=(0|this.words[r])+67108864*i;this.words[r]=e/t|0,i=e%t}return this.strip()},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var i=this,r=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&r.isEven();)i.iushrn(1),r.iushrn(1),++a;for(var l=r.clone(),m=i.clone();!i.isZero();){for(var f=0,d=1;0==(i.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(i.iushrn(f);f-- >0;)(e.isOdd()||o.isOdd())&&(e.iadd(l),o.isub(m)),e.iushrn(1),o.iushrn(1);for(var p=0,M=1;0==(r.words[0]&M)&&p<26;++p,M<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(m)),s.iushrn(1),u.iushrn(1);i.cmp(r)>=0?(i.isub(r),e.isub(s),o.isub(u)):(r.isub(i),s.isub(e),u.isub(o))}return{a:s,b:u,gcd:r.iushln(a)}},h.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var i=this,r=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e,o=new h(1),s=new h(0),u=r.clone();i.cmpn(1)>0&&r.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var m=0,f=1;0==(r.words[0]&f)&&m<26;++m,f<<=1);if(m>0)for(r.iushrn(m);m-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(r)>=0?(i.isub(r),o.isub(s)):(r.isub(i),s.isub(o))}return(e=0===i.cmpn(1)?o:s).cmpn(0)<0&&e.iadd(t),e},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),r=t.clone();i.negative=0,r.negative=0;for(var n=0;i.isEven()&&r.isEven();n++)i.iushrn(1),r.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;r.isEven();)r.iushrn(1);var e=i.cmp(r);if(e<0){var h=i;i=r,r=h}else if(0===e||0===r.cmpn(1))break;i.isub(r)}return r.iushln(n)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){n("number"==typeof t);var i=t%26,r=(t-i)/26,e=1<<i;if(this.length<=r)return this._expand(r+1),this.words[r]|=e,this;for(var h=e,o=r;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)i=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var e=0|this.words[0];i=e===t?0:e<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],e=0|t.words[r];if(n!==e){n<e?i=-1:n>e&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new _(t)},h.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function c(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function y(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function _(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function k(t){_.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var i,r=t;do{this.split(r,this.tmp),i=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(i>this.n);var n=i<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},g.prototype.split=function(t,i){t.iushrn(this.n,0,i)},g.prototype.imulK=function(t){return t.imul(this.k)},e(c,g),c.prototype.split=function(t,i){for(var r=4194303,n=Math.min(t.length,9),e=0;e<n;e++)i.words[e]=t.words[e];if(i.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&r,e=10;e<t.length;e++){var o=0|t.words[e];t.words[e-10]=(o&r)<<4|h>>>22,h=o}h>>>=22,t.words[e-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},c.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,r=0;r<t.length;r++){var n=0|t.words[r];i+=977*n,t.words[r]=67108863&i,i=64*n+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},e(w,g),e(y,g),e(b,g),b.prototype.imulK=function(t){for(var i=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+i,e=67108863&n;n>>>=26,t.words[r]=e,i=n}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new c;else if("p224"===t)i=new w;else if("p192"===t)i=new y;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new b}return v[t]=i,i},_.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},_.prototype._verify2=function(t,i){n(0==(t.negative|i.negative),"red works only with positives"),n(t.red&&t.red===i.red,"red works only with red numbers")},_.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},_.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},_.prototype.add=function(t,i){this._verify2(t,i);var r=t.add(i);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},_.prototype.iadd=function(t,i){this._verify2(t,i);var r=t.iadd(i);return r.cmp(this.m)>=0&&r.isub(this.m),r},_.prototype.sub=function(t,i){this._verify2(t,i);var r=t.sub(i);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},_.prototype.isub=function(t,i){this._verify2(t,i);var r=t.isub(i);return r.cmpn(0)<0&&r.iadd(this.m),r},_.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},_.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},_.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},_.prototype.isqr=function(t){return this.imul(t,t.clone())},_.prototype.sqr=function(t){return this.mul(t,t)},_.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(n(i%2==1),3===i){var r=this.m.add(new h(1)).iushrn(2);return this.pow(t,r)}for(var e=this.m.subn(1),o=0;!e.isZero()&&0===e.andln(1);)o++,e.iushrn(1);n(!e.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var m=this.pow(l,e),f=this.pow(t,e.addn(1).iushrn(1)),d=this.pow(t,e),p=o;0!==d.cmp(s);){for(var M=d,v=0;0!==M.cmp(s);v++)M=M.redSqr();n(v<p);var g=this.pow(m,new h(1).iushln(p-v-1));f=f.redMul(g),m=g.redSqr(),d=d.redMul(m),p=v}return f},_.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},_.prototype.pow=function(t,i){if(i.isZero())return new h(1);if(0===i.cmpn(1))return t.clone();var r=new Array(16);r[0]=new h(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var e=r[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),n=i.length-1;n>=0;n--){for(var a=i.words[n],l=u-1;l>=0;l--){var m=a>>l&1;e!==r[0]&&(e=this.sqr(e)),0!==m||0!==o?(o<<=1,o|=m,(4==++s||0===n&&0===l)&&(e=this.mul(e,r[o]),s=0,o=0)):s=0}u=26}return e},_.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},_.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new k(t)},e(k,_),k.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},k.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},k.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=r.isub(n).iushrn(this.shift),h=e;return e.cmp(this.m)>=0?h=e.isub(this.m):e.cmpn(0)<0&&(h=e.iadd(this.m)),h._forceRed(this)},k.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var r=t.mul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=r.isub(n).iushrn(this.shift),o=e;return e.cmp(this.m)>=0?o=e.isub(this.m):e.cmpn(0)<0&&(o=e.iadd(this.m)),o._forceRed(this)},k.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},83206:(t,i,r)=>{var n=r(45033),e=r(49604);t.exports=function(t){if("string"==typeof t||"number"==typeof t){var i=new n(1),r=String(t).toLowerCase().trim(),h="0x"===r.substr(0,2)||"-0x"===r.substr(0,3),o=e(r);if("-"===o.substr(0,1)&&(o=e(o.slice(1)),i=new n(-1,10)),!(o=""===o?"0":o).match(/^-?[0-9]+$/)&&o.match(/^[0-9A-Fa-f]+$/)||o.match(/^[a-fA-F]+$/)||!0===h&&o.match(/^[0-9A-Fa-f]+$/))return new n(o,16).mul(i);if((o.match(/^-?[0-9]+$/)||""===o)&&!1===h)return new n(o,10).mul(i)}else if("object"==typeof t&&t.toString&&!t.pop&&!t.push&&t.toString(10).match(/^-?[0-9]+$/)&&(t.mul||t.dividedToIntegerBy))return new n(t.toString(10),10);throw new Error("[number-to-bn] while converting number "+JSON.stringify(t)+" to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.")}},57458:(t,i)=>{!function(t){var i,r,n,e=String.fromCharCode;function h(t){for(var i,r,n=[],e=0,h=t.length;e<h;)(i=t.charCodeAt(e++))>=55296&&i<=56319&&e<h?56320==(64512&(r=t.charCodeAt(e++)))?n.push(((1023&i)<<10)+(1023&r)+65536):(n.push(i),e--):n.push(i);return n}function o(t){if(t>=55296&&t<=57343)throw Error("Lone surrogate U+"+t.toString(16).toUpperCase()+" is not a scalar value")}function s(t,i){return e(t>>i&63|128)}function u(t){if(0==(4294967168&t))return e(t);var i="";return 0==(4294965248&t)?i=e(t>>6&31|192):0==(4294901760&t)?(o(t),i=e(t>>12&15|224),i+=s(t,6)):0==(4292870144&t)&&(i=e(t>>18&7|240),i+=s(t,12),i+=s(t,6)),i+e(63&t|128)}function a(){if(n>=r)throw Error("Invalid byte index");var t=255&i[n];if(n++,128==(192&t))return 63&t;throw Error("Invalid continuation byte")}function l(){var t,e;if(n>r)throw Error("Invalid byte index");if(n==r)return!1;if(t=255&i[n],n++,0==(128&t))return t;if(192==(224&t)){if((e=(31&t)<<6|a())>=128)return e;throw Error("Invalid continuation byte")}if(224==(240&t)){if((e=(15&t)<<12|a()<<6|a())>=2048)return o(e),e;throw Error("Invalid continuation byte")}if(240==(248&t)&&(e=(7&t)<<18|a()<<12|a()<<6|a())>=65536&&e<=1114111)return e;throw Error("Invalid UTF-8 detected")}t.version="3.0.0",t.encode=function(t){for(var i=h(t),r=i.length,n=-1,e="";++n<r;)e+=u(i[n]);return e},t.decode=function(t){i=h(t),r=i.length,n=0;for(var o,s=[];!1!==(o=l());)s.push(o);return function(t){for(var i,r=t.length,n=-1,h="";++n<r;)(i=t[n])>65535&&(h+=e((i-=65536)>>>10&1023|55296),i=56320|1023&i),h+=e(i);return h}(s)}}(i)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,