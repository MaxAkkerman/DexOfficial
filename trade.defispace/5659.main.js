(self.webpackChunkmy_swap=self.webpackChunkmy_swap||[]).push([[5659],{85659:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});var r=t(76522);function a(e,n,t,r,a,o,l){try{var i=e[o](l),s=i.value}catch(e){return void t(e)}i.done?n(s):Promise.resolve(s).then(r,a)}const o=function(e){var n,t,o=e.preferred;return{name:e.label||"Blank Wallet",iconSrc:e.iconSrc,svg:e.svg||'\n\t<svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n\t\t<path fill-rule="evenodd" clip-rule="evenodd" d="M15 30C23.2843 30 30 23.2843 30 15C30 6.71573 23.2843 0 15 0C6.71573 0 0 6.71573 0 15C0 23.2843 6.71573 30 15 30ZM23.125 6.875H6.875V23.125H23.125V6.875Z" fill="currentColor"/>\n\t</svg>\n',wallet:(n=regeneratorRuntime.mark((function e(n){var t,r,a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.getProviderName,r=n.createModernProviderInterface,a=n.createLegacyProviderInterface,o=window.ethereum||window.web3&&window.web3.currentProvider,e.abrupt("return",{provider:o,interface:o&&"BlankWallet"===t(o)?"function"==typeof o.enable?r(o):a(o):null});case 3:case"end":return e.stop()}}),e)})),t=function(){var e=this,t=arguments;return new Promise((function(r,o){var l=n.apply(e,t);function i(e){a(l,r,o,i,s,"next",e)}function s(e){a(l,r,o,i,s,"throw",e)}i(void 0)}))},function(e){return t.apply(this,arguments)}),type:"injected",link:"https://www.goblank.io/",installMessage:r.e,desktop:!0,mobile:!1,preferred:o}}},76522:(e,n,t)=>{"use strict";t.d(n,{e:()=>r,m:()=>a});var r=function(e){var n=e.currentWallet,t=e.selectedWallet;return n?'\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    We have detected that you already have\n    <b>'.concat(n,"</b>\n    installed. If you would prefer to use\n    <b>").concat(t,'</b>\n    instead, then click below to install.\n    </p>\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    <b>Tip:</b>\n    If you already have ').concat(t,' installed, check your\n    browser extension settings to make sure that you have it enabled\n    and that you have disabled any other browser extension wallets.\n    <span\n      class="bn-onboard-clickable"\n      style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;"\n      onclick="window.location.reload();">\n      Then refresh the page.\n    </span>\n    </p>\n    '):'\n    <p style="font-size: 0.889rem; font-family: inherit; margin: 0.889rem 0;">\n    You\'ll need to install <b>'.concat(t,'</b> to continue. Once you have it installed, go ahead and\n    <span\n    class="bn-onboard-clickable"\n      style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;"\n      onclick={window.location.reload();}>\n      refresh the page.\n    </span>\n    ').concat("Opera"===t?'<br><br><i>Hint: If you already have Opera installed, make sure that your web3 wallet is <a style="color: #4a90e2; font-size: 0.889rem; font-family: inherit;" class="bn-onboard-clickable" href="https://help.opera.com/en/touch/crypto-wallet/" rel="noreferrer noopener" target="_blank">enabled</a></i>':"","\n    </p>\n    ")},a=function(e){var n=e.selectedWallet;return'\n  <p style="font-size: 0.889rem;">\n  Tap the button below to <b>Open '.concat(n,"</b>. Please access this site on ").concat(n,"'s in-app browser for a seamless experience.\n  </p>\n  ")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1zd2FwLy4vbm9kZV9tb2R1bGVzL2JuYy1vbmJvYXJkL2Rpc3QvZXNtL2JsYW5rd2FsbGV0LWMyMjFkOTg1LmpzIiwid2VicGFjazovL215LXN3YXAvLi9ub2RlX21vZHVsZXMvYm5jLW9uYm9hcmQvZGlzdC9lc20vY29udGVudC02MTJiZDA0Yi5qcyJdLCJuYW1lcyI6WyJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJhcmciLCJpbmZvIiwidmFsdWUiLCJlcnJvciIsImRvbmUiLCJQcm9taXNlIiwidGhlbiIsIm9wdGlvbnMiLCJmbiIsIl93YWxsZXQiLCJwcmVmZXJyZWQiLCJuYW1lIiwibGFiZWwiLCJpY29uU3JjIiwic3ZnIiwid2FsbGV0IiwicmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJoZWxwZXJzIiwiZ2V0UHJvdmlkZXJOYW1lIiwiY3JlYXRlTW9kZXJuUHJvdmlkZXJJbnRlcmZhY2UiLCJjcmVhdGVMZWdhY3lQcm92aWRlckludGVyZmFjZSIsInByb3ZpZGVyIiwid3JhcCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJ3aW5kb3ciLCJldGhlcmV1bSIsIndlYjMiLCJjdXJyZW50UHJvdmlkZXIiLCJhYnJ1cHQiLCJlbmFibGUiLCJzdG9wIiwic2VsZiIsInRoaXMiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJfeCIsInR5cGUiLCJsaW5rIiwiaW5zdGFsbE1lc3NhZ2UiLCJlIiwiZGVza3RvcCIsIm1vYmlsZSIsImV4dGVuc2lvbkluc3RhbGxNZXNzYWdlIiwiY3VycmVudFdhbGxldCIsInNlbGVjdGVkV2FsbGV0IiwiY29uY2F0IiwibW9iaWxlV2FsbGV0SW5zdGFsbE1lc3NhZ2UiXSwibWFwcGluZ3MiOiJnSkFBQSxTQUFTQSxFQUFtQkMsRUFBS0MsRUFBU0MsRUFBUUMsRUFBT0MsRUFBUUMsRUFBS0MsR0FBTyxJQUFNLElBQUlDLEVBQU9QLEVBQUlLLEdBQUtDLEdBQVVFLEVBQVFELEVBQUtDLE1BQVMsTUFBT0MsR0FBd0IsWUFBZlAsRUFBT08sR0FBc0JGLEVBQUtHLEtBQVFULEVBQVFPLEdBQWlCRyxRQUFRVixRQUFRTyxHQUFPSSxLQUFLVCxFQUFPQyxHQXFEN1AsUUE5Q0EsU0FBcUJTLEdBQ25CLElBTnlCQyxFQWVqQkMsRUFUSkMsRUFBWUgsRUFBUUcsVUFJeEIsTUFBTyxDQUNMQyxLQUpVSixFQUFRSyxPQUlILGVBQ2ZDLFFBSllOLEVBQVFNLFFBS3BCQyxJQUpRUCxFQUFRTyxLQU5FLHlWQVdsQkMsUUFkdUJQLEVBZXlCUSxtQkFBbUJDLE1BQUssU0FBU0MsRUFBUUMsR0FDckYsSUFBSUMsRUFBaUJDLEVBQStCQyxFQUErQkMsRUFDbkYsT0FBT1AsbUJBQW1CUSxNQUFLLFNBQWtCQyxHQUMvQyxPQUNFLE9BQVFBLEVBQVNDLEtBQU9ELEVBQVNFLE1BQy9CLEtBQUssRUFHSCxPQUZBUCxFQUFrQkQsRUFBUUMsZ0JBQWlCQyxFQUFnQ0YsRUFBUUUsOEJBQStCQyxFQUFnQ0gsRUFBUUcsOEJBQzFKQyxFQUFXSyxPQUFPQyxVQUFZRCxPQUFPRSxNQUFRRixPQUFPRSxLQUFLQyxnQkFDbEROLEVBQVNPLE9BQU8sU0FBVSxDQUMvQlQsU0FBVUEsRUFDVixVQUFhQSxHQUEwQyxnQkFBOUJILEVBQWdCRyxHQUF5RCxtQkFBcEJBLEVBQVNVLE9BQXdCWixFQUE4QkUsR0FBWUQsRUFBOEJDLEdBQVksT0FHdk0sS0FBSyxFQUNMLElBQUssTUFDSCxPQUFPRSxFQUFTUyxVQUdyQmhCLE1BbEJEVCxFQWY4QixXQUFjLElBQUkwQixFQUFPQyxLQUFNQyxFQUFPQyxVQUFXLE9BQU8sSUFBSWpDLFNBQVEsU0FBVVYsRUFBU0MsR0FBVSxJQUFJRixFQUFNYyxFQUFHK0IsTUFBTUosRUFBTUUsR0FBTyxTQUFTeEMsRUFBTUssR0FBU1QsRUFBbUJDLEVBQUtDLEVBQVNDLEVBQVFDLEVBQU9DLEVBQVEsT0FBUUksR0FBVSxTQUFTSixFQUFPMEMsR0FBTy9DLEVBQW1CQyxFQUFLQyxFQUFTQyxFQUFRQyxFQUFPQyxFQUFRLFFBQVMwQyxHQUFRM0MsT0FBTTRDLE9Bb0MzVyxTQUFnQkMsR0FDZCxPQUFPakMsRUFBUThCLE1BQU1ILEtBQU1FLGFBSy9CSyxLQUFNLFdBQ05DLEtBQU0sMEJBQ05DLGVBQWdCLEVBQUFDLEVBQ2hCQyxTQUFTLEVBQ1RDLFFBQVEsRUFDUnRDLFVBQVdBLEssc0RDakRmLElBQUl1QyxFQUEwQixTQUFpQzlCLEdBQzdELElBQUkrQixFQUFnQi9CLEVBQVErQixjQUN4QkMsRUFBaUJoQyxFQUFRZ0MsZUFFN0IsT0FBSUQsRUFDSyx3SUFBMElFLE9BQU9GLEVBQWUsNERBQTRERSxPQUFPRCxFQUFnQix3TEFBMExDLE9BQU9ELEVBQWdCLHFZQUVwYyxvSEFBcUhDLE9BQU9ELEVBQWdCLDZRQUFpUkMsT0FBMEIsVUFBbkJELEVBQTZCLDhTQUFnVCxHQUFJLHFCQUk1dkJFLEVBQTZCLFNBQW9DbEMsR0FDbkUsSUFBSWdDLEVBQWlCaEMsRUFBUWdDLGVBQzdCLE1BQU8sMkVBQTZFQyxPQUFPRCxFQUFnQixxQ0FBcUNDLE9BQU9ELEVBQWdCIiwiZmlsZSI6IjU2NTkubWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsgdHJ5IHsgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOyB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOyB9IGNhdGNoIChlcnJvcikgeyByZWplY3QoZXJyb3IpOyByZXR1cm47IH0gaWYgKGluZm8uZG9uZSkgeyByZXNvbHZlKHZhbHVlKTsgfSBlbHNlIHsgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOyB9IH1cblxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTsgfSBmdW5jdGlvbiBfdGhyb3coZXJyKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpOyB9IF9uZXh0KHVuZGVmaW5lZCk7IH0pOyB9OyB9XG5cbmltcG9ydCB7IGUgYXMgZXh0ZW5zaW9uSW5zdGFsbE1lc3NhZ2UgfSBmcm9tICcuL2NvbnRlbnQtNjEyYmQwNGIuanMnO1xudmFyIGJsYW5rd2FsbGV0SWNvbiA9IFwiXFxuXFx0PHN2ZyB3aWR0aD1cXFwiMzBcXFwiIGhlaWdodD1cXFwiMzBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMCAzMFxcXCIgZmlsbD1cXFwibm9uZVxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj5cXG5cXHRcXHQ8cGF0aCBmaWxsLXJ1bGU9XFxcImV2ZW5vZGRcXFwiIGNsaXAtcnVsZT1cXFwiZXZlbm9kZFxcXCIgZD1cXFwiTTE1IDMwQzIzLjI4NDMgMzAgMzAgMjMuMjg0MyAzMCAxNUMzMCA2LjcxNTczIDIzLjI4NDMgMCAxNSAwQzYuNzE1NzMgMCAwIDYuNzE1NzMgMCAxNUMwIDIzLjI4NDMgNi43MTU3MyAzMCAxNSAzMFpNMjMuMTI1IDYuODc1SDYuODc1VjIzLjEyNUgyMy4xMjVWNi44NzVaXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiLz5cXG5cXHQ8L3N2Zz5cXG5cIjtcblxuZnVuY3Rpb24gYmxhbmt3YWxsZXQob3B0aW9ucykge1xuICB2YXIgcHJlZmVycmVkID0gb3B0aW9ucy5wcmVmZXJyZWQsXG4gICAgICBsYWJlbCA9IG9wdGlvbnMubGFiZWwsXG4gICAgICBpY29uU3JjID0gb3B0aW9ucy5pY29uU3JjLFxuICAgICAgc3ZnID0gb3B0aW9ucy5zdmc7XG4gIHJldHVybiB7XG4gICAgbmFtZTogbGFiZWwgfHwgJ0JsYW5rIFdhbGxldCcsXG4gICAgaWNvblNyYzogaWNvblNyYyxcbiAgICBzdmc6IHN2ZyB8fCBibGFua3dhbGxldEljb24sXG4gICAgd2FsbGV0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3dhbGxldCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShoZWxwZXJzKSB7XG4gICAgICAgIHZhciBnZXRQcm92aWRlck5hbWUsIGNyZWF0ZU1vZGVyblByb3ZpZGVySW50ZXJmYWNlLCBjcmVhdGVMZWdhY3lQcm92aWRlckludGVyZmFjZSwgcHJvdmlkZXI7XG4gICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBnZXRQcm92aWRlck5hbWUgPSBoZWxwZXJzLmdldFByb3ZpZGVyTmFtZSwgY3JlYXRlTW9kZXJuUHJvdmlkZXJJbnRlcmZhY2UgPSBoZWxwZXJzLmNyZWF0ZU1vZGVyblByb3ZpZGVySW50ZXJmYWNlLCBjcmVhdGVMZWdhY3lQcm92aWRlckludGVyZmFjZSA9IGhlbHBlcnMuY3JlYXRlTGVnYWN5UHJvdmlkZXJJbnRlcmZhY2U7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXIgPSB3aW5kb3cuZXRoZXJldW0gfHwgd2luZG93LndlYjMgJiYgd2luZG93LndlYjMuY3VycmVudFByb3ZpZGVyO1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwge1xuICAgICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyLFxuICAgICAgICAgICAgICAgICAgXCJpbnRlcmZhY2VcIjogcHJvdmlkZXIgJiYgZ2V0UHJvdmlkZXJOYW1lKHByb3ZpZGVyKSA9PT0gJ0JsYW5rV2FsbGV0JyA/IHR5cGVvZiBwcm92aWRlci5lbmFibGUgPT09ICdmdW5jdGlvbicgPyBjcmVhdGVNb2Rlcm5Qcm92aWRlckludGVyZmFjZShwcm92aWRlcikgOiBjcmVhdGVMZWdhY3lQcm92aWRlckludGVyZmFjZShwcm92aWRlcikgOiBudWxsXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9jYWxsZWUpO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiB3YWxsZXQoX3gpIHtcbiAgICAgICAgcmV0dXJuIF93YWxsZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHdhbGxldDtcbiAgICB9KCksXG4gICAgdHlwZTogJ2luamVjdGVkJyxcbiAgICBsaW5rOiBcImh0dHBzOi8vd3d3LmdvYmxhbmsuaW8vXCIsXG4gICAgaW5zdGFsbE1lc3NhZ2U6IGV4dGVuc2lvbkluc3RhbGxNZXNzYWdlLFxuICAgIGRlc2t0b3A6IHRydWUsXG4gICAgbW9iaWxlOiBmYWxzZSxcbiAgICBwcmVmZXJyZWQ6IHByZWZlcnJlZFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBibGFua3dhbGxldDsiLCJ2YXIgZXh0ZW5zaW9uSW5zdGFsbE1lc3NhZ2UgPSBmdW5jdGlvbiBleHRlbnNpb25JbnN0YWxsTWVzc2FnZShoZWxwZXJzKSB7XG4gIHZhciBjdXJyZW50V2FsbGV0ID0gaGVscGVycy5jdXJyZW50V2FsbGV0LFxuICAgICAgc2VsZWN0ZWRXYWxsZXQgPSBoZWxwZXJzLnNlbGVjdGVkV2FsbGV0O1xuXG4gIGlmIChjdXJyZW50V2FsbGV0KSB7XG4gICAgcmV0dXJuIFwiXFxuICAgIDxwIHN0eWxlPVxcXCJmb250LXNpemU6IDAuODg5cmVtOyBmb250LWZhbWlseTogaW5oZXJpdDsgbWFyZ2luOiAwLjg4OXJlbSAwO1xcXCI+XFxuICAgIFdlIGhhdmUgZGV0ZWN0ZWQgdGhhdCB5b3UgYWxyZWFkeSBoYXZlXFxuICAgIDxiPlwiLmNvbmNhdChjdXJyZW50V2FsbGV0LCBcIjwvYj5cXG4gICAgaW5zdGFsbGVkLiBJZiB5b3Ugd291bGQgcHJlZmVyIHRvIHVzZVxcbiAgICA8Yj5cIikuY29uY2F0KHNlbGVjdGVkV2FsbGV0LCBcIjwvYj5cXG4gICAgaW5zdGVhZCwgdGhlbiBjbGljayBiZWxvdyB0byBpbnN0YWxsLlxcbiAgICA8L3A+XFxuICAgIDxwIHN0eWxlPVxcXCJmb250LXNpemU6IDAuODg5cmVtOyBmb250LWZhbWlseTogaW5oZXJpdDsgbWFyZ2luOiAwLjg4OXJlbSAwO1xcXCI+XFxuICAgIDxiPlRpcDo8L2I+XFxuICAgIElmIHlvdSBhbHJlYWR5IGhhdmUgXCIpLmNvbmNhdChzZWxlY3RlZFdhbGxldCwgXCIgaW5zdGFsbGVkLCBjaGVjayB5b3VyXFxuICAgIGJyb3dzZXIgZXh0ZW5zaW9uIHNldHRpbmdzIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdSBoYXZlIGl0IGVuYWJsZWRcXG4gICAgYW5kIHRoYXQgeW91IGhhdmUgZGlzYWJsZWQgYW55IG90aGVyIGJyb3dzZXIgZXh0ZW5zaW9uIHdhbGxldHMuXFxuICAgIDxzcGFuXFxuICAgICAgY2xhc3M9XFxcImJuLW9uYm9hcmQtY2xpY2thYmxlXFxcIlxcbiAgICAgIHN0eWxlPVxcXCJjb2xvcjogIzRhOTBlMjsgZm9udC1zaXplOiAwLjg4OXJlbTsgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxcIlxcbiAgICAgIG9uY2xpY2s9XFxcIndpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcXFwiPlxcbiAgICAgIFRoZW4gcmVmcmVzaCB0aGUgcGFnZS5cXG4gICAgPC9zcGFuPlxcbiAgICA8L3A+XFxuICAgIFwiKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJcXG4gICAgPHAgc3R5bGU9XFxcImZvbnQtc2l6ZTogMC44ODlyZW07IGZvbnQtZmFtaWx5OiBpbmhlcml0OyBtYXJnaW46IDAuODg5cmVtIDA7XFxcIj5cXG4gICAgWW91J2xsIG5lZWQgdG8gaW5zdGFsbCA8Yj5cIi5jb25jYXQoc2VsZWN0ZWRXYWxsZXQsIFwiPC9iPiB0byBjb250aW51ZS4gT25jZSB5b3UgaGF2ZSBpdCBpbnN0YWxsZWQsIGdvIGFoZWFkIGFuZFxcbiAgICA8c3BhblxcbiAgICBjbGFzcz1cXFwiYm4tb25ib2FyZC1jbGlja2FibGVcXFwiXFxuICAgICAgc3R5bGU9XFxcImNvbG9yOiAjNGE5MGUyOyBmb250LXNpemU6IDAuODg5cmVtOyBmb250LWZhbWlseTogaW5oZXJpdDtcXFwiXFxuICAgICAgb25jbGljaz17d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO30+XFxuICAgICAgcmVmcmVzaCB0aGUgcGFnZS5cXG4gICAgPC9zcGFuPlxcbiAgICBcIikuY29uY2F0KHNlbGVjdGVkV2FsbGV0ID09PSAnT3BlcmEnID8gJzxicj48YnI+PGk+SGludDogSWYgeW91IGFscmVhZHkgaGF2ZSBPcGVyYSBpbnN0YWxsZWQsIG1ha2Ugc3VyZSB0aGF0IHlvdXIgd2ViMyB3YWxsZXQgaXMgPGEgc3R5bGU9XCJjb2xvcjogIzRhOTBlMjsgZm9udC1zaXplOiAwLjg4OXJlbTsgZm9udC1mYW1pbHk6IGluaGVyaXQ7XCIgY2xhc3M9XCJibi1vbmJvYXJkLWNsaWNrYWJsZVwiIGhyZWY9XCJodHRwczovL2hlbHAub3BlcmEuY29tL2VuL3RvdWNoL2NyeXB0by13YWxsZXQvXCIgcmVsPVwibm9yZWZlcnJlciBub29wZW5lclwiIHRhcmdldD1cIl9ibGFua1wiPmVuYWJsZWQ8L2E+PC9pPicgOiAnJywgXCJcXG4gICAgPC9wPlxcbiAgICBcIik7XG4gIH1cbn07XG5cbnZhciBtb2JpbGVXYWxsZXRJbnN0YWxsTWVzc2FnZSA9IGZ1bmN0aW9uIG1vYmlsZVdhbGxldEluc3RhbGxNZXNzYWdlKGhlbHBlcnMpIHtcbiAgdmFyIHNlbGVjdGVkV2FsbGV0ID0gaGVscGVycy5zZWxlY3RlZFdhbGxldDtcbiAgcmV0dXJuIFwiXFxuICA8cCBzdHlsZT1cXFwiZm9udC1zaXplOiAwLjg4OXJlbTtcXFwiPlxcbiAgVGFwIHRoZSBidXR0b24gYmVsb3cgdG8gPGI+T3BlbiBcIi5jb25jYXQoc2VsZWN0ZWRXYWxsZXQsIFwiPC9iPi4gUGxlYXNlIGFjY2VzcyB0aGlzIHNpdGUgb24gXCIpLmNvbmNhdChzZWxlY3RlZFdhbGxldCwgXCIncyBpbi1hcHAgYnJvd3NlciBmb3IgYSBzZWFtbGVzcyBleHBlcmllbmNlLlxcbiAgPC9wPlxcbiAgXCIpO1xufTtcblxuZXhwb3J0IHsgZXh0ZW5zaW9uSW5zdGFsbE1lc3NhZ2UgYXMgZSwgbW9iaWxlV2FsbGV0SW5zdGFsbE1lc3NhZ2UgYXMgbSB9OyJdLCJzb3VyY2VSb290IjoiIn0=